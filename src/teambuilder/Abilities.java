package teambuilder;

public class Abilities 
{
	public static final Ability adaptability = new Ability("Adaptability","adaptability","This Pokemon's attacks that receive STAB (Same Type Attack Bonus) are increased from 50% to 100%.","This Pokemon's same-type attack bonus (STAB) is increased from 1.5x to 2x.");
	public static final Ability aftermath = new Ability("Aftermath","aftermath","If a contact move knocks out this Pokemon, the opponent receives damage equal to one-fourth of its max HP.","If this Pokemon is KOed with a contact move, that move's user loses 1/4 its max HP.");
	public static final Ability aerilate = new Ability("Aerilate","aerilate","Turns all of this Pokemon's Normal-typed attacks into Flying-type and deal 1.3x damage. Does not affect Hidden Power.","This Pokemon's Normal moves become Flying-type and do 1.3x damage.");
	public static final Ability airlock = new Ability("Air Lock","airlock","While this Pokemon is active, all weather conditions and their effects are disabled.","While this Pokemon is active, all weather conditions and their effects are disabled.");
	public static final Ability analytic = new Ability("Analytic","analytic","If the user moves last, the power of that move is increased by 30%.","This Pokemon's attacks do 1.3x damage if it is the last to move in a turn.");
	public static final Ability angerpoint = new Ability("Anger Point","angerpoint","If this Pokemon, or its Substitute, is struck by a Critical Hit, its Attack is boosted to six stages.","If this Pokemon (not a Substitute) is hit by a critical hit, its Attack is boosted by 12.");
	public static final Ability anticipation = new Ability("Anticipation","anticipation","A warning is displayed if an opposing Pokemon has the moves Fissure, Guillotine, Horn Drill, Sheer Cold, or any attacking move from a type that is considered super effective against this Pokemon (including Counter, Mirror Coat, and Metal Burst). Hidden Power, Judgment, Natural Gift and Weather Ball are considered Normal-type moves. Flying Press is considered a Fighting-type move.","On switch-in, this Pokemon shudders if any foe has a super effective or OHKO move.");
	public static final Ability arenatrap = new Ability("Arena Trap","arenatrap","When this Pokemon enters the field, its opponents cannot switch or flee the battle unless they are part Flying-type, have the Levitate ability, are holding Shed Shell, or they use the moves Baton Pass or U-Turn. Flying-type and Levitate Pokemon cannot escape if they are holding Iron Ball or Gravity is in effect. Levitate Pokemon also cannot escape if their ability is disabled through other means, such as Skill Swap or Gastro Acid.","Prevents foes from switching out normally unless they have immunity to Ground.");
	public static final Ability aromaveil = new Ability("Aroma Veil","aromaveil","Protects this Pokemon and its allies from Attract, Disable, Encore, Heal Block, Taunt, and Torment.","Protects from Attract, Disable, Encore, Heal Block, Taunt, and Torment.");
	public static final Ability aurabreak = new Ability("Aura Break","aurabreak","Reverses the effect of Dark Aura and Fairy Aura.","Reverses the effect of Aura abilities.");
	public static final Ability baddreams = new Ability("Bad Dreams","baddreams","If asleep, each of this Pokemon's opponents receives damage equal to one-eighth of its max HP.","Causes sleeping adjacent foes to lose 1/8 of their max HP at the end of each turn.");
	public static final Ability battlearmor = new Ability("Battle Armor","battlearmor","Critical Hits cannot strike this Pokemon.","This Pokemon cannot be struck by a critical hit.");
	public static final Ability bigpecks = new Ability("Big Pecks","bigpecks","Prevents the Pokemon's Defense stat from being reduced.","Prevents other Pokemon from lowering this Pokemon's Defense.");
	public static final Ability blaze = new Ability("Blaze","blaze","When its health reaches one-third or less of its max HP, this Pokemon's Fire-type attacks receive a 50% boost in power.","When this Pokemon has 1/3 or less of its max HP, its Fire attacks do 1.5x damage.");
	public static final Ability bulletproof = new Ability("Bulletproof","bulletproof","This Pokemon is protected from some Ball and Bomb moves.","This Pokemon is protected from ball and bomb moves.");
	public static final Ability cheekpouch = new Ability("Cheek Pouch","cheekpouch","Restores HP when this Pokemon consumes a berry.","Restores HP when this Pokemon consumes a berry.");
	public static final Ability chlorophyll = new Ability("Chlorophyll","chlorophyll","If this Pokemon is active while Sunny Day is in effect, its speed is temporarily doubled.","If Sunny Day is active, this Pokemon's Speed is doubled.");
	public static final Ability clearbody = new Ability("Clear Body","clearbody","Opponents cannot reduce this Pokemon's stats; they can, however, modify stat changes with Power Swap, Guard Swap and Heart Swap and inflict stat boosts with Swagger and Flatter. This ability does not prevent self-inflicted stat reductions.","Prevents other Pokemon from lowering this Pokemon's stat stages.");
	public static final Ability cloudnine = new Ability("Cloud Nine","cloudnine","While this Pokemon is active, all weather conditions and their effects are disabled.","While this Pokemon is active, all weather conditions and their effects are disabled.");
	public static final Ability colorchange = new Ability("Color Change","colorchange","This Pokemon's type changes according to the type of the last move that hit this Pokemon.","This Pokemon's type changes to match the type of the last move that hit it.");
	public static final Ability competitive = new Ability("Competitive","competitive","Raises the user's Special Attack stat by two stages when a stat is lowered, including the Special Attack stat. This does not include self-induced stat drops like those from Close Combat.","This Pokemon's SpAtk is boosted by 2 for each of its stats that is lowered by a foe.");
	public static final Ability compoundeyes = new Ability("Compound Eyes","compoundeyes","The accuracy of this Pokemon's moves receives a 30% increase; for example, a 75% accurate move becomes 97.5% accurate.","This Pokemon's moves have their accuracy boosted to 1.3x.");
	public static final Ability contrary = new Ability("Contrary","contrary","Stat changes are inverted.","If this Pokemon has a stat boosted it is lowered instead, and vice versa.");
	public static final Ability cursedbody = new Ability("Cursed Body","cursedbody","30% chance of disabling one of the opponent's moves when attacked. This works even if the attacker is behind a Substitute, but will not activate if the Pokemon with Cursed Body is behind a Substitute.","If this Pokemon is hit by an attack, there is a 30% chance that move gets Disabled.");
	public static final Ability cutecharm = new Ability("Cute Charm","cutecharm","If an opponent of the opposite gender directly attacks this Pokemon, there is a 30% chance that the opponent will become Attracted to this Pokemon.","30% chance of infatuating Pokemon of the opposite gender if they make contact.");
	public static final Ability damp = new Ability("Damp","damp","While this Pokemon is active, no Pokemon on the field can use Selfdestruct or Explosion.","While this Pokemon is active, Selfdestruct, Explosion, and Aftermath do not work.");
	public static final Ability darkaura = new Ability("Dark Aura","darkaura","Increases the power of all Dark-type moves in battle to 1.33x.","Increases the power of all Dark-type moves in battle to 1.33x.");
	public static final Ability defeatist = new Ability("Defeatist","defeatist","Attack and Special Attack are halved when HP is less than half.","When this Pokemon has 1/2 or less of its max HP, its Attack and Sp. Atk are halved.");
	public static final Ability defiant = new Ability("Defiant","defiant","Raises the user's Attack stat by two stages when a stat is lowered, including the Attack stat. This does not include self-induced stat drops like those from Close Combat.","This Pokemon's Attack is boosted by 2 for each of its stats that is lowered by a foe.");
	public static final Ability download = new Ability("Download","download","If this Pokemon switches into an opponent with equal Defenses or higher Defense than Special Defense, this Pokemon's Special Attack receives a 50% boost. If this Pokemon switches into an opponent with higher Special Defense than Defense, this Pokemon's Attack receive a 50% boost.","On switch-in, Attack or Sp. Atk is boosted by 1 based on the foes' weaker Defense.");
	public static final Ability drizzle = new Ability("Drizzle","drizzle","When this Pokemon enters the battlefield, the weather becomes Rain Dance (for 5 turns normally, or 8 turns while holding Damp Rock).","On switch-in, the weather becomes Rain Dance.");
	public static final Ability drought = new Ability("Drought","drought","When this Pokemon enters the battlefield, the weather becomes Sunny Day (for 5 turns normally, or 8 turns while holding Heat Rock).","On switch-in, the weather becomes Sunny Day.");
	public static final Ability dryskin = new Ability("Dry Skin","dryskin","This Pokemon absorbs Water attacks and gains a weakness to Fire attacks. If Sunny Day is in effect, this Pokemon takes damage. If Rain Dance is in effect, this Pokemon recovers health.","This Pokemon is healed 1/4 by Water, 1/8 by Rain; is hurt 1.25x by Fire, 1/8 by Sun.");
	public static final Ability earlybird = new Ability("Early Bird","earlybird","This Pokemon will remain asleep for half as long as it normally would; this includes both opponent-induced sleep and user-induced sleep via Rest.","This Pokemon's sleep status lasts half as long as usual, self-induced or not.");
	public static final Ability effectspore = new Ability("Effect Spore","effectspore","If an opponent directly attacks this Pokemon, there is a 30% chance that the opponent will become either poisoned, paralyzed or put to sleep. There is an equal chance to inflict each status.","30% chance of poisoning, paralyzing, or causing sleep on Pokemon making contact.");
	public static final Ability fairyaura = new Ability("Fairy Aura","fairyaura","Increases the power of all Fairy-type moves in battle to 1.33x.","Increases the power of all Fairy-type moves in battle to 1.33x.");
	public static final Ability filter = new Ability("Filter","filter","This Pokemon receives one-fourth reduced damage from Super Effective attacks.","This Pokemon receives 3/4 damage from super effective attacks.");
	public static final Ability flamebody = new Ability("Flame Body","flamebody","If an opponent directly attacks this Pokemon, there is a 30% chance that the opponent will become burned.","30% chance of burning a Pokemon making contact with this Pokemon.");
	public static final Ability flareboost = new Ability("Flare Boost","flareboost","When the user with this ability is burned, its Special Attack is raised by 50%.","When this Pokemon is burned, its special attacks do 1.5x damage.");
	public static final Ability flashfire = new Ability("Flash Fire","flashfire","This Pokemon is immune to all Fire-type attacks; additionally, its own Fire-type attacks receive a 50% boost if a Fire-type move hits this Pokemon. Multiple boosts do not occur if this Pokemon is hit with multiple Fire-type attacks.","This Pokemon's Fire attacks do 1.5x damage if hit by one Fire move; Fire immunity.");
	public static final Ability flowergift = new Ability("Flower Gift","flowergift","If this Pokemon is active while Sunny Day is in effect, its Attack and Special Defense stats (as well as its partner's stats in double battles) receive a 50% boost.","If user is Cherrim and Sunny Day is active, it and allies' Attack and Sp. Def are 1.5x.");
	public static final Ability flowerveil = new Ability("Flower Veil","flowerveil","Prevents ally Grass-type Pokemon from being statused or having their stats lowered.","Prevents lowering of ally Grass-type Pokemon's stats.");
	public static final Ability forecast = new Ability("Forecast","forecast","This Pokemon's type changes according to the current weather conditions: it becomes Fire-type during Sunny Day, Water-type during Rain Dance, Ice-type during Hail and remains its regular type otherwise.","Castform's type changes to the current weather condition's type, except Sandstorm.");
	public static final Ability forewarn = new Ability("Forewarn","forewarn","The move with the highest Base Power in the opponent's moveset is revealed.","On switch-in, this Pokemon is alerted to the foes' move with the highest Base Power.");
	public static final Ability friendguard = new Ability("Friend Guard","friendguard","Reduces the damage received from an ally in a double or triple battle.","This Pokemon's allies receive 3/4 damage from other Pokemon's attacks.");
	public static final Ability frisk = new Ability("Frisk","frisk","When this Pokemon enters the field, it identifies all the opponent's held items.","On switch-in, this Pokemon identifies the foe's held items.");
	public static final Ability furcoat = new Ability("Fur Coat","furcoat","Halves the damage done to this Pokemon by physical attacks.","Halves physical damage done to this Pokemon.");
	public static final Ability galewings = new Ability("Gale Wings","galewings","This Pokemon's Flying-type moves have their priority increased by 1.","Gives priority to Flying-type moves.");
	public static final Ability gluttony = new Ability("Gluttony","gluttony","This Pokemon consumes its held berry when its health reaches 50% max HP or lower.","When this Pokemon has 1/2 or less of its max HP, it uses certain Berries early.");
	public static final Ability gooey = new Ability("Gooey","gooey","Contact with this Pokemon lowers the attacker's Speed stat by 1.","Contact with this Pokemon lowers the attacker's Speed.");
	public static final Ability grasspelt = new Ability("Grass Pelt","grasspelt","This Pokemon's Defense is boosted in Grassy Terrain","This Pokemon's Defense is boosted in Grassy Terrain.");
	public static final Ability guts = new Ability("Guts","guts","When this Pokemon is poisoned (including Toxic), burned, paralyzed or asleep (including self-induced Rest), its Attack stat receives a 50% boost; the burn status' Attack drop is also ignored.","If this Pokemon is statused, its Attack is 1.5x; burn's Attack drop is ignored.");
	public static final Ability harvest = new Ability("Harvest","harvest","When the user uses a held Berry, it has a 50% chance of having it restored at the end of the turn. This chance becomes 100% during Sunny Day.","50% chance this Pokemon's Berry is restored at the end of each turn. 100% in Sun.");
	public static final Ability healer = new Ability("Healer","healer","Has a 30% chance of curing an adjacent ally's status ailment at the end of each turn in Double and Triple Battles.","30% chance of curing an adjacent ally's status at the end of each turn.");
	public static final Ability heatproof = new Ability("Heatproof","heatproof","This Pokemon receives half damage from both Fire-type attacks and residual burn damage.","This Pokemon receives half damage from Fire-type attacks and burn damage.");
	public static final Ability heavymetal = new Ability("Heavy Metal","heavymetal","The user's weight is doubled. This increases user's base power of Heavy Slam and Heat Crash, as well as damage taken from the opponent's Low Kick and Grass Knot, due to these moves being calculated by the target's weight.","This Pokemon's weight is doubled.");
	public static final Ability honeygather = new Ability("Honey Gather","honeygather","If it is not already holding an item, this Pokemon may find and be holding Honey after a battle.","No competitive use.");
	public static final Ability hugepower = new Ability("Huge Power","hugepower","This Pokemon's Attack stat is doubled. Therefore, if this Pokemon's Attack stat on the status screen is 200, it effectively has an Attack stat of 400; which is then subject to the full range of stat boosts and reductions.","This Pokemon's Attack is doubled.");
	public static final Ability hustle = new Ability("Hustle","hustle","This Pokemon's Attack receives a 50% boost but its Physical attacks receive a 20% drop in Accuracy. For example, a 100% accurate move would become an 80% accurate move. The accuracy of moves that never miss, such as Aerial Ace, remains unaffected.","This Pokemon's Attack is 1.5x and accuracy of its physical attacks is 0.8x.");
	public static final Ability hydration = new Ability("Hydration","hydration","If this Pokemon is active while Rain Dance is in effect, it recovers from poison, paralysis, burn, sleep and freeze at the end of the turn.","This Pokemon has its status cured at the end of each turn if Rain Dance is active.");
	public static final Ability hypercutter = new Ability("Hyper Cutter","hypercutter","Opponents cannot reduce this Pokemon's Attack stat; they can, however, modify stat changes with Power Swap or Heart Swap and inflict a stat boost with Swagger. This ability does not prevent self-inflicted stat reductions.","Prevents other Pokemon from lowering this Pokemon's Attack.");
	public static final Ability icebody = new Ability("Ice Body","icebody","If active while Hail is in effect, this Pokemon recovers one-sixteenth of its max HP after each turn. If a non-Ice-type Pokemon receives this ability through Skill Swap, Role Play or the Trace ability, it will not take damage from Hail.","If Hail is active, this Pokemon heals 1/16 of its max HP each turn; immunity to Hail.");
	public static final Ability illuminate = new Ability("Illuminate","illuminate","When this Pokemon is in the first slot of the player's party, it doubles the rate of wild encounters.","No competitive use.");
	public static final Ability illusion = new Ability("Illusion","illusion","Illusion will change the appearance of the Pokemon to a different species. This is dependent on the last Pokemon in the player's party. Along with the species itself, Illusion is broken when the user is damaged, but is not broken by Substitute, weather conditions, status ailments, or entry hazards. Illusion will replicate the type of Poke Ball, the species name, and the gender of the Pokemon it is masquerading as.","This Pokemon appears as the last Pokemon in the party until it takes direct damage.");
	public static final Ability immunity = new Ability("Immunity","immunity","This Pokemon cannot become poisoned nor Toxic poisoned.","This Pokemon cannot be poisoned. Gaining this Ability while poisoned cures it.");
	public static final Ability imposter = new Ability("Imposter","imposter","As soon as the user comes into battle, it Transforms into its opponent, copying the opponent's stats exactly, with the exception of HP. Imposter copies all stat changes on the target originating from moves and abilities such as Swords Dance and Intimidate, but not from items such as Choice Specs. Imposter will not Transform the user if the opponent is an Illusion or if the opponent is behind a Substitute.","On switch-in, this Pokemon copies the foe it's facing; stats, moves, types, Ability.");
	public static final Ability infiltrator = new Ability("Infiltrator","infiltrator","Ignores Substitute, Reflect, Light Screen, and Safeguard on the target.","This Pokemon's moves ignore the foe's Substitute, Reflect, Light Screen, Safeguard, and Mist.");
	public static final Ability innerfocus = new Ability("Inner Focus","innerfocus","This Pokemon cannot be made to flinch.","This Pokemon cannot be made to flinch.");
	public static final Ability insomnia = new Ability("Insomnia","insomnia","This Pokemon cannot be put to sleep; this includes both opponent-induced sleep as well as user-induced sleep via Rest.","This Pokemon cannot fall asleep. Gaining this Ability while asleep cures it.");
	public static final Ability intimidate = new Ability("Intimidate","intimidate","When this Pokemon enters the field, the Attack stat of each of its opponents lowers by one stage.","On switch-in, this Pokemon lowers adjacent foes' Attack by 1.");
	public static final Ability ironbarbs = new Ability("Iron Barbs","ironbarbs","All moves that make contact with the Pokemon with Iron Barbs will damage the user by 1/8 of their maximum HP after damage is dealt.","This Pokemon causes other Pokemon making contact to lose 1/8 of their max HP.");
	public static final Ability ironfist = new Ability("Iron Fist","ironfist","This Pokemon receives a 20% power boost for the following attacks: Bullet Punch, Comet Punch, Dizzy Punch, Drain Punch, Dynamicpunch, Fire Punch, Focus Punch, Hammer Arm, Ice Punch, Mach Punch, Mega Punch, Meteor Mash, Shadow Punch, Sky Uppercut, and Thunderpunch. Sucker Punch, which is known Ambush in Japan, is not boosted.","This Pokemon's punch-based attacks do 1.2x damage. Sucker Punch is not boosted.");
	public static final Ability justified = new Ability("Justified","justified","Will raise the user's Attack stat one level when hit by any Dark-type moves. Unlike other abilities with immunity to certain typed moves, the user will still receive damage from the attack. Justified will raise Attack one level for each hit of a multi-hit move like Beat Up.","This Pokemon's Attack is boosted by 1 after it is damaged by a Dark-type attack.");
	public static final Ability keeneye = new Ability("Keen Eye","keeneye","This Pokemon's Accuracy cannot be lowered.","Prevents other Pokemon from lowering this Pokemon's accuracy.");
	public static final Ability klutz = new Ability("Klutz","klutz","This Pokemon ignores both the positive and negative effects of its held item, other than the speed-halving and EV-enhancing effects of Macho Brace, Power Anklet, Power Band, Power Belt, Power Bracer, Power Lens, and Power Weight. Fling cannot be used.","This Pokemon's held item has no effect, except Macho Brace. Fling cannot be used.");
	public static final Ability leafguard = new Ability("Leaf Guard","leafguard","If this Pokemon is active while Sunny Day is in effect, it cannot become poisoned, burned, paralyzed or put to sleep (other than user-induced Rest). Leaf Guard does not heal status effects that existed before Sunny Day came into effect.","If Sunny Day is active, this Pokemon cannot be statused and Rest will fail for it.");
	public static final Ability levitate = new Ability("Levitate","levitate","This Pokemon is immune to Ground-type attacks, Spikes, Toxic Spikes and the Arena Trap ability; it loses these immunities while holding Iron Ball, after using Ingrain or if Gravity is in effect.","This Pokemon is immune to Ground; Gravity, Ingrain, Smack Down, Iron Ball nullify it.");
	public static final Ability lightmetal = new Ability("Light Metal","lightmetal","The user's weight is halved. This decreases the damage taken from Low Kick and Grass Knot, and also lowers user's base power of Heavy Slam and Heat Crash, due these moves being calculated by the target and user's weight.","This Pokemon's weight is halved.");
	public static final Ability lightningrod = new Ability("Lightningrod","lightningrod","During double battles, this Pokemon draws any single-target Electric-type attack to itself. If an opponent uses an Electric-type attack that affects multiple Pokemon, those targets will be hit. This ability does not affect Electric Hidden Power or Judgment. The user is immune to Electric and its Special Attack is increased one stage when hit by one.","This Pokemon draws Electric moves to itself to boost Sp. Atk by 1; Electric immunity.");
	public static final Ability limber = new Ability("Limber","limber","This Pokemon cannot become paralyzed.","This Pokemon cannot be paralyzed. Gaining this Ability while paralyzed cures it.");
	public static final Ability liquidooze = new Ability("Liquid Ooze","liquidooze","When another Pokemon uses Absorb, Drain Punch, Dream Eater, Giga Drain, Leech Life, Leech Seed or Mega Drain against this Pokemon, the attacking Pokemon loses the amount of health that it would have gained.","This Pokemon damages those draining HP from it for as much as they would heal.");
	public static final Ability magicbounce = new Ability("Magic Bounce","magicbounce","Non-damaging moves are reflected back at the user.","This Pokemon blocks certain status moves and uses the move itself.");
	public static final Ability magicguard = new Ability("Magic Guard","magicguard","Prevents all damage except from direct attacks.","This Pokemon can only be damaged by direct attacks.");
	public static final Ability magician = new Ability("Magician","magician","If this Pokemon is not holding an item, it steals the held item of a target it hits with a move.","This Pokemon steals the held item of a target it hits with a move.");
	public static final Ability magmaarmor = new Ability("Magma Armor","magmaarmor","This Pokemon cannot become frozen.","This Pokemon cannot be frozen. Gaining this Ability while frozen cures it.");
	public static final Ability magnetpull = new Ability("Magnet Pull","magnetpull","When this Pokemon enters the field, Steel-type opponents cannot switch out nor flee the battle unless they are holding Shed Shell or use attacks like U-Turn or Baton Pass.","Prevents Steel-type foes from switching out normally.");
	public static final Ability marvelscale = new Ability("Marvel Scale","marvelscale","When this Pokemon becomes burned, poisoned (including Toxic), paralyzed, frozen or put to sleep (including self-induced sleep via Rest), its Defense receives a 50% boost.","If this Pokemon is statused, its Defense is 1.5x.");
	public static final Ability megalauncher = new Ability("Mega Launcher","megalauncher","Boosts the power of Aura and Pulse moves, such as Aura Sphere and Dark Pulse, by 50%.","Boosts the power of Aura/Pulse moves by 50%.");
	public static final Ability minus = new Ability("Minus","minus","This Pokemon's Special Attack receives a 50% boost in double battles if a partner has the Plus or Minus ability.","If an ally has the Ability Plus or Minus, this Pokemon's Sp. Atk is 1.5x.");
	public static final Ability moldbreaker = new Ability("Mold Breaker","moldbreaker","When this Pokemon uses any move, it nullifies the Ability of any active Pokemon that hinder or empower this Pokemon's attacks. These abilities include Battle Armor, Clear Body, Damp, Dry Skin, Filter, Flash Fire, Flower Gift, Heatproof, Herbivore, Hyper Cutter, Immunity, Inner Focus, Insomnia, Keen Eye, Leaf Guard, Levitate, Lightningrod, Limber, Magma Armor, Marvel Scale, Motor Drive, Oblivious, Own Tempo, Sand Veil, Shell Armor, Shield Dust, Simple, Snow Cloak, Solid Rock, Soundproof, Sticky Hold, Storm Drain, Sturdy, Suction Cups, Tangled Feet, Thick Fat, Unaware, Vital Spirit, Volt Absorb, Water Absorb, Water Veil, White Smoke and Wonder Guard.","This Pokemon's moves ignore any Ability that could modify the effectiveness.");
	public static final Ability moody = new Ability("Moody","moody","At the end of each turn, the Pokemon raises a random stat that isn't already +6 by two stages, and lowers a random stat that isn't already -6 by one stage. These stats include accuracy and evasion.","Boosts a random stat by 2 and lowers another stat by 1 at the end of each turn.");
	public static final Ability motordrive = new Ability("Motor Drive","motordrive","This Pokemon is immune to all Electric-type moves (including Status moves). If hit by an Electric-type attack, its Speed increases by one stage.","This Pokemon's Speed is boosted by 1 if hit by an Electric move; Electric immunity.");
	public static final Ability moxie = new Ability("Moxie","moxie","If this Pokemon knocks out another Pokemon with a damaging attack, its Attack is raised by one stage.","This Pokemon's Attack is boosted by 1 if it attacks and faints another Pokemon.");
	public static final Ability multiscale = new Ability("Multiscale","multiscale","If this Pokemon is at full HP, it takes half damage from attacks.","If this Pokemon is at full HP, it takes half damage from attacks.");
	public static final Ability multitype = new Ability("Multitype","multitype","If this Pokemon is Arceus, its type and sprite change to match its held Plate. Either way, this Pokemon is holding a Plate, the Plate cannot be taken (such as by Trick or Thief). This ability cannot be Skill Swapped, Role Played or Traced.","If this Pokemon is Arceus, its type changes to match its held Plate.");
	public static final Ability mummy = new Ability("Mummy","mummy","When the user is attacked by a contact move, the opposing Pokemon's ability is turned into Mummy as well. Multitype, Wonder Guard and Mummy itself are the only abilities not affected by Mummy. The effect of Mummy is not removed by Mold Breaker, Turboblaze, or Teravolt.","Pokemon making contact with this Pokemon have their Ability changed to Mummy.");
	public static final Ability naturalcure = new Ability("Natural Cure","naturalcure","When this Pokemon switches out of battle, it is cured of poison (including Toxic), paralysis, burn, freeze and sleep (including self-induced Rest).","This Pokemon has its status cured when it switches out.");
	public static final Ability noguard = new Ability("No Guard","noguard","Every attack used by or against this Pokemon will always hit, even during evasive two-turn moves such as Fly and Dig.","Every move used by or against this Pokemon will always hit.");
	public static final Ability normalize = new Ability("Normalize","normalize","Makes all of this Pokemon's attacks Normal-typed.","This Pokemon's moves all become Normal-typed.");
	public static final Ability oblivious = new Ability("Oblivious","oblivious","This Pokemon cannot be infatuated (by Attract or Cute Charm) or taunted. Gaining this Ability while afflicted by either condition cures it.","This Pokemon cannot be infatuated or taunted. Gaining this Ability cures it.");
	public static final Ability overcoat = new Ability("Overcoat","overcoat","In battle, the Pokemon does not take damage from weather conditions like Sandstorm or Hail. It is also immune to powder moves.","This Pokemon is immune to residual weather damage, and powder moves.");
	public static final Ability overgrow = new Ability("Overgrow","overgrow","When its health reaches one-third or less of its max HP, this Pokemon's Grass-type attacks receive a 50% boost in power.","When this Pokemon has 1/3 or less of its max HP, its Grass attacks do 1.5x damage.");
	public static final Ability owntempo = new Ability("Own Tempo","owntempo","This Pokemon cannot be confused. Gaining this Ability while confused cures it.","This Pokemon cannot be confused. Gaining this Ability while confused cures it.");
	public static final Ability parentalbond = new Ability("Parental Bond","parentalbond","Allows the Pokemon to hit twice with the same move in one turn. Second hit has 0.5x base power. Does not affect Status, multihit, or spread moves (in doubles).","Hits twice in one turn. Second hit has 0.5x base power.");
	public static final Ability pickup = new Ability("Pickup","pickup","If an opponent uses a consumable item, Pickup will give the Pokemon the item used, if it is not holding an item. If multiple Pickup Pokemon are in play, one will pick up a copy of the used Berry, and may or may not use it immediately. Works on Berries, Gems, Absorb Bulb, Focus Sash, Herbs, Cell Battery, Red Card, and anything that is thrown with Fling.","If this Pokemon has no item, it finds one used by an adjacent Pokemon this turn.");
	public static final Ability pickpocket = new Ability("Pickpocket","pickpocket","If this Pokemon has no item, it steals an item off an attacking Pokemon making contact.","If this Pokemon has no item, it steals an item off a Pokemon making contact.");
	public static final Ability pixilate = new Ability("Pixilate","pixilate","Turns all of this Pokemon's Normal-typed attacks into Fairy-type and deal 1.3x damage. Does not affect Hidden Power.","This Pokemon's Normal moves become Fairy-type and do 1.3x damage.");
	public static final Ability plus = new Ability("Plus","plus","This Pokemon's Special Attack receives a 50% boost in double battles if a partner has the Plus or Minus ability.","If an ally has the Ability Plus or Minus, this Pokemon's Sp. Atk is 1.5x.");
	public static final Ability poisonheal = new Ability("Poison Heal","poisonheal","If this Pokemon becomes poisoned (including Toxic), it will recover 1/8 of its max HP after each turn.","This Pokemon is healed by 1/8 of its max HP each turn when poisoned; no HP loss.");
	public static final Ability poisonpoint = new Ability("Poison Point","poisonpoint","If an opponent contact attacks this Pokemon, there is a 30% chance that the opponent will become poisoned.","30% chance of poisoning a Pokemon making contact with this Pokemon.");
	public static final Ability poisontouch = new Ability("Poison Touch","poisontouch","This Pokemon's contact attacks have a 30% chance of poisoning the target.","This Pokemon's contact moves have a 30% chance of poisoning.");
	public static final Ability prankster = new Ability("Prankster","prankster","This Pokemon's Status moves have their priority increased by 1 stage.","This Pokemon's Status moves have their priority increased by 1.");
	public static final Ability pressure = new Ability("Pressure","pressure","If this Pokemon is the target of a foe's move, that move loses one additional PP.","If this Pokemon is the target of a foe's move, that move loses one additional PP.");
	public static final Ability protean = new Ability("Protean","protean","Right before this Pokemon uses a move, it changes its type to match that move. Hidden Power is interpreted as its Hidden Power type, rather than Normal.","Right before this Pokemon uses a move, it changes its type to match that move.");
	public static final Ability purepower = new Ability("Pure Power","purepower","This Pokemon's Attack stat is doubled. Note that this is the Attack stat itself, not the base Attack stat of its species.","This Pokemon's Attack is doubled.");
	public static final Ability quickfeet = new Ability("Quick Feet","quickfeet","When this Pokemon is poisoned (including Toxic), burned, paralyzed, asleep (including self-induced Rest) or frozen, its Speed stat receives a 50% boost; the paralysis status' Speed drop is also ignored.","If this Pokemon is statused, its Speed is 1.5x; paralysis' Speed drop is ignored.");
	public static final Ability raindish = new Ability("Rain Dish","raindish","If the weather is Rain Dance, this Pokemon recovers 1/16 of its max HP after each turn.","If the weather is Rain Dance, this Pokemon heals 1/16 of its max HP each turn.");
	public static final Ability rattled = new Ability("Rattled","rattled","Raises the user's Speed one stage when hit by a Dark-, Bug-, or Ghost-type move.","This Pokemon gets +1 Speed if hit by a Dark-, Bug-, or Ghost-type attack.");
	public static final Ability reckless = new Ability("Reckless","reckless","When this Pokemon uses an attack that causes recoil damage, or an attack that has a chance to cause recoil damage such as Jump Kick and High Jump Kick, the attacks's power receives a 20% boost.","This Pokemon's attacks with recoil or crash damage do 1.2x damage; not Struggle.");
	public static final Ability refrigerate = new Ability("Refrigerate","refrigerate","Turns all of this Pokemon's Normal-typed attacks into Ice-typed and deal 1.3x damage. Does not affect Hidden Power.","This Pokemon's Normal moves become Ice-type and do 1.3x damage.");
	public static final Ability regenerator = new Ability("Regenerator","regenerator","This Pokemon heals 1/3 of its max HP when it switches out.","This Pokemon heals 1/3 of its max HP when it switches out.");
	public static final Ability rivalry = new Ability("Rivalry","rivalry","This Pokemon's attacks do 1.25x damage if their target is the same gender, but 0.75x if their target is the opposite gender.","This Pokemon's attacks do 1.25x on same gender targets; 0.75x on opposite gender.");
	public static final Ability rockhead = new Ability("Rock Head","rockhead","This Pokemon does not receive recoil damage except from Struggle, Life Orb, or crash damage from Jump Kick or High Jump Kick.","This Pokemon does not take recoil damage besides Struggle, Life Orb, crash damage.");
	public static final Ability roughskin = new Ability("Rough Skin","roughskin","Causes recoil damage equal to 1/8 of the opponent's max HP if an opponent makes contact.","This Pokemon causes other Pokemon making contact to lose 1/8 of their max HP.");
	public static final Ability runaway = new Ability("Run Away","runaway","Unless this Pokemon is under the effects of a trapping move or ability, such as Mean Look or Shadow Tag, it will escape from wild Pokemon battles without fail.","No competitive use.");
	public static final Ability sandforce = new Ability("Sand Force","sandforce","Raises the power of this Pokemon's Rock, Ground, and Steel-type moves by 1.3x if the weather is Sandstorm. This Pokemon is also immune to residual Sandstorm damage.","This Pokemon's Rock/Ground/Steel attacks do 1.3x in Sandstorm; immunity to it.");
	public static final Ability sandrush = new Ability("Sand Rush","sandrush","This Pokemon's Speed is doubled if the weather is Sandstorm. This Pokemon is also immune to residual Sandstorm damage.","If Sandstorm is active, this Pokemon's Speed is doubled; immunity to Sandstorm.");
	public static final Ability sandstream = new Ability("Sand Stream","sandstream","When this Pokemon enters the battlefield, the weather becomes Sandstorm (for 5 turns normally, or 8 turns while holding Smooth Rock).","On switch-in, the weather becomes Sandstorm.");
	public static final Ability sandveil = new Ability("Sand Veil","sandveil","This Pokemon's Evasion is boosted by 1.25x if the weather is Sandstorm. This Pokemon is also immune to residual Sandstorm damage.","If Sandstorm is active, this Pokemon's evasion is 1.25x; immunity to Sandstorm.");
	public static final Ability sapsipper = new Ability("Sap Sipper","sapsipper","This Pokemon is immune to Grass moves. If hit by a Grass move, its Attack is increased by one stage (once for each hit of Bullet Seed). Does not affect Aromatherapy.","This Pokemon's Attack is boosted by 1 if hit by any Grass move; Grass immunity.");
	public static final Ability scrappy = new Ability("Scrappy","scrappy","This Pokemon has the ability to hit Ghost-type Pokemon with Normal-type and Fighting-type moves. Effectiveness of these moves takes into account the Ghost-type Pokemon's other weaknesses and resistances.","This Pokemon can hit Ghost-types with Normal- and Fighting-type moves.");
	public static final Ability serenegrace = new Ability("Serene Grace","serenegrace","This Pokemon's moves have their secondary effect chance doubled. For example, if this Pokemon uses Ice Beam, it will have a 20% chance to freeze its target.","This Pokemon's moves have their secondary effect chance doubled.");
	public static final Ability shadowtag = new Ability("Shadow Tag","shadowtag","When this Pokemon enters the field, its non-Ghost-type opponents cannot switch or flee the battle unless they have the same ability, are holding Shed Shell, or they use the moves Baton Pass or U-Turn.","Prevents foes from switching out normally unless they also have this Ability.");
	public static final Ability shedskin = new Ability("Shed Skin","shedskin","At the end of each turn, this Pokemon has a 33% chance to heal itself from poison (including Toxic), paralysis, burn, freeze or sleep (including self-induced Rest).","This Pokemon has a 33% chance to have its status cured at the end of each turn.");
	public static final Ability sheerforce = new Ability("Sheer Force","sheerforce","Raises the base power of all moves that have any secondary effects by 30%, but the secondary effects are ignored. Some side effects of moves, such as recoil, draining, stat reduction, and switching out usually aren't considered secondary effects. If a Pokemon with Sheer Force is holding a Life Orb and uses an attack that would be boosted by Sheer Force, then the move gains both boosts and the user receives no Life Orb recoil (only if the attack is boosted by Sheer Force).","This Pokemon's attacks with secondary effects do 1.3x damage; nullifies the effects.");
	public static final Ability shellarmor = new Ability("Shell Armor","shellarmor","Attacks targeting this Pokemon can't be critical hits.","This Pokemon cannot be struck by a critical hit.");
	public static final Ability shielddust = new Ability("Shield Dust","shielddust","If the opponent uses a move that has secondary effects that affect this Pokemon in addition to damage, the move's secondary effects will not trigger (For example, Ice Beam loses its 10% freeze chance).","This Pokemon is not affected by the secondary effect of another Pokemon's attack.");
	public static final Ability simple = new Ability("Simple","simple","This Pokemon doubles all of its positive and negative stat modifiers. For example, if this Pokemon uses Curse, its Attack and Defense stats increase by two stages and its Speed stat decreases by two stages.","This Pokemon has its own stat boosts and drops doubled as they happen.");
	public static final Ability skilllink = new Ability("Skill Link","skilllink","When this Pokemon uses an attack that strikes multiple times in one turn, such as Fury Attack or Spike Cannon, such attacks will always strike for the maximum number of hits.","This Pokemon's multi-hit attacks always hit the maximum number of times.");
	public static final Ability slowstart = new Ability("Slow Start","slowstart","After this Pokemon switches into the battle, its Attack and Speed stats are halved for five turns. For example, if this Pokemon has an Attack stat of 400, its Attack will be 200 until the effects of Slow Start wear off.","On switch-in, this Pokemon's Attack and Speed are halved for 5 turns.");
	public static final Ability sniper = new Ability("Sniper","sniper","When this Pokemon lands a Critical Hit, the damage is increased to another 1.5x.","If this Pokemon strikes with a critical hit, the damage is increased by 50%");
	public static final Ability snowcloak = new Ability("Snow Cloak","snowcloak","This Pokemon's Evasion is boosted by 1.25x if the weather is Hail. This Pokemon is also immune to residual Hail damage.","If Hail is active, this Pokemon's evasion is 1.25x; immunity to Hail.");
	public static final Ability snowwarning = new Ability("Snow Warning","snowwarning","When this Pokemon enters the battlefield, the weather becomes Hail (for 5 turns normally, or 8 turns while holding Icy Rock).","On switch-in, the weather becomes Hail.");
	public static final Ability solarpower = new Ability("Solar Power","solarpower","If the weather is Sunny Day, this Pokemon's Special Attack is 1.5x, but it loses 1/8 of its max HP at the end of every turn.","If Sunny Day is active, this Pokemon's Sp. Atk is 1.5x and loses 1/8 max HP per turn.");
	public static final Ability solidrock = new Ability("Solid Rock","solidrock","Super-effective attacks only deal 3/4 their usual damage against this Pokemon.","This Pokemon receives 3/4 damage from super effective attacks.");
	public static final Ability soundproof = new Ability("Soundproof","soundproof","This Pokemon is immune to the effects of sound-based moves, which are: Bug Buzz, Chatter, Echoed Voice, Grasswhistle, Growl, Heal Bell, Hyper Voice, Metal Sound, Perish Song, Relic Song, Roar, Round, Screech, Sing, Snarl, Snore, Supersonic, and Uproar. This ability doesn't affect Heal Bell.","This Pokemon is immune to sound-based moves, except Heal Bell.");
	public static final Ability speedboost = new Ability("Speed Boost","speedboost","At the end of every turn, this Pokemon's Speed increases by one stage (except the turn it switched in).","This Pokemon's Speed is boosted by 1 at the end of each full turn on the field.");
	public static final Ability stall = new Ability("Stall","stall","This Pokemon moves last among Pokemon using the same or greater priority moves.","This Pokemon moves last among Pokemon using the same or greater priority moves.");
	public static final Ability stancechange = new Ability("Stance Change","stancechange","Only affects Aegislash. If this Pokemon uses a Physical or Special move, it changes to Blade forme. If this Pokemon uses King's Shield, it changes to Shield forme.","The Pokemon changes form depending on how it battles.");
	public static final Ability Static = new Ability("Static","static","If an opponent contact attacks this Pokemon, there is a 30% chance that the opponent will become paralyzed.","30% chance of paralyzing a Pokemon making contact with this Pokemon.");
	public static final Ability steadfast = new Ability("Steadfast","steadfast","If this Pokemon flinches, its Speed increases by one stage.","If this Pokemon flinches, its Speed is boosted by 1.");
	public static final Ability stench = new Ability("Stench","stench","This Pokemon's damaging moves that don't already have a flinch chance gain a 10% chance to cause flinch.","This Pokemon's attacks without a chance to flinch have a 10% chance to flinch.");
	public static final Ability stickyhold = new Ability("Sticky Hold","stickyhold","This Pokemon cannot lose its held item due to another Pokemon's attack.","This Pokemon cannot lose its held item due to another Pokemon's attack.");
	public static final Ability stormdrain = new Ability("Storm Drain","stormdrain","During double battles, this Pokemon draws any single-target Water-type attack to itself. If an opponent uses an Water-type attack that affects multiple Pokemon, those targets will be hit. This ability does not affect Water Hidden Power, Judgment or Weather Ball. The user is immune to Water and its Special Attack is increased one stage when hit by one.","This Pokemon draws Water moves to itself to boost Sp. Atk by 1; Water immunity.");
	public static final Ability strongjaw = new Ability("Strong Jaw","strongjaw","This Pokemon receives a 50% power boost for jaw attacks such as Bite and Crunch.","This Pokemon's bite-based attacks do 1.5x damage.");
	public static final Ability sturdy = new Ability("Sturdy","sturdy","This Pokemon is immune to OHKO moves, and will survive with 1 HP if hit by an attack which would KO it while at full health.","If this Pokemon is at full HP, it lives one hit with at least 1HP. OHKO moves fail on it.");
	public static final Ability suctioncups = new Ability("Suction Cups","suctioncups","This Pokemon cannot be forced to switch out by another Pokemon's attack or item.","This Pokemon cannot be forced to switch out by another Pokemon's attack or item.");
	public static final Ability superluck = new Ability("Super Luck","superluck","This Pokemon's critical hit ratio is boosted by 1.","This Pokemon's critical hit ratio is boosted by 1.");
	public static final Ability swarm = new Ability("Swarm","swarm","When its health reaches 1/3 or less of its max HP, this Pokemon's Bug-type attacks do 1.5x damage.","When this Pokemon has 1/3 or less of its max HP, its Bug attacks do 1.5x damage.");
	public static final Ability sweetveil = new Ability("Sweet Veil","sweetveil","Prevents allies from being put to Sleep.","Prevents allies from being put to Sleep.");
	public static final Ability swiftswim = new Ability("Swift Swim","swiftswim","If the weather is Rain Dance, this Pokemon's Speed is doubled.","If the weather is Rain Dance, this Pokemon's Speed is doubled.");
	public static final Ability symbiosis = new Ability("Symbiosis","symbiosis","This Pokemon immediately passes its item to an ally after their item is consumed.","This Pokemon passes its item to an ally after their item is consumed.");
	public static final Ability synchronize = new Ability("Synchronize","synchronize","If an opponent burns, poisons or paralyzes this Pokemon, it receives the same condition.","If another Pokemon burns/poisons/paralyzes this Pokemon, it also gets that status.");
	public static final Ability tangledfeet = new Ability("Tangled Feet","tangledfeet","When this Pokemon is confused, attacks targeting it have a 50% chance of missing.","This Pokemon's evasion is doubled as long as it is confused.");
	public static final Ability technician = new Ability("Technician","technician","When this Pokemon uses an attack that has 60 Base Power or less (including Struggle), the move's Base Power receives a 50% boost. For example, a move with 60 Base Power effectively becomes a move with 90 Base Power.","This Pokemon's attacks of 60 Base Power or less do 1.5x damage. Includes Struggle.");
	public static final Ability telepathy = new Ability("Telepathy","telepathy","This Pokemon will not take damage from its allies' spread moves in double and triple battles.","This Pokemon does not take damage from its allies' attacks.");
	public static final Ability teravolt = new Ability("Teravolt","teravolt","When this Pokemon uses any move, it nullifies the Ability of any active Pokemon that hinder or empower this Pokemon's attacks. These abilities include Battle Armor, Clear Body, Damp, Dry Skin, Filter, Flash Fire, Flower Gift, Heatproof, Herbivore, Hyper Cutter, Immunity, Inner Focus, Insomnia, Keen Eye, Leaf Guard, Levitate, Lightningrod, Limber, Magma Armor, Marvel Scale, Motor Drive, Oblivious, Own Tempo, Sand Veil, Shell Armor, Shield Dust, Simple, Snow Cloak, Solid Rock, Soundproof, Sticky Hold, Storm Drain, Sturdy, Suction Cups, Tangled Feet, Thick Fat, Unaware, Vital Spirit, Volt Absorb, Water Absorb, Water Veil, White Smoke and Wonder Guard.","This Pokemon's moves ignore any Ability that could modify the effectiveness.");
	public static final Ability thickfat = new Ability("Thick Fat","thickfat","This Pokemon receives half damage from Ice-type and Fire-type attacks.","This Pokemon receives half damage from Fire- and Ice-type attacks.");
	public static final Ability tintedlens = new Ability("Tinted Lens","tintedlens","This Pokemon's attacks that are not very effective on a target do double damage.","This Pokemon's attacks that are not very effective on a target do double damage.");
	public static final Ability torrent = new Ability("Torrent","torrent","When its health reaches 1/3 or less of its max HP, this Pokemon's Water-type attacks do 1.5x damage.","When this Pokemon has 1/3 or less of its max HP, its Water attacks do 1.5x damage.");
	public static final Ability toxicboost = new Ability("Toxic Boost","toxicboost","When this Pokemon is poisoned, its physical attacks do 1.5x damage.","When this Pokemon is poisoned, its physical attacks do 1.5x damage.");
	public static final Ability toughclaws = new Ability("Tough Claws","toughclaws","This Pokemon's contact attacks do 1.33x damage.","This Pokemon's contact attacks do 33% more damage.");
	public static final Ability trace = new Ability("Trace","trace","When this Pokemon enters the field, it temporarily copies an opponent's ability. This ability remains with this Pokemon until it leaves the field.","On switch-in, or when it can, this Pokemon copies a random adjacent foe's Ability.");
	public static final Ability truant = new Ability("Truant","truant","After this Pokemon is switched into battle, it skips every other turn.","This Pokemon skips every other turn instead of using a move.");
	public static final Ability turboblaze = new Ability("Turboblaze","turboblaze","When this Pokemon uses any move, it nullifies the Ability of any active Pokemon that hinder or empower this Pokemon's attacks. These abilities include Battle Armor, Clear Body, Damp, Dry Skin, Filter, Flash Fire, Flower Gift, Heatproof, Herbivore, Hyper Cutter, Immunity, Inner Focus, Insomnia, Keen Eye, Leaf Guard, Levitate, Lightningrod, Limber, Magma Armor, Marvel Scale, Motor Drive, Oblivious, Own Tempo, Sand Veil, Shell Armor, Shield Dust, Simple, Snow Cloak, Solid Rock, Soundproof, Sticky Hold, Storm Drain, Sturdy, Suction Cups, Tangled Feet, Thick Fat, Unaware, Vital Spirit, Volt Absorb, Water Absorb, Water Veil, White Smoke and Wonder Guard.","This Pokemon's moves ignore any Ability that could modify the effectiveness.");
	public static final Ability unaware = new Ability("Unaware","unaware","This Pokemon ignores an opponent's stat boosts for Attack, Defense, Special Attack and Special Defense. These boosts will still affect Base Power calculation for Punishment and Stored Power.","This Pokemon ignores other Pokemon's stat changes when taking or doing damage.");
	public static final Ability unburden = new Ability("Unburden","unburden","Doubles this Pokemon's Speed if it loses its held item (such as by eating Berries, using Gems, or via Thief, Knock Off, etc).","Speed is doubled on held item loss; boost is lost if it switches, gets new item/Ability.");
	public static final Ability unnerve = new Ability("Unnerve","unnerve","While this Pokemon is active, prevents opposing Pokemon from using their Berries.","While this Pokemon is active, prevents opposing Pokemon from using their Berries.");
	public static final Ability victorystar = new Ability("Victory Star","victorystar","Raises every friendly Pokemon's Accuracy, including this Pokemon's, by 10% (multiplied).","This Pokemon and its allies' moves have their accuracy boosted to 1.1x.");
	public static final Ability vitalspirit = new Ability("Vital Spirit","vitalspirit","This Pokemon cannot fall asleep (Rest will fail if it tries to use it). Gaining this Ability while asleep cures it.","This Pokemon cannot fall asleep. Gaining this Ability while asleep cures it.");
	public static final Ability voltabsorb = new Ability("Volt Absorb","voltabsorb","This Pokemon is immune to Electric moves. If hit by an Electric move, it recovers 25% of its max HP.","This Pokemon heals 1/4 of its max HP when hit by Electric moves; Electric immunity.");
	public static final Ability waterabsorb = new Ability("Water Absorb","waterabsorb","This Pokemon is immune to Water moves. If hit by an Water move, it recovers 25% of its max HP.","This Pokemon heals 1/4 of its max HP when hit by Water moves; Water immunity.");
	public static final Ability waterveil = new Ability("Water Veil","waterveil","This Pokemon cannot become burned. Gaining this Ability while burned cures it.","This Pokemon cannot be burned. Gaining this Ability while burned cures it.");
	public static final Ability weakarmor = new Ability("Weak Armor","weakarmor","Causes physical moves to lower the Pokemon's Defense and increase its Speed stat by one stage.","If a physical attack hits this Pokemon, Defense is lowered 1 and Speed is boosted 1.");
	public static final Ability whitesmoke = new Ability("White Smoke","whitesmoke","Opponents cannot reduce this Pokemon's stats; they can, however, modify stat changes with Power Swap, Guard Swap and Heart Swap and inflict stat boosts with Swagger and Flatter. This ability does not prevent self-inflicted stat reductions. [Field Effect]\u00a0If this Pokemon is in the lead spot, the rate of wild Pokemon battles decreases by 50%.","Prevents other Pokemon from lowering this Pokemon's stat stages.");
	public static final Ability wonderguard = new Ability("Wonder Guard","wonderguard","This Pokemon only receives damage from attacks belonging to types that cause Super Effective to this Pokemon. Wonder Guard does not protect a Pokemon from status ailments (burn, freeze, paralysis, poison, sleep, Toxic or any of their side effects or damage), recoil damage nor the moves Beat Up, Bide, Doom Desire, Fire Fang, Future Sight, Hail, Leech Seed, Sandstorm, Spikes, Stealth Rock and Struggle. Wonder Guard cannot be Skill Swapped nor Role Played. Trace, however, does copy Wonder Guard.","This Pokemon can only be damaged by super effective moves and indirect damage.");
	public static final Ability wonderskin = new Ability("Wonder Skin","wonderskin","Causes the chance of a status move working to be halved. It does not affect moves that inflict status as a secondary effect like Thunder's chance to paralyze.","All status moves with a set % accuracy are 50% accurate if used on this Pokemon.");
	public static final Ability zenmode = new Ability("Zen Mode","zenmode","When Darmanitan's HP drops to below half, it will enter Zen Mode at the end of the turn. If it loses its ability, or recovers HP to above half while in Zen mode, it will change back. This ability only works on Darmanitan, even if it is copied by Role Play, Entrainment, or swapped with Skill Swap.","If this Pokemon is Darmanitan, it changes to Zen Mode whenever it is below half HP.");
	public static final Ability mountaineer = new Ability("Mountaineer","mountaineer","This Pokémon avoids all Rock-type attacks and hazards when switching in.","On switch-in, this Pokemon avoids all Rock-type attacks and Stealth Rock.");
	public static final Ability rebound = new Ability("Rebound","rebound","It can reflect the effect of status moves when switching in.","On switch-in, this Pokemon blocks certain status moves and uses the move itself.");
	public static final Ability persistent = new Ability("Persistent","persistent","Increases the duration of many field effects by two turns when used by this Pokémon.","The duration of certain field effects is increased by 2 turns if used by this Pokemon.");

	public Ability getByID(String id)
	{
		try 
		{
			java.lang.reflect.Field field = this.getClass().getDeclaredField(id.toLowerCase());
			//below wants the instance of the class
			//but since it is static, it is irrelevant what the instance is,
			//so passing null will not create errors
			Ability ability = (Ability)field.get(null);
			return ability;
		} 
		catch (NoSuchFieldException | SecurityException | IllegalArgumentException | IllegalAccessException e) 
		{
			e.printStackTrace();
			return null;
		}
	}
}
