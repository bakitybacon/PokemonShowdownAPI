package teambuilder;

public class Moves 
{
	public static final Move absorb = new Move(Type.Grass,"absorb","Absorb","Deals damage to one adjacent target. The user recovers half of the HP lost by the target, rounded up. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down.","User recovers 50% of the damage dealt.",Range.Any1,100,20,25,0,false,false,false,false,new int[]{1});
	public static final Move acid = new Move(Type.Poison,"acid","Acid","Deals damage to all adjacent foes with a 10% chance to lower their Special Defense by 1 stage each.","10% chance to lower the foe(s) Sp. Def by 1.",Range.Opponent2,100,40,30,0,false,false,false,true,new int[]{1});
	public static final Move acidarmor = new Move(Type.Poison,"acidarmor","Acid Armor","Raises the user's Defense by 2 stages.","Boosts the user's Defense by 2.",Range.Self,150,0,20,0,false,false,false,false,new int[]{1});
	public static final Move acidspray = new Move(Type.Poison,"acidspray","Acid Spray","Deals damage to one adjacent target with a 100% chance to lower its Special Defense by 2 stages.","100% chance to lower the target's Sp. Def by 2.",Range.Any1,100,40,20,0,false,false,false,true,new int[]{1});
	public static final Move acrobatics = new Move(Type.Flying,"acrobatics","Acrobatics","Deals damage to one adjacent or non-adjacent target. Power doubles if the user has no held item. Makes contact.","Power doubles if the user has no held item.",Range.Any1,100,55,15,0,false,false,false,false,new int[]{1});
	public static final Move acupressure = new Move(Type.Normal,"acupressure","Acupressure","Raises a random stat by 2 stages as long as the stat is not already at stage 6. The user can choose to use this move on itself or an adjacent ally. Fails if no stat stage can be raised or if used on an ally with a Substitute. This move ignores Protect and Detect.","Boosts a random stat of the user or an ally by 2.",Range.AllyOrSelf,150,0,30,0,false,false,false,false,new int[]{1});
	public static final Move aerialace = new Move(Type.Flying,"aerialace","Aerial Ace","Deals damage to one adjacent or non-adjacent target and does not check accuracy. Makes contact.","This move does not check accuracy.",Range.AllyOrSelf,150,60,20,0,false,false,false,false,new int[]{1});
	public static final Move aeroblast = new Move(Type.Flying,"aeroblast","Aeroblast","Deals damage to one adjacent or non-adjacent target with a higher chance for a critical hit.","High critical hit ratio.",Range.AllyOrSelf,95,100,5,0,false,false,false,false,new int[]{1});
	public static final Move afteryou = new Move(Type.Normal,"afteryou","After You","Causes one adjacent target to take its turn immediately after the user this turn, no matter the priority of its selected move. Fails if the target would have moved next anyway, or if the target already moved this turn. This move ignores Protect and Detect. Ignores a target's Substitute.","The target makes its move right after the user.",Range.Any1,150,0,15,0,false,false,false,false,new int[]{1});
	public static final Move agility = new Move(Type.Psychic,"agility","Agility","Raises the user's Speed by 2 stages.","Boosts the user's Speed by 2.",Range.Self,150,0,30,0,false,false,false,false,new int[]{1});
	public static final Move aircutter = new Move(Type.Flying,"aircutter","Air Cutter","Deals damage to all adjacent foes with a higher chance for a critical hit.","High critical hit ratio. Hits adjacent foes.",Range.Opponent2,95,60,25,0,false,false,false,false,new int[]{1});
	public static final Move airslash = new Move(Type.Flying,"airslash","Air Slash","Deals damage to one adjacent or non-adjacent target with a 30% chance to flinch it.","30% chance to flinch the target.",Range.Opponent2,95,75,15,0,false,false,false,true,new int[]{1});
	public static final Move allyswitch = new Move(Type.Psychic,"allyswitch","Ally Switch","The user swaps positions with its ally on the far side of the field. Fails if there is no Pokemon at that position, if the user is the only Pokemon on its side, or if the user is in the middle. Priority +1.","Switches position with the ally on the far side.",Range.Self,150,0,15,1,false,false,false,false,new int[]{1});
	public static final Move amnesia = new Move(Type.Psychic,"amnesia","Amnesia","Raises the user's Special Defense by 2 stages.","Boosts the user's Sp. Def by 2.",Range.Self,150,0,20,0,false,false,false,false,new int[]{1});
	public static final Move ancientpower = new Move(Type.Rock,"ancientpower","Ancient Power","Deals damage to one adjacent target with a 10% chance to raise the user's Attack, Defense, Speed, Special Attack, and Special Defense by 1 stage.","10% chance to boost all stats by 1 (not acc/eva).",Range.Any1,100,60,5,0,false,false,false,true,new int[]{1});
	public static final Move aquajet = new Move(Type.Water,"aquajet","Aqua Jet","Deals damage to one adjacent target. Makes contact. Priority +1.","Usually goes first.",Range.Any1,100,40,20,1,false,false,false,false,new int[]{1});
	public static final Move aquaring = new Move(Type.Water,"aquaring","Aqua Ring","The user has 1/16 of its maximum HP restored at the end of each turn while it remains active. If the user uses Baton Pass, the replacement will still receive the healing effect.","User recovers 1/16 max HP per turn.",Range.Self,150,0,20,0,false,false,false,false,new int[]{1});
	public static final Move aquatail = new Move(Type.Water,"aquatail","Aqua Tail","Deals damage to one adjacent target. Makes contact.","No additional effect.",Range.Any1,90,90,10,0,false,false,false,false,new int[]{1});
	public static final Move armthrust = new Move(Type.Fighting,"armthrust","Arm Thrust","Deals damage to one adjacent target and hits two to five times. Has a 1/3 chance to hit two or three times, and a 1/6 chance to hit four or five times. If one of the hits breaks the target's Substitute, it will take damage for the remaining hits. If the user has the Ability Skill Link, this move will always hit five times. Makes contact.","Hits 2-5 times in one turn.",Range.Any1,100,15,20,0,false,false,false,false,new int[]{2,5});
	public static final Move aromatherapy = new Move(Type.Grass,"aromatherapy","Aromatherapy","Every Pokemon in the user's party is cured of its major status problem.","Cures the user's party of all status conditions.",Range.Allies,150,0,5,0,false,false,false,false,new int[]{1});
	public static final Move aromaticmist = new Move(Type.Fairy,"aromaticmist","Aromatic Mist","The user raises the Special Defense stat of itself and ally Pokemon by 1.","Raises user's and allies' Special Defense by 1.",Range.Self,100,0,20,0,false,false,false,false,new int[]{1});
	public static final Move assist = new Move(Type.Normal,"assist","Assist","A random move among those known by the user's party members is selected for use. Does not select Assist, Belch, Bestow, Chatter, Circle Throw, Copycat, Counter, Covet, Destiny Bond, Detect, Dragon Tail, Endure, Feint, Focus Punch, Follow Me, Helping Hand, Me First, Metronome, Mimic, Mirror Coat, Mirror Move, Nature Power, Protect, Rage Powder, Sketch, Sleep Talk, Snatch, Spiky Shield, Struggle, Switcheroo, Thief, Transform, or Trick.","Uses a random move known by a team member.",Range.Self,150,0,20,0,false,false,false,false,new int[]{1});
	public static final Move assurance = new Move(Type.Dark,"assurance","Assurance","Deals damage to one adjacent target. Power doubles if the target has already taken damage this turn, other than from Pain Split. Makes contact.","Power doubles if target was damaged this turn.",Range.Any1,100,60,10,0,false,false,false,false,new int[]{1});
	public static final Move astonish = new Move(Type.Ghost,"astonish","Astonish","Deals damage to one adjacent target with a 30% chance to flinch it. Makes contact.","30% chance to flinch the target.",Range.Any1,100,30,15,0,false,false,false,true,new int[]{1});
	public static final Move attackorder = new Move(Type.Bug,"attackorder","Attack Order","Deals damage to one adjacent target with a higher chance for a critical hit.","High critical hit ratio.",Range.Any1,100,90,15,0,false,false,false,false,new int[]{1});
	public static final Move attract = new Move(Type.Normal,"attract","Attract","Causes one adjacent target to become infatuated, making it unable to attack 50% of the time. Fails if both the user and the target are the same gender, if either is genderless, or if the target is already infatuated. The effect ends when either the user or the target is no longer active. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves. Ignores a target's Substitute. Pokemon with the Ability Oblivious are immune.","A target of the opposite gender gets infatuated.",Range.Any1,100,0,15,0,false,false,false,false,new int[]{1});
	public static final Move aurasphere = new Move(Type.Fighting,"aurasphere","Aura Sphere","Deals damage to one adjacent or non-adjacent target and does not check accuracy.","This move does not check accuracy.",Range.Any1,150,80,20,0,false,false,false,false,new int[]{1});
	public static final Move aurorabeam = new Move(Type.Ice,"aurorabeam","Aurora Beam","Deals damage to one adjacent target with a 10% chance to lower its Attack by 1 stage.","10% chance to lower the foe's Attack by 1.",Range.Any1,100,65,20,0,false,false,false,true,new int[]{1});
	public static final Move autotomize = new Move(Type.Steel,"autotomize","Autotomize","Raises the user's Speed by 2 stages. If the user's Speed was changed, the user's weight is reduced by 100kg as long as it remains active. This effect is stackable but cannot reduce the user's weight to less than 0.1kg.","Boosts the user's Speed by 2; user loses 100kg.",Range.Self,150,0,15,0,false,false,false,false,new int[]{1});
	public static final Move avalanche = new Move(Type.Ice,"avalanche","Avalanche","Deals damage to one adjacent target. Power doubles if the user was hit by that target this turn. Makes contact. Priority -4.","Power doubles if user is damaged by the target.",Range.Any1,100,60,10,-4,false,false,false,false,new int[]{1});
	public static final Move babydolleyes = new Move(Type.Fairy,"babydolleyes","Baby-Doll Eyes","Lowers the target's Attack by 1 stage. Priority +1.","Lowers foe's Attack by 1. Priority +1.",Range.Any1,100,0,30,1,false,false,false,false,new int[]{1});
	public static final Move barrage = new Move(Type.Normal,"barrage","Barrage","Deals damage to one adjacent target and hits two to five times. Has a 1/3 chance to hit two or three times, and a 1/6 chance to hit four or five times. If one of the hits breaks the target's Substitute, it will take damage for the remaining hits. If the user has the Ability Skill Link, this move will always hit five times.","Hits 2-5 times in one turn.",Range.Any1,85,15,20,0,false,false,false,false,new int[]{2,5});
	public static final Move barrier = new Move(Type.Psychic,"barrier","Barrier","Raises the user's Defense by 2 stages.","Boosts the user's Defense by 2.",Range.Self,150,0,20,0,false,false,false,false,new int[]{1});
	public static final Move batonpass = new Move(Type.Normal,"batonpass","Baton Pass","The user is replaced with another Pokemon in its party. The selected Pokemon has the user's stat stage changes, confusion, and certain move effects transferred to it.","User switches, passing stat changes and more.",Range.Self,150,0,40,0,false,false,false,false,new int[]{1});
	public static final Move beatup = new Move(Type.Dark,"beatup","Beat Up","Deals damage to one adjacent target and hits one time for the user and one time for each unfainted Pokemon without a major status problem in the user's party. The power of each hit is equal to 5 + (X/10), where X is each participating Pokemon's base Attack; each hit is considered to come from the user.","All healthy allies aid in damaging the target.",Range.Any1,100,0,10,0,false,false,false,false,new int[]{6,6});
	public static final Move belch = new Move(Type.Poison,"belch","Belch","The user must eat a Berry to use this move.","User must eat a Berry to use this move.",Range.Any1,90,120,10,0,false,false,false,false,new int[]{1});
	public static final Move bellydrum = new Move(Type.Normal,"bellydrum","Belly Drum","Raises the user's Attack to stage 6 in exchange for the user losing 1/2 of its maximum HP, rounded down. Fails if the user would faint or if its Attack stage is already 6.","User loses 50% max HP. Maximizes Attack.",Range.Self,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move bestow = new Move(Type.Normal,"bestow","Bestow","Causes one adjacent target to receive the user's held item. Fails if the target is already holding an item or if the user is holding a Mail.","User passes its held item to the target.",Range.Any1,150,0,15,0,false,false,false,false,new int[]{1});
	public static final Move bide = new Move(Type.Normal,"bide","Bide","The user spends two turns locked into this move and then, on the second turn after using this move, the user attacks the last Pokemon that hit it, inflicting double the damage in HP it lost during the two turns. If the last Pokemon that hit it is no longer on the field, the user attacks a random foe instead. If the user is prevented from moving during this move's use, the effect ends. This move does not check accuracy. Makes contact. Priority +1.","Waits 2 turns; deals double the damage taken.",Range.Self,150,0,10,1,false,false,false,false,new int[]{1});
	public static final Move bind = new Move(Type.Normal,"bind","Bind","Deals damage to one adjacent target and prevents it from switching for four or five turns; seven turns if the user is holding Grip Claw. Causes damage to the target equal to 1/8 of its maximum HP (1/6 if the user is holding Binding Band), rounded down, at the end of each turn during effect. The target can still switch out if it is holding Shed Shell or uses Baton Pass, U-turn, or Volt Switch. The effect ends if either the user or the target leaves the field, or if the target uses Rapid Spin. This effect is not stackable or reset by using this or another partial-trapping move. Makes contact.","Traps and damages the target for 4-5 turns.",Range.Any1,85,15,20,0,false,false,false,false,new int[]{1});
	public static final Move bite = new Move(Type.Dark,"bite","Bite","Deals damage to one adjacent target with a 30% chance to flinch it. Makes contact.","30% chance to flinch the target.",Range.Any1,100,60,25,0,false,false,false,true,new int[]{1});
	public static final Move blastburn = new Move(Type.Fire,"blastburn","Blast Burn","Deals damage to one adjacent target. If this move is successful, the user must recharge on the following turn and cannot make a move.","User cannot move next turn.",Range.Any1,90,150,5,0,false,false,false,false,new int[]{1});
	public static final Move blazekick = new Move(Type.Fire,"blazekick","Blaze Kick","Deals damage to one adjacent target with a 10% chance to burn it and a higher chance for a critical hit. Makes contact.","High critical hit ratio. 10% chance to burn.",Range.Any1,90,85,10,0,false,false,false,true,new int[]{1});
	public static final Move blizzard = new Move(Type.Ice,"blizzard","Blizzard","Deals damage to all adjacent foes with a 10% chance to freeze each. If the weather is Hail, this move cannot miss.","10% chance to freeze the foe(s).",Range.Opponent2,70,110,5,0,false,false,false,true,new int[]{1});
	public static final Move block = new Move(Type.Normal,"block","Block","Prevents one adjacent target from switching out. The target can still switch out if it is holding Shed Shell or uses Baton Pass, U-turn, or Volt Switch. If the target leaves the field using Baton Pass, the replacement will remain trapped. The effect ends if the user leaves the field. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","The target cannot switch out.",Range.Any1,150,0,5,0,false,false,false,false,new int[]{1});
	public static final Move blueflare = new Move(Type.Fire,"blueflare","Blue Flare","Deals damage to one adjacent target with a 20% chance to burn it.","20% chance to burn the target.",Range.Any1,85,130,5,0,false,false,false,true,new int[]{1});
	public static final Move bodyslam = new Move(Type.Normal,"bodyslam","Body Slam","Deals damage to one adjacent target with a 30% chance to paralyze it. Makes contact.","30% chance to paralyze the target.",Range.Any1,100,85,15,0,false,false,false,true,new int[]{1});
	public static final Move boltstrike = new Move(Type.Electric,"boltstrike","Bolt Strike","Deals damage to one adjacent target with a 20% chance to paralyze it. Makes contact.","20% chance to paralyze the target.",Range.Any1,85,130,5,0,false,false,false,true,new int[]{1});
	public static final Move boneclub = new Move(Type.Ground,"boneclub","Bone Club","Deals damage to one adjacent target with a 10% chance to flinch it.","10% chance to flinch the target.",Range.Any1,85,65,20,0,false,false,false,true,new int[]{1});
	public static final Move bonerush = new Move(Type.Ground,"bonerush","Bone Rush","Deals damage to one adjacent target and hits two to five times. Has a 1/3 chance to hit two or three times, and a 1/6 chance to hit four or five times. If one of the hits breaks the target's Substitute, it will take damage for the remaining hits. If the user has the Ability Skill Link, this move will always hit five times.","Hits 2-5 times in one turn.",Range.Any1,90,25,10,0,false,false,false,false,new int[]{2,5});
	public static final Move bonemerang = new Move(Type.Ground,"bonemerang","Bonemerang","Deals damage to one adjacent target and hits twice. If the first hit breaks the target's Substitute, it will take damage for the second hit.","Hits 2 times in one turn.",Range.Any1,90,50,10,0,false,false,false,false,new int[]{2,2});
	public static final Move boomburst = new Move(Type.Normal,"boomburst","Boomburst","Deals damage to all Pokemon within range, including any allies.","Hits adjacent Pokemon, including allies.",Range.AllAdjacent,100,140,10,0,false,false,false,false,new int[]{1});
	public static final Move bounce = new Move(Type.Flying,"bounce","Bounce","Deals damage to one adjacent or non-adjacent target with a 30% chance to paralyze it. This attack charges on the first turn and strikes on the second. On the first turn, the user avoids all attacks other than Gust, Hurricane, Sky Uppercut, Smack Down, Thunder, and Twister. The user cannot make a move between turns. If the user is holding a Power Herb, the move completes in one turn. This move cannot be used while Gravity is in effect. Makes contact.","Bounces turn 1. Hits turn 2. 30% paralyze.",Range.AllAdjacent,85,85,5,0,false,false,false,true,new int[]{1});
	public static final Move bravebird = new Move(Type.Flying,"bravebird","Brave Bird","Deals damage to one adjacent or non-adjacent target. If the target lost HP, the user takes recoil damage equal to 33% that HP, rounded half up, but not less than 1HP. Makes contact.","Has 33% recoil.",Range.AllAdjacent,100,120,15,0,false,false,false,false,new int[]{1});
	public static final Move brickbreak = new Move(Type.Fighting,"brickbreak","Brick Break","Deals damage to one adjacent target. If this attack does not miss, the effects of Reflect and Light Screen end for the target's side of the field before damage is calculated. Makes contact.","Destroys screens, unless the target is immune.",Range.Any1,100,75,15,0,false,false,false,false,new int[]{1});
	public static final Move brine = new Move(Type.Water,"brine","Brine","Deals damage to one adjacent target. Power doubles if the target has less than or equal to half of its maximum HP remaining.","Power doubles if the target's HP is 50% or less.",Range.Any1,100,65,10,0,false,false,false,false,new int[]{1});
	public static final Move bubble = new Move(Type.Water,"bubble","Bubble","Deals damage to all adjacent foes with a 10% chance to lower their Speed by 1 stage each.","10% chance to lower the foe(s) Speed by 1.",Range.Opponent2,100,40,30,0,false,false,false,true,new int[]{1});
	public static final Move bubblebeam = new Move(Type.Water,"bubblebeam","Bubble Beam","Deals damage to one adjacent target with a 10% chance to lower its Speed by 1 stage.","10% chance to lower the target's Speed by 1.",Range.Any1,100,65,20,0,false,false,false,true,new int[]{1});
	public static final Move bugbite = new Move(Type.Bug,"bugbite","Bug Bite","Deals damage to one adjacent target. If this move is successful and the user has not fainted, it steals the target's held Berry if it is holding one and uses it immediately. Makes contact.","User steals and eats the target's Berry.",Range.Any1,100,60,20,0,false,false,false,false,new int[]{1});
	public static final Move bugbuzz = new Move(Type.Bug,"bugbuzz","Bug Buzz","Deals damage to one adjacent target with a 10% chance to lower its Special Defense by 1 stage. Pokemon with the Ability Soundproof are immune.","10% chance to lower the target's Sp. Def. by 1.",Range.Any1,100,90,10,0,false,false,false,true,new int[]{1});
	public static final Move bulkup = new Move(Type.Fighting,"bulkup","Bulk Up","Raises the user's Attack and Defense by 1 stage.","Boosts the user's Attack and Defense by 1.",Range.Self,150,0,20,0,false,false,false,false,new int[]{1});
	public static final Move bulldoze = new Move(Type.Ground,"bulldoze","Bulldoze","Deals damage to all adjacent Pokemon with a 100% chance to lower their Speed by 1 stage each.","100% chance to lower adjacent Pkmn Speed by 1.",Range.AllAdjacent,100,60,20,0,false,false,false,true,new int[]{1});
	public static final Move bulletpunch = new Move(Type.Steel,"bulletpunch","Bullet Punch","Deals damage to one adjacent target. Makes contact. Damage is boosted to 1.2x by the Ability Iron Fist. Priority +1.","Usually goes first.",Range.Any1,100,40,30,1,false,false,false,false,new int[]{1});
	public static final Move bulletseed = new Move(Type.Grass,"bulletseed","Bullet Seed","Deals damage to one adjacent target and hits two to five times. Has a 1/3 chance to hit two or three times, and a 1/6 chance to hit four or five times. If one of the hits breaks the target's Substitute, it will take damage for the remaining hits. If the user has the Ability Skill Link, this move will always hit five times.","Hits 2-5 times in one turn.",Range.Any1,100,25,30,0,false,false,false,false,new int[]{2,5});
	public static final Move calmmind = new Move(Type.Psychic,"calmmind","Calm Mind","Raises the user's Special Attack and Special Defense by 1 stage.","Boosts the user's Sp. Atk and Sp. Def by 1.",Range.Self,150,0,20,0,false,false,false,false,new int[]{1});
	public static final Move camouflage = new Move(Type.Normal,"camouflage","Camouflage","The user's type changes based on the battle terrain: Electric in Electric Terrain, Grass in Grassy Terrain, Fairy in Misty Terrain, and Normal in plain terrain. Fails if the user's type cannot be changed or if the user is already purely that type.","Changes user's type by terrain (default Normal).",Range.Self,150,0,20,0,false,false,false,false,new int[]{1});
	public static final Move captivate = new Move(Type.Normal,"captivate","Captivate","Lowers all adjacent foes' Special Attack by 2 stages. A target is unaffected if both the user and the target are the same gender, or if either is genderless. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves. Pokemon with the Ability Oblivious are immune.","Lowers the foe(s) Sp. Atk by 2 if opposite gender.",Range.Opponent2,100,0,20,0,false,false,false,false,new int[]{1});
	public static final Move celebrate = new Move(Type.Normal,"celebrate","Celebrate","No in-game effect.","No in-game effect.",Range.Self,150,0,40,0,false,false,false,false,new int[]{1});
	public static final Move charge = new Move(Type.Electric,"charge","Charge","Raises the user's Special Defense by 1 stage. If the user chooses to use an Electric-type attack on the next turn, its power will be doubled.","Boosts next Electric move and user's Sp. Def by 1.",Range.Self,150,0,20,0,false,false,false,false,new int[]{1});
	public static final Move chargebeam = new Move(Type.Electric,"chargebeam","Charge Beam","Deals damage to one adjacent target with a 70% chance to raise the user's Special Attack by 1 stage.","70% chance to boost the user's Sp. Atk by 1.",Range.Any1,90,50,10,0,false,false,false,true,new int[]{1});
	public static final Move charm = new Move(Type.Fairy,"charm","Charm","Lowers one adjacent target's Attack by 2 stages. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","Lowers the target's Attack by 2.",Range.Any1,100,0,20,0,false,false,false,false,new int[]{1});
	public static final Move chatter = new Move(Type.Flying,"chatter","Chatter","Deals damage to one adjacent or non-adjacent target with a 100% chance to confuse it.","100% chance to confuse the target.",Range.Any1,100,65,20,0,false,false,false,true,new int[]{1});
	public static final Move chipaway = new Move(Type.Normal,"chipaway","Chip Away","Deals damage to one adjacent target and ignores the target's stat stage changes, including evasion. Makes contact.","Ignores the target's stat stage changes.",Range.Any1,100,70,20,0,false,false,false,false,new int[]{1});
	public static final Move circlethrow = new Move(Type.Fighting,"circlethrow","Circle Throw","Deals damage to one adjacent target. If both the user and the target have not fainted, the target is forced to switch out and be replaced with a random unfainted ally. This effect fails if the target used Ingrain previously, has the Ability Suction Cups, or has a Substitute. Makes contact. Priority -6. (Wild battles: The battle ends as long as it is not a double battle and the user's level is not less than the opponent's level.)","Forces the target to switch to a random ally.",Range.Any1,90,60,10,-6,false,false,false,false,new int[]{1});
	public static final Move clamp = new Move(Type.Water,"clamp","Clamp","Deals damage to one adjacent target and prevents it from switching for four or five turns; seven turns if the user is holding Grip Claw. Causes damage to the target equal to 1/8 of its maximum HP (1/6 if the user is holding Binding Band), rounded down, at the end of each turn during effect. The target can still switch out if it is holding Shed Shell or uses Baton Pass, U-turn, or Volt Switch. The effect ends if either the user or the target leaves the field, or if the target uses Rapid Spin. This effect is not stackable or reset by using this or another partial-trapping move. Makes contact.","Traps and damages the target for 4-5 turns.",Range.Any1,85,35,15,0,false,false,false,false,new int[]{1});
	public static final Move clearsmog = new Move(Type.Poison,"clearsmog","Clear Smog","Deals damage to one adjacent target and eliminates all of its stat stage changes.","Eliminates the target's stat changes.",Range.Any1,150,50,15,0,false,false,false,false,new int[]{1});
	public static final Move closecombat = new Move(Type.Fighting,"closecombat","Close Combat","Deals damage to one adjacent target and lowers the user's Defense and Special Defense by 1 stage. Makes contact.","Lowers the user's Defense and Sp. Def by 1.",Range.Any1,100,120,5,0,false,false,false,false,new int[]{1});
	public static final Move coil = new Move(Type.Poison,"coil","Coil","Raises the user's Attack, Defense, and accuracy by 1 stage.","Boosts user's Attack, Defense, and accuracy by 1.",Range.Self,-1,0,20,0,false,false,false,false,new int[]{1});
	public static final Move cometpunch = new Move(Type.Normal,"cometpunch","Comet Punch","Deals damage to one adjacent target and hits two to five times. Has a 1/3 chance to hit two or three times, and a 1/6 chance to hit four or five times. If one of the hits breaks the target's Substitute, it will take damage for the remaining hits. If the user has the Ability Skill Link, this move will always hit five times. Makes contact. Damage is boosted to 1.2x by the Ability Iron Fist.","Hits 2-5 times in one turn.",Range.Any1,85,18,15,0,false,false,false,false,new int[]{2,5});
	public static final Move confide = new Move(Type.Normal,"confide","Confide","Lowers the target's Special Attack stat by 1.","Lowers the target's Sp. Atk by 1.",Range.Any1,150,0,20,0,false,false,false,false,new int[]{1});
	public static final Move confuseray = new Move(Type.Ghost,"confuseray","Confuse Ray","Causes one adjacent target to become confused. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","Confuses the target.",Range.Any1,100,0,10,0,false,false,false,false,new int[]{1});
	public static final Move confusion = new Move(Type.Psychic,"confusion","Confusion","Deals damage to one adjacent target with a 10% chance to confuse it.","10% chance to confuse the target.",Range.Any1,100,50,25,0,false,false,false,true,new int[]{1});
	public static final Move constrict = new Move(Type.Normal,"constrict","Constrict","Deals damage to one adjacent target with a 10% chance to lower its Speed by 1 stage. Makes contact.","10% chance to lower the target's Speed by 1.",Range.Any1,100,10,35,0,false,false,false,true,new int[]{1});
	public static final Move conversion = new Move(Type.Normal,"conversion","Conversion","The user's type changes to match the original type of one of its four moves besides this move, at random, but not either of its current types. Fails if the user cannot change its type, or if this move would only be able to select one of the user's current types.","Changes user's type to match a known move.",Range.Self,150,0,30,0,false,false,false,false,new int[]{1});
	public static final Move conversion2 = new Move(Type.Normal,"conversion2","Conversion 2","The user's type changes to match a type that resists or is immune to the type of the last move used by one adjacent target, but not either of its current types. The determined type of the move is used rather than the original type. Fails if the user cannot change its type, or if this move would only be able to select one of the user's current types. This move ignores Protect and Detect. Ignores a target's Substitute.","Changes user's type to resist target's last move.",Range.Any1,150,0,30,0,false,false,false,false,new int[]{1});
	public static final Move copycat = new Move(Type.Normal,"copycat","Copycat","The user uses the last move used by any Pokemon, including itself. Fails if no move has been used, or if the last move used was Assist, Bestow, Chatter, Circle Throw, Copycat, Counter, Covet, Destiny Bond, Detect, Dragon Tail, Endure, Feint, Focus Punch, Follow Me, Helping Hand, Me First, Metronome, Mimic, Mirror Coat, Mirror Move, Nature Power, Protect, Rage Powder, Sketch, Sleep Talk, Snatch, Struggle, Switcheroo, Thief, Transform, or Trick.","Uses the last move used in the battle.",Range.Self,150,0,20,0,false,false,false,false,new int[]{1});
	public static final Move cosmicpower = new Move(Type.Psychic,"cosmicpower","Cosmic Power","Raises the user's Defense and Special Defense by 1 stage.","Boosts the user's Defense and Sp. Def by 1.",Range.Self,150,0,20,0,false,false,false,false,new int[]{1});
	public static final Move cottonguard = new Move(Type.Grass,"cottonguard","Cotton Guard","Raises the user's Defense by 3 stages.","Boosts the user's Defense by 3.",Range.Self,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move cottonspore = new Move(Type.Grass,"cottonspore","Cotton Spore","Lowers one adjacent target's Speed by 2 stages. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","Lowers the target's Speed by 2.",Range.Any1,100,0,40,0,false,false,false,false,new int[]{1});
	public static final Move counter = new Move(Type.Fighting,"counter","Counter","Deals damage to the last foe to hit the user with a physical attack this turn. The damage is equal to twice the HP lost by the user from that attack. If that foe's position is no longer in use, damage is done to a random foe in range. Only the last hit of a multi-hit attack is counted. Fails if the user was not hit by a foe's physical attack this turn. Makes contact. Priority -5.","If hit by physical attack, returns double damage.",Range.Scripted,100,0,20,-5,false,false,false,false,new int[]{1});
	public static final Move covet = new Move(Type.Normal,"covet","Covet","Deals damage to one adjacent target. If the attack was successful and the user has not fainted, it steals the target's held item if the user is not holding one. Makes contact.","If the user has no item, it steals the target's.",Range.Any1,100,60,25,0,false,false,false,false,new int[]{1});
	public static final Move crabhammer = new Move(Type.Water,"crabhammer","Crabhammer","Deals damage to one adjacent target with a higher chance for a critical hit. Makes contact.","High critical hit ratio.",Range.Any1,90,100,10,0,false,false,false,false,new int[]{1});
	public static final Move craftyshield = new Move(Type.Fairy,"craftyshield","Crafty Shield","Protects the user and allies from status moves. Priority +3.","Protects allies from status moves this turn.",Range.AllySide,150,0,10,3,false,false,false,false,new int[]{1});
	public static final Move crosschop = new Move(Type.Fighting,"crosschop","Cross Chop","Deals damage to one adjacent target with a higher chance for a critical hit. Makes contact.","High critical hit ratio.",Range.Any1,80,100,5,0,false,false,false,false,new int[]{1});
	public static final Move crosspoison = new Move(Type.Poison,"crosspoison","Cross Poison","Deals damage to one adjacent target with a 10% chance to poison it and a higher chance for a critical hit. Makes contact.","High critical hit ratio. 10% chance to poison.",Range.Any1,100,70,20,0,false,false,false,true,new int[]{1});
	public static final Move crunch = new Move(Type.Dark,"crunch","Crunch","Deals damage to one adjacent target with a 20% chance to lower its Defense by 1 stage. Makes contact.","20% chance to lower the target's Defense by 1.",Range.Any1,100,80,15,0,false,false,false,true,new int[]{1});
	public static final Move crushclaw = new Move(Type.Normal,"crushclaw","Crush Claw","Deals damage to one adjacent target with a 50% chance to lower its Defense by 1 stage. Makes contact.","50% chance to lower the target's Defense by 1.",Range.Any1,95,75,10,0,false,false,false,true,new int[]{1});
	public static final Move crushgrip = new Move(Type.Normal,"crushgrip","Crush Grip","Deals damage to one adjacent target. Power is equal to 120 * (target's current HP / target's maximum HP), rounded half down, but not less than 1. Makes contact.","More power the more HP the target has left.",Range.Any1,100,0,5,0,false,false,false,false,new int[]{1});
	public static final Move curse = new Move(Type.Ghost,"curse","Curse","If the user is not a Ghost-type, lowers the user's Speed by 1 stage and raises the user's Attack and Defense by 1 stage. If the user is a Ghost-type, the user loses 1/2 of its maximum HP, rounded down and even if it would cause fainting, in exchange for one adjacent target losing 1/4 of its maximum HP, rounded down, at the end of each turn while it is active. If the target uses Baton Pass, the replacement will continue to be affected. Fails if there is no target or if the target is already affected. This move ignores Protect and Detect. Ignores a target's Substitute.","Curses if Ghost, else +1 Atk, +1 Def, -1 Spe.",Range.Any1,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move cut = new Move(Type.Normal,"cut","Cut","Deals damage to one adjacent target. Makes contact. (Field: Can be used to cut down thin trees.)","No additional effect.",Range.Any1,95,50,30,0,false,false,false,false,new int[]{1});
	public static final Move darkpulse = new Move(Type.Dark,"darkpulse","Dark Pulse","Deals damage to one adjacent or non-adjacent target with a 20% chance to flinch it.","20% chance to flinch the target.",Range.Any1,100,80,15,0,false,false,false,true,new int[]{1});
	public static final Move darkvoid = new Move(Type.Dark,"darkvoid","Dark Void","Puts all adjacent foes to sleep. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","Puts the foe(s) to sleep.",Range.Opponent2,80,0,10,0,false,false,false,false,new int[]{1});
	public static final Move dazzlinggleam = new Move(Type.Fairy,"dazzlinggleam","Dazzling Gleam","Deals damage to all adjacent foes.","No additional effect. Hits adjacent foes.",Range.Opponent2,100,80,10,0,false,false,false,false,new int[]{1});
	public static final Move defendorder = new Move(Type.Bug,"defendorder","Defend Order","Raises the user's Defense and Special Defense by 1 stage.","Boosts the user's Defense and Sp. Def by 1.",Range.Self,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move defensecurl = new Move(Type.Normal,"defensecurl","Defense Curl","Raises the user's Defense by 1 stage. As long as the user remains active, the power of the user's Ice Ball and Rollout will be doubled (this effect is not stackable).","Boosts the user's Defense by 1.",Range.Self,150,0,40,0,false,false,false,false,new int[]{1});
	public static final Move defog = new Move(Type.Flying,"defog","Defog","Lowers one adjacent target's evasion by 1 stage. Whether or not the target's evasion was affected, the effects of Safeguard, Mist, Spikes, Toxic Spikes, Stealth Rock, and Sticky Web end for the user's and the target's sides. In addition, the effects of Reflect and Light Screen will end for the target's side. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves. Ignores a target's Substitute, although a Substitute will still block the evasion lowering.","Removes hazards from field. Lowers foe's evasion.",Range.Any1,150,0,15,0,false,false,false,false,new int[]{1});
	public static final Move destinybond = new Move(Type.Ghost,"destinybond","Destiny Bond","Until the user's next turn, if a foe's attack knocks the user out, that foe faints as well, unless the attack was Doom Desire or Future Sight. Ignores a target's Substitute.","If an opponent knocks out the user, it also faints.",Range.Self,150,0,5,0,false,false,false,false,new int[]{1});
	public static final Move detect = new Move(Type.Fighting,"detect","Detect","The user is protected from most attacks made by other Pokemon during this turn. This attack has a 1/X chance of being successful, where X starts at 1 and doubles each time this move is successfully used. X resets to 1 if this attack fails or if the user's last used move is not Detect, Endure, Protect, Quick Guard, or Wide Guard. If X is 256 or more, this move has a 1/(2^32) chance of being successful. Fails if the user moves last this turn. Priority +4.","Prevents moves from affecting the user this turn.",Range.Self,150,0,5,4,false,false,false,false,new int[]{1});
	public static final Move diamondstorm = new Move(Type.Rock,"diamondstorm","Diamond Storm","Deals damage to all adjacent Pokemon with a 50% chance to raise the user's Defense by 1 stage.","Hits all adjacent Pokemon. 50% chance to boost Def by 1.",Range.AllAdjacent,95,100,5,0,false,false,false,true,new int[]{1});
	public static final Move dig = new Move(Type.Ground,"dig","Dig","Deals damage to one adjacent target. This attack charges on the first turn and strikes on the second. On the first turn, the user avoids all attacks other than Earthquake and Magnitude but takes double damage from them, and is also unaffected by Hail and Sandstorm damage. The user cannot make a move between turns. If the user is holding a Power Herb, the move completes in one turn. Makes contact. (Field: Can be used to escape a cave quickly.)","Digs underground turn 1, strikes turn 2.",Range.Any1,100,80,10,0,false,false,false,false,new int[]{1});
	public static final Move disable = new Move(Type.Normal,"disable","Disable","For 4 turns, one adjacent target's last move used becomes disabled. Fails if one of the target's moves is already disabled, if the target has not moved, or if the target no longer knows the move. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves. Ignores a target's Substitute.","For 4 turns, disables the target's last move used.",Range.Any1,100,0,20,0,false,false,false,false,new int[]{1});
	public static final Move disarmingvoice = new Move(Type.Fairy,"disarmingvoice","Disarming Voice","Deals damage to one adjacent target and does not check accuracy. Makes contact.","This move does not check accuracy.",Range.Any1,150,40,15,0,false,false,false,false,new int[]{1});
	public static final Move discharge = new Move(Type.Electric,"discharge","Discharge","Deals damage to all adjacent Pokemon with a 30% chance to paralyze each.","30% chance to paralyze adjacent Pokemon.",Range.AllAdjacent,100,80,15,0,false,false,false,true,new int[]{1});
	public static final Move dive = new Move(Type.Water,"dive","Dive","Deals damage to one adjacent target. This attack charges on the first turn and strikes on the second. On the first turn, the user avoids all attacks other than Surf and Whirlpool but takes double damage from them, and is also unaffected by Hail and Sandstorm damage. The user cannot make a move between turns. If the user is holding a Power Herb, the move completes in one turn. Makes contact. (Field: Can be used to dive underwater.)","Dives underwater turn 1, strikes turn 2.",Range.Any1,100,80,10,0,false,false,false,false,new int[]{1});
	public static final Move dizzypunch = new Move(Type.Normal,"dizzypunch","Dizzy Punch","Deals damage to one adjacent target with a 20% chance to confuse it. Makes contact. Damage is boosted to 1.2x by the Ability Iron Fist.","20% chance to confuse the target.",Range.Any1,100,70,10,0,false,false,false,true,new int[]{1});
	public static final Move doomdesire = new Move(Type.Steel,"doomdesire","Doom Desire","Deals damage to one adjacent target two turns after this move is used. At the end of that turn, the damage is calculated at that time and dealt to the Pokemon at the position the target had when the move was used. If the user is no longer active at the time, damage is calculated based on the user's natural Special Attack stat, types, and level, with no boosts from its held item or Ability. Fails if this move or Future Sight is already in effect for the target's position. This move ignores Protect and Detect.","Hits two turns after being used.",Range.Any1,100,140,5,0,false,false,false,false,new int[]{1});
	public static final Move doubleedge = new Move(Type.Normal,"doubleedge","Double-Edge","Deals damage to one adjacent target. If the target lost HP, the user takes recoil damage equal to 33% that HP, rounded half up, but not less than 1HP. Makes contact.","Has 33% recoil.",Range.Any1,100,120,15,0,false,false,false,false,new int[]{1});
	public static final Move doublehit = new Move(Type.Normal,"doublehit","Double Hit","Deals damage to one adjacent target and hits twice. If the first hit breaks the target's Substitute, it will take damage for the second hit. Makes contact.","Hits 2 times in one turn.",Range.Any1,90,35,10,0,false,false,false,false,new int[]{2,2});
	public static final Move doublekick = new Move(Type.Fighting,"doublekick","Double Kick","Deals damage to one adjacent target and hits twice. If the first hit breaks the target's Substitute, it will take damage for the second hit. Makes contact.","Hits 2 times in one turn.",Range.Any1,100,30,30,0,false,false,false,false,new int[]{2,2});
	public static final Move doubleslap = new Move(Type.Normal,"doubleslap","Double Slap","Deals damage to one adjacent target and hits two to five times. Has a 1/3 chance to hit two or three times, and a 1/6 chance to hit four or five times. If one of the hits breaks the target's Substitute, it will take damage for the remaining hits. If the user has the Ability Skill Link, this move will always hit five times. Makes contact.","Hits 2-5 times in one turn.",Range.Any1,85,15,10,0,false,false,false,false,new int[]{2,5});
	public static final Move doubleteam = new Move(Type.Normal,"doubleteam","Double Team","Raises the user's evasion by 1 stage.","Boosts the user's evasion by 1.",Range.Self,150,0,15,0,false,false,false,false,new int[]{1});
	public static final Move dracometeor = new Move(Type.Dragon,"dracometeor","Draco Meteor","Deals damage to one adjacent target and lowers the user's Special Attack by 2 stages.","Lowers the user's Sp. Atk by 2.",Range.Any1,90,130,5,0,false,false,false,false,new int[]{1});
	public static final Move dragonbreath = new Move(Type.Dragon,"dragonbreath","Dragon Breath","Deals damage to one adjacent target with a 30% chance to paralyze it.","30% chance to paralyze the target.",Range.Any1,100,60,20,0,false,false,false,true,new int[]{1});
	public static final Move dragonclaw = new Move(Type.Dragon,"dragonclaw","Dragon Claw","Deals damage to one adjacent target. Makes contact.","No additional effect.",Range.Any1,100,80,15,0,false,false,false,false,new int[]{1});
	public static final Move dragondance = new Move(Type.Dragon,"dragondance","Dragon Dance","Raises the user's Attack and Speed by 1 stage.","Boosts the user's Attack and Speed by 1.",Range.Self,150,0,20,0,false,false,false,false,new int[]{1});
	public static final Move dragonpulse = new Move(Type.Dragon,"dragonpulse","Dragon Pulse","Deals damage to one adjacent or non-adjacent target.","No additional effect.",Range.Self,100,85,10,0,false,false,false,false,new int[]{1});
	public static final Move dragonrage = new Move(Type.Dragon,"dragonrage","Dragon Rage","Deals damage to one adjacent target equal to 40HP.","Always does 40 HP of damage.",Range.Any1,100,0,10,0,false,false,false,false,new int[]{1});
	public static final Move dragonrush = new Move(Type.Dragon,"dragonrush","Dragon Rush","Deals damage to one adjacent target with a 20% chance to flinch it. Makes contact.","20% chance to flinch the target.",Range.Any1,75,100,10,0,false,false,false,true,new int[]{1});
	public static final Move dragontail = new Move(Type.Dragon,"dragontail","Dragon Tail","Deals damage to one adjacent target. If both the user and the target have not fainted, the target is forced to switch out and be replaced with a random unfainted ally. This effect fails if the target used Ingrain previously, has the Ability Suction Cups, or has a Substitute. Makes contact. Priority -6. (Wild battles: The battle ends as long as it is not a double battle and the user's level is not less than the opponent's level.)","Forces the target to switch to a random ally.",Range.Any1,90,60,10,-6,false,false,false,true,new int[]{1});
	public static final Move drainingkiss = new Move(Type.Fairy,"drainingkiss","Draining Kiss","Deals damage to one adjacent target. The user recovers 75% of the HP lost by the target, rounded up. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down. Makes contact.","User recovers 75% of the damage dealt.",Range.Any1,100,50,10,0,false,false,false,false,new int[]{1});
	public static final Move drainpunch = new Move(Type.Fighting,"drainpunch","Drain Punch","Deals damage to one adjacent target. The user recovers half of the HP lost by the target, rounded up. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down. Makes contact. Damage is boosted to 1.2x by the Ability Iron Fist.","User recovers 50% of the damage dealt.",Range.Any1,100,75,10,0,false,false,false,false,new int[]{1});
	public static final Move dreameater = new Move(Type.Psychic,"dreameater","Dream Eater","Deals damage to one adjacent target, if it is asleep. The user recovers half of the HP lost by the target, rounded up. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down.","User gains 1/2 HP inflicted. Sleeping target only.",Range.Any1,100,100,15,0,false,false,false,false,new int[]{1});
	public static final Move drillpeck = new Move(Type.Flying,"drillpeck","Drill Peck","Deals damage to one adjacent or non-adjacent target. Makes contact.","No additional effect.",Range.Any1,100,80,20,0,false,false,false,false,new int[]{1});
	public static final Move drillrun = new Move(Type.Ground,"drillrun","Drill Run","Deals damage to one adjacent target with a higher chance for a critical hit. Makes contact.","High critical hit ratio.",Range.Any1,95,80,10,0,false,false,false,false,new int[]{1});
	public static final Move dualchop = new Move(Type.Dragon,"dualchop","Dual Chop","Deals damage to one adjacent target and hits twice. If the first hit breaks the target's Substitute, it will take damage for the second hit. Makes contact.","Hits 2 times in one turn.",Range.Any1,90,40,15,0,false,false,false,false,new int[]{2,2});
	public static final Move dynamicpunch = new Move(Type.Fighting,"dynamicpunch","Dynamic Punch","Deals damage to one adjacent target with a 100% chance to confuse it. Makes contact. Damage is boosted to 1.2x by the Ability Iron Fist.","100% chance to confuse the target.",Range.Any1,50,100,5,0,false,false,false,true,new int[]{1});
	public static final Move earthpower = new Move(Type.Ground,"earthpower","Earth Power","Deals damage to one adjacent target with a 10% chance to lower its Special Defense by 1 stage.","10% chance to lower the target's Sp. Def. by 1.",Range.Any1,100,90,10,0,false,false,false,true,new int[]{1});
	public static final Move earthquake = new Move(Type.Ground,"earthquake","Earthquake","Deals damage to all adjacent Pokemon. Power doubles against Pokemon using Dig.","Hits adjacent Pokemon. Power doubles on Dig.",Range.AllAdjacent,100,100,10,0,false,false,false,false,new int[]{1});
	public static final Move echoedvoice = new Move(Type.Normal,"echoedvoice","Echoed Voice","Deals damage to one adjacent target. For every consecutive turn that this move is used by at least one Pokemon, this move's power is multiplied by the number of turns to pass, but not more than 5. Pokemon with the Ability Soundproof are immune.","Power increases when used on consecutive turns.",Range.Any1,100,40,15,0,false,false,false,false,new int[]{1});
	public static final Move eerieimpulse = new Move(Type.Electric,"eerieimpulse","Eerie Impulse","Harshly lowers the target's Special Attack stat.","Lowers the target's Sp. Atk by 2.",Range.Any1,100,0,15,0,false,false,false,false,new int[]{1});
	public static final Move eggbomb = new Move(Type.Normal,"eggbomb","Egg Bomb","Deals damage to one adjacent target.","No additional effect.",Range.Any1,75,100,10,0,false,false,false,false,new int[]{1});
	public static final Move electricterrain = new Move(Type.Electric,"electricterrain","Electric Terrain","For five turns, Pokemon on the ground cannot fall asleep. Their Electric-type moves are powered up by 50%.","If on ground, can't sleep + Electric moves stronger.",Range.All,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move electrify = new Move(Type.Electric,"electrify","Electrify","If the target is electrified before it uses a move during that turn, the target's move becomes Electric type.","Changes the target's move to Electric type.",Range.Any1,150,0,20,0,false,false,false,false,new int[]{1});
	public static final Move electroball = new Move(Type.Electric,"electroball","Electro Ball","Deals damage to one adjacent target. The power of this move depends on (user's current Speed / target's current Speed), rounded down. Power is equal to 150 if the result is 4 or more, 120 if 3, 80 if 2, 60 if 1, 40 if less than 1.","More power the faster the user is than the target.",Range.Any1,100,0,10,0,false,false,false,false,new int[]{1});
	public static final Move electroweb = new Move(Type.Electric,"electroweb","Electroweb","Deals damage to all adjacent foes with a 100% chance to lower their Speed by 1 stage.","100% chance to lower the foe(s) Speed by 1.",Range.Opponent2,95,55,15,0,false,false,false,true,new int[]{1});
	public static final Move embargo = new Move(Type.Dark,"embargo","Embargo","For 5 turns, one adjacent target cannot use its held item. Items thrown at the target with Fling will still activate for it. If the target uses Baton Pass, the replacement will remain unable to use items. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","For 5 turns, the target can't use any items.",Range.Any1,100,0,15,0,false,false,false,false,new int[]{1});
	public static final Move ember = new Move(Type.Fire,"ember","Ember","Deals damage to one adjacent target with a 10% chance to burn it.","10% chance to burn the target.",Range.Any1,100,40,25,0,false,false,false,true,new int[]{1});
	public static final Move encore = new Move(Type.Normal,"encore","Encore","For 3 turns, one adjacent target is forced to repeat its last move used. If the affected move runs out of PP, the effect ends. Fails if the target is already under this effect, if it has not moved yet, if the move has 0PP, or if the move is Encore, Mimic, Mirror Move, Sketch, Struggle, or Transform. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves. Ignores a target's Substitute.","The target repeats its last move for 3 turns.",Range.Any1,100,0,5,0,false,false,false,false,new int[]{1});
	public static final Move endeavor = new Move(Type.Normal,"endeavor","Endeavor","Deals damage to one adjacent target equal to (target's current HP - user's current HP). Fails if the target's current HP is less than or equal to the user's current HP. Makes contact.","Lowers the target's HP to the user's HP.",Range.Any1,100,0,5,0,false,false,false,false,new int[]{1});
	public static final Move endure = new Move(Type.Normal,"endure","Endure","The user will survive attacks made by other Pokemon during this turn with at least 1HP. This attack has a 1/X chance of being successful, where X starts at 1 and doubles each time this move is successfully used. X resets to 1 if this attack fails or if the user's last used move is not Detect, Endure, Protect, Quick Guard, or Wide Guard. If X is 256 or more, this move has a 1/(2^32) chance of being successful. Fails if the user moves last this turn. Priority +4.","The user survives the next hit with at least 1 HP.",Range.Self,150,0,10,4,false,false,false,false,new int[]{1});
	public static final Move energyball = new Move(Type.Grass,"energyball","Energy Ball","Deals damage to one adjacent target with a 10% chance to lower its Special Defense by 1 stage.","10% chance to lower the target's Sp. Def. by 1.",Range.Any1,100,90,10,0,false,false,false,true,new int[]{1});
	public static final Move entrainment = new Move(Type.Normal,"entrainment","Entrainment","Causes one adjacent target's Ability to become the same as the user's. Fails if the target's Ability is Multitype, Stance Change, Truant, or the same Ability as the user, or if the user's Ability is Flower Gift, Forecast, Illusion, Imposter, Multitype, Stance Change, Trace, or Zen Mode. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","The target's Ability changes to match the user's.",Range.Any1,100,0,15,0,false,false,false,false,new int[]{1});
	public static final Move eruption = new Move(Type.Fire,"eruption","Eruption","Deals damage to all adjacent foes. Power is equal to (user's current HP * 150 / user's maximum HP), rounded down, but not less than 1.","Less power as user's HP decreases. Hits foe(s).",Range.Opponent2,100,150,5,0,false,false,false,false,new int[]{1});
	public static final Move explosion = new Move(Type.Normal,"explosion","Explosion","The user faints and then damage is dealt to all adjacent Pokemon.","Hits adjacent Pokemon. The user faints.",Range.AllAdjacent,100,250,5,0,false,false,false,false,new int[]{1});
	public static final Move extrasensory = new Move(Type.Psychic,"extrasensory","Extrasensory","Deals damage to one adjacent target with a 10% chance to flinch it.","10% chance to flinch the target.",Range.Any1,100,80,20,0,false,false,false,true,new int[]{1});
	public static final Move extremespeed = new Move(Type.Normal,"extremespeed","Extreme Speed","Deals damage to one adjacent target. Makes contact. Priority +2.","Nearly always goes first.",Range.Any1,100,80,5,2,false,false,false,false,new int[]{1});
	public static final Move facade = new Move(Type.Normal,"facade","Facade","Deals damage to one adjacent target. Power doubles if the user is burned, paralyzed, or poisoned. Makes contact.","Power doubles if user is burn/poison/paralyzed.",Range.Any1,100,70,20,0,false,false,false,false,new int[]{1});
	public static final Move feintattack = new Move(Type.Dark,"feintattack","Feint Attack","Deals damage to one adjacent target and does not check accuracy. Makes contact.","This move does not check accuracy.",Range.Any1,150,60,20,0,false,false,false,false,new int[]{1});
	public static final Move fairylock = new Move(Type.Fairy,"fairylock","Fairy Lock","Keeps all Pokemon from fleeing during the next turn.","Prevents fleeing for one turn.",Range.All,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move fairywind = new Move(Type.Fairy,"fairywind","Fairy Wind","Deals damage to one adjacent target.","No additional effect.",Range.Any1,100,40,30,0,false,false,false,false,new int[]{1});
	public static final Move fakeout = new Move(Type.Normal,"fakeout","Fake Out","Deals damage to one adjacent target with a 100% chance to flinch it. Fails unless it is the user's first turn on the field. Makes contact. Priority +3.","Hits first. First turn out only. 100% flinch chance.",Range.Any1,100,40,10,3,false,false,false,true,new int[]{1});
	public static final Move faketears = new Move(Type.Dark,"faketears","Fake Tears","Lowers one adjacent target's Special Defense by 2 stages. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","Lowers the target's Sp. Def by 2.",Range.Any1,100,0,20,0,false,false,false,false,new int[]{1});
	public static final Move falseswipe = new Move(Type.Normal,"falseswipe","False Swipe","Deals damage to one adjacent target but leaves it with at least 1HP. Makes contact.","Always leaves the target with at least 1 HP.",Range.Any1,100,40,40,0,false,false,false,false,new int[]{1});
	public static final Move featherdance = new Move(Type.Flying,"featherdance","Feather Dance","Lowers one adjacent target's Attack by 2 stages. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","Lowers the target's Attack by 2.",Range.Any1,100,0,15,0,false,false,false,false,new int[]{1});
	public static final Move feint = new Move(Type.Normal,"feint","Feint","Deals damage to one adjacent target and breaks through Detect, King's Shield, Spiky Shield and Protect for this turn, allowing other Pokemon to attack the target normally. If the target is a foe, Quick Guard and Wide Guard are also broken for this turn and other Pokemon may attack the target normally. Priority +2.","Nullifies Detect, Protect, and Quick/Wide Guard.",Range.Any1,100,30,10,2,false,false,false,false,new int[]{1});
	public static final Move fellstinger = new Move(Type.Bug,"fellstinger","Fell Stinger","When the user knocks out a target with this move, the user's Attack stat rises sharply.","Raises Attack by 2 if knocks out target.",Range.Any1,100,30,25,0,false,false,false,false,new int[]{1});
	public static final Move fierydance = new Move(Type.Fire,"fierydance","Fiery Dance","Deals damage to one adjacent target with a 50% chance to raise the user's Special Attack by 1 stage.","50% chance to boost the user's Sp. Atk by 1.",Range.Any1,100,80,10,0,false,false,false,true,new int[]{1});
	public static final Move finalgambit = new Move(Type.Fighting,"finalgambit","Final Gambit","Deals damage to one adjacent target equal to the user's current HP. If this move is successful, the user faints. Makes contact.","Does damage equal to the user's HP. User faints.",Range.Any1,100,0,5,0,false,false,false,false,new int[]{1});
	public static final Move fireblast = new Move(Type.Fire,"fireblast","Fire Blast","Deals damage to one adjacent target with a 10% chance to burn it.","10% chance to burn the target.",Range.Any1,85,110,5,0,false,false,false,true,new int[]{1});
	public static final Move firefang = new Move(Type.Fire,"firefang","Fire Fang","Deals damage to one adjacent target with a 10% chance to burn it and a 10% chance to flinch it. Makes contact.","10% chance to burn. 10% chance to flinch.",Range.Any1,95,65,15,0,false,false,false,true,new int[]{1});
	public static final Move firepledge = new Move(Type.Fire,"firepledge","Fire Pledge","Deals damage to one adjacent target. If one of the user's allies chose to use Grass Pledge or Water Pledge this turn and has not moved yet, they take their turn immediately after the user and the user's move does nothing. Power goes up to 150 if this move is used by an ally that way, and a sea of fire appears on the target's side if the other move was Grass Pledge, or a rainbow appears on the user's side if the other move was Water Pledge.","Use with Grass or Water Pledge for added effect.",Range.Any1,100,80,10,0,false,false,false,false,new int[]{1});
	public static final Move firepunch = new Move(Type.Fire,"firepunch","Fire Punch","Deals damage to one adjacent target with a 10% chance to burn it. Makes contact. Damage is boosted to 1.2x by the Ability Iron Fist.","10% chance to burn the target.",Range.Any1,100,75,15,0,false,false,false,true,new int[]{1});
	public static final Move firespin = new Move(Type.Fire,"firespin","Fire Spin","Deals damage to one adjacent target and prevents it from switching for four or five turns; seven turns if the user is holding Grip Claw. Causes damage to the target equal to 1/8 of its maximum HP (1/6 if the user is holding Binding Band), rounded down, at the end of each turn during effect. The target can still switch out if it is holding Shed Shell or uses Baton Pass, U-turn, or Volt Switch. The effect ends if either the user or the target leaves the field, or if the target uses Rapid Spin. This effect is not stackable or reset by using this or another partial-trapping move.","Traps and damages the target for 4-5 turns.",Range.Any1,85,35,15,0,false,false,false,false,new int[]{1});
	public static final Move fissure = new Move(Type.Ground,"fissure","Fissure","Deals damage to one adjacent target equal to the target's max HP. Ignores accuracy and evasion modifiers. This attack's accuracy is equal to (user's level - target's level + 30)%, and fails if the target is at a higher level. Pokemon with the Ability Sturdy are immune.","OHKOs the target. Fails if user is a lower level.",Range.Any1,30,0,5,0,false,false,false,false,new int[]{1});
	public static final Move flail = new Move(Type.Normal,"flail","Flail","Deals damage to one adjacent target based on the amount of HP the user has left. X is equal to (user's current HP * 48 / user's maximum HP), rounded down; the base power of this attack is 20 if X is 33 to 48, 40 if X is 17 to 32, 80 if X is 10 to 16, 100 if X is 5 to 9, 150 if X is 2 to 4, and 200 if X is 0 or 1. Makes contact.","More power the less HP the user has left.",Range.Any1,100,0,15,0,false,false,false,false,new int[]{1});
	public static final Move flameburst = new Move(Type.Fire,"flameburst","Flame Burst","Deals damage to one adjacent target. If this move is successful, each ally adjacent to the target loses 1/16 of its maximum HP, rounded down, unless it has the Ability Magic Guard.","Damages Pokemon next to the target as well.",Range.Any1,100,70,15,0,false,false,false,false,new int[]{1});
	public static final Move flamecharge = new Move(Type.Fire,"flamecharge","Flame Charge","Deals damage to one adjacent target with a 100% chance to raise the user's Speed by 1 stage. Makes contact.","100% chance to boost the user's Speed by 1.",Range.Any1,100,50,20,0,false,false,false,true,new int[]{1});
	public static final Move flamewheel = new Move(Type.Fire,"flamewheel","Flame Wheel","Deals damage to one adjacent target with a 10% chance to burn it. If the user is frozen, it will defrost before using this move. Makes contact.","10% chance to burn the target. Thaws user.",Range.Any1,100,60,25,0,false,false,false,true,new int[]{1});
	public static final Move flamethrower = new Move(Type.Fire,"flamethrower","Flamethrower","Deals damage to one adjacent target with a 10% chance to burn it.","10% chance to burn the target.",Range.Any1,100,90,15,0,false,false,false,true,new int[]{1});
	public static final Move flareblitz = new Move(Type.Fire,"flareblitz","Flare Blitz","Deals damage to one adjacent target with a 10% chance to burn it. If the target lost HP, the user takes recoil damage equal to 33% that HP, rounded half up, but not less than 1HP. If the user is frozen, it will defrost before using this move. Makes contact.","Has 33% recoil. 10% chance to burn. Thaws user.",Range.Any1,100,120,15,0,false,false,false,true,new int[]{1});
	public static final Move flash = new Move(Type.Normal,"flash","Flash","Lowers one adjacent target's accuracy by 1 stage. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves. (Field: Can be used to light up dark caves.)","Lowers the target's accuracy by 1.",Range.Any1,100,0,20,0,false,false,false,false,new int[]{1});
	public static final Move flashcannon = new Move(Type.Steel,"flashcannon","Flash Cannon","Deals damage to one adjacent target with a 10% chance to lower its Special Defense by 1 stage.","10% chance to lower the target's Sp. Def by 1.",Range.Any1,100,80,10,0,false,false,false,true,new int[]{1});
	public static final Move flatter = new Move(Type.Dark,"flatter","Flatter","Raises one adjacent target's Special Attack by 1 stage and confuses it. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","Boosts the target's Sp. Atk by 1 and confuses it.",Range.Any1,100,0,15,0,false,false,false,false,new int[]{1});
	public static final Move fling = new Move(Type.Dark,"fling","Fling","Deals damage to one adjacent target. The power of this move is based on the user's held item. The held item is lost and it activates for the target if applicable. If there is no target or the target avoids this move using Protect or Detect, the user's held item is still lost. Fails if the user has no held item, if the held item cannot be thrown, if the user is under the effect of Embargo or Magic Room, or if the user has the Ability Klutz.","Flings the user's item at the target. Power varies.",Range.Any1,100,0,10,0,false,false,false,false,new int[]{1});
	public static final Move flowershield = new Move(Type.Fairy,"flowershield","Flower Shield","The user raises the Defense stat of all Grass-type Pokemon in battle.","Raises Defense by 1 of Grass types in battle.",Range.All,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move fly = new Move(Type.Flying,"fly","Fly","Deals damage to one adjacent or non-adjacent target. This attack charges on the first turn and strikes on the second. On the first turn, the user avoids all attacks other than Gust, Hurricane, Sky Uppercut, Smack Down, Thunder, and Twister. The user cannot make a move between turns. If the user is holding a Power Herb, the move completes in one turn. This move cannot be used while Gravity is in effect. Makes contact. (Field: Can be used to fly to a previously visited area.)","Flies up on first turn, then strikes the next turn.",Range.All,95,90,15,0,false,false,false,false,new int[]{1});
	public static final Move flyingpress = new Move(Type.Fighting,"flyingpress","Flying Press","Both Fighting-type and Flying-type simultaneously.","Both Fighting-type and Flying-type simultaneously.",Range.Any1,95,80,10,0,false,false,false,false,new int[]{1});
	public static final Move focusblast = new Move(Type.Fighting,"focusblast","Focus Blast","Deals damage to one adjacent target with a 10% chance to lower its Special Defense by 1 stage.","10% chance to lower the target's Sp. Def by 1.",Range.Any1,70,120,5,0,false,false,false,true,new int[]{1});
	public static final Move focusenergy = new Move(Type.Normal,"focusenergy","Focus Energy","Raises the user's chance for a critical hit by 2 stages. Baton Pass can be used to transfer this effect to an ally.","Boosts the user's critical hit ratio by 2.",Range.Self,150,0,30,0,false,false,false,false,new int[]{1});
	public static final Move focuspunch = new Move(Type.Fighting,"focuspunch","Focus Punch","Deals damage to one adjacent target. The user loses its focus and does nothing if it is hit by a damaging attack this turn before it can execute the move. Makes contact. Damage is boosted to 1.2x by the Ability Iron Fist. Priority -3.","Fails if the user takes damage before it hits.",Range.Any1,100,150,20,-3,false,false,false,false,new int[]{1});
	public static final Move followme = new Move(Type.Normal,"followme","Follow Me","Until the end of the turn, all single-target attacks from the foe's team are redirected to the user if they are in range. Such attacks are redirected to the user before they can be reflected by Magic Coat or the Ability Magic Bounce, or drawn in by the Abilities Lightningrod or Storm Drain. Fails if it is not a double or triple battle. Priority +3.","The foes' moves target the user on the turn used.",Range.Self,150,0,20,2,false,false,false,false,new int[]{1});
	public static final Move forcepalm = new Move(Type.Fighting,"forcepalm","Force Palm","Deals damage to one adjacent target with a 30% chance to paralyze it. Makes contact.","30% chance to paralyze the target.",Range.Any1,100,60,10,0,false,false,false,true,new int[]{1});
	public static final Move foresight = new Move(Type.Normal,"foresight","Foresight","Causes one adjacent target to have its positive evasion stat stage set to 0 while it is active. Normal and Fighting-type attacks can hit the target if it is a Ghost-type. The effect ends when the target is no longer active. Fails if the target is already affected. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves. Ignores a target's Substitute.","Blocks evasion mods. Fighting, Normal hit Ghost.",Range.Any1,150,0,40,0,false,false,false,false,new int[]{1});
	public static final Move forestscurse = new Move(Type.Grass,"forestscurse","Forest's Curse","Adds Grass to the target's type(s). If the target was affected by Trick-or-Treat, its Ghost type is replaced.","Adds Grass to the target's type(s).",Range.Any1,100,0,20,0,false,false,false,false,new int[]{1});
	public static final Move foulplay = new Move(Type.Dark,"foulplay","Foul Play","Deals damage to one adjacent target. Damage is calculated using the target's Attack stat, including stat stage changes. However, the effect of any ability or status ailment is calculated normally. Makes contact.","Uses target's Attack stat in damage calculation.",Range.Any1,100,95,15,0,false,false,false,false,new int[]{1});
	public static final Move freezedry = new Move(Type.Ice,"freezedry","Freeze-Dry","Deals damage to one adjacent target with a 10% chance to freeze it. Super-effective against Water-type Pokemon.","Super-effective against Water. 10% freeze chance.",Range.Any1,100,70,20,0,false,false,false,true,new int[]{1});
	public static final Move freezeshock = new Move(Type.Ice,"freezeshock","Freeze Shock","Deals damage to one adjacent target with a 30% chance to paralyze it. This attack charges on the first turn and strikes on the second. The user cannot make a move between turns. If the user is holding a Power Herb, the move completes in one turn.","Charges turn 1. Hits turn 2. 30% paralyze.",Range.Any1,90,140,5,0,false,false,false,true,new int[]{1});
	public static final Move frenzyplant = new Move(Type.Grass,"frenzyplant","Frenzy Plant","Deals damage to one adjacent target. If this move is successful, the user must recharge on the following turn and cannot make a move.","User cannot move next turn.",Range.Any1,90,150,5,0,false,false,false,false,new int[]{1});
	public static final Move frostbreath = new Move(Type.Ice,"frostbreath","Frost Breath","Deals damage to one adjacent target. This move is always a critical hit unless the target is under the effect of Lucky Chant or has the Abilities Battle Armor or Shell Armor.","Always results in a critical hit.",Range.Any1,90,60,10,0,false,false,false,false,new int[]{1});
	public static final Move frustration = new Move(Type.Normal,"frustration","Frustration","Deals damage to one adjacent target. Power is equal to the greater of ((255 - user's Happiness) * 2/5), rounded down, or 1. Makes contact.","Max 102 power at minimum Happiness.",Range.Any1,100,0,20,0,false,false,false,false,new int[]{1});
	public static final Move furyattack = new Move(Type.Normal,"furyattack","Fury Attack","Deals damage to one adjacent target and hits two to five times. Has a 1/3 chance to hit two or three times, and a 1/6 chance to hit four or five times. If one of the hits breaks the target's Substitute, it will take damage for the remaining hits. If the user has the Ability Skill Link, this move will always hit five times. Makes contact.","Hits 2-5 times in one turn.",Range.Any1,85,15,20,0,false,false,false,false,new int[]{2,5});
	public static final Move furycutter = new Move(Type.Bug,"furycutter","Fury Cutter","Deals damage to one adjacent target. Power doubles with each successful hit, up to a maximum of 160 power; resets to 20 power if the move misses or another move is used. Makes contact.","Power doubles with each hit, up to 160.",Range.Any1,95,40,20,0,false,false,false,false,new int[]{1});
	public static final Move furyswipes = new Move(Type.Normal,"furyswipes","Fury Swipes","Deals damage to one adjacent target and hits two to five times. Has a 1/3 chance to hit two or three times, and a 1/6 chance to hit four or five times. If one of the hits breaks the target's Substitute, it will take damage for the remaining hits. If the user has the Ability Skill Link, this move will always hit five times. Makes contact.","Hits 2-5 times in one turn.",Range.Any1,80,18,15,0,false,false,false,false,new int[]{2,5});
	public static final Move fusionbolt = new Move(Type.Electric,"fusionbolt","Fusion Bolt","Deals damage to one adjacent target. If this move is successful, the next use of Fusion Flare by any Pokemon this turn will have its power doubled.","Power doubles if used after Fusion Flare.",Range.Any1,100,100,5,0,false,false,false,false,new int[]{1});
	public static final Move fusionflare = new Move(Type.Fire,"fusionflare","Fusion Flare","Deals damage to one adjacent target. If this move is successful, the next use of Fusion Bolt by any Pokemon this turn will have its power doubled. If the user is frozen, it will defrost before using this move.","Power doubles if used after Fusion Bolt.",Range.Any1,100,100,5,0,false,false,false,false,new int[]{1});
	public static final Move futuresight = new Move(Type.Psychic,"futuresight","Future Sight","Deals damage to one adjacent target two turns after this move is used. At the end of that turn, the damage is dealt to the Pokemon at the position the target had when the move was used. If the user is no longer active at the time, damage is calculated based on the user's natural Special Attack stat, types, and level, with no boosts from its held item or Ability. Fails if this move or Doom Desire is already in effect for the target's position. This move ignores Protect and Detect.","Hits two turns after being used.",Range.Any1,100,120,10,0,false,false,false,false,new int[]{1});
	public static final Move gastroacid = new Move(Type.Poison,"gastroacid","Gastro Acid","Causes one adjacent target's Ability to be rendered ineffective as long as it remains active. If the target uses Baton Pass, the replacement will remain under this effect. Fails if the target's Ability is Multitype or Stance Change. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","Nullifies the target's Ability",Range.Any1,100,0,10,0,false,false,false,false,new int[]{1});
	public static final Move geargrind = new Move(Type.Steel,"geargrind","Gear Grind","Deals damage to one adjacent target and hits twice. If the first hit breaks the target's Substitute, it will take damage for the second hit. Makes contact.","Hits 2 times in one turn.",Range.Any1,85,50,15,0,false,false,false,false,new int[]{2,2});
	public static final Move geomancy = new Move(Type.Fairy,"geomancy","Geomancy","The user charges turn one, then sharply raise Special Attack, Special Defense, and Speed the next turn.","Sharply raises SpAtk, SpDef, and Speed on turn 2.",Range.Self,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move gigadrain = new Move(Type.Grass,"gigadrain","Giga Drain","Deals damage to one adjacent target. The user recovers half of the HP lost by the target, rounded up. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down.","User recovers 50% of the damage dealt.",Range.Any1,100,75,10,0,false,false,false,false,new int[]{1});
	public static final Move gigaimpact = new Move(Type.Normal,"gigaimpact","Giga Impact","Deals damage to one adjacent target. If this move is successful, the user must recharge on the following turn and cannot make a move. Makes contact.","User cannot move next turn.",Range.Any1,90,150,5,0,false,false,false,false,new int[]{1});
	public static final Move glaciate = new Move(Type.Ice,"glaciate","Glaciate","Deals damage to all adjacent foes with a 100% chance to lower their Speed by 1 stage each.","100% chance to lower the foe(s) Speed by 1.",Range.Opponent2,95,65,10,0,false,false,false,true,new int[]{1});
	public static final Move glare = new Move(Type.Normal,"glare","Glare","Paralyzes one adjacent target. Ghost-types are not immune. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","Paralyzes the target.",Range.Any1,100,0,30,0,false,false,false,false,new int[]{1});
	public static final Move grassknot = new Move(Type.Grass,"grassknot","Grass Knot","Deals damage to one adjacent target based on that target's weight. Power is 20 if less than 10kg, 40 if less than 25kg, 60 if less than 50kg, 80 if less than 100kg, 100 if less than 200kg, and 120 if greater than or equal to 200kg. Makes contact.","More power the heavier the target.",Range.Any1,100,0,20,0,false,false,false,false,new int[]{1});
	public static final Move grasspledge = new Move(Type.Grass,"grasspledge","Grass Pledge","Deals damage to one adjacent target. If one of the user's allies chose to use Fire Pledge or Water Pledge this turn and has not moved yet, they take their turn immediately after the user and the user's move does nothing. Power goes up to 150 if this move is used by an ally that way, and a sea of fire appears on the target's side if the other move was Fire Pledge, or a swamp appears on the target's side if the other move was Water Pledge.","Use with Fire or Water Pledge for added effect.",Range.Any1,100,80,10,0,false,false,false,false,new int[]{1});
	public static final Move grasswhistle = new Move(Type.Grass,"grasswhistle","Grass Whistle","Puts one adjacent target to sleep. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves. Pokemon with the Ability Soundproof are immune.","Puts the target to sleep.",Range.Any1,55,0,15,0,false,false,false,false,new int[]{1});
	public static final Move grassyterrain = new Move(Type.Grass,"grassyterrain","Grassy Terrain","For five turns, Pokemon on the ground restore 1/16 of their HP each turn. Their Grass-type moves are powered up by 50%.","If on ground, restore HP + Grass moves stronger.",Range.All,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move gravity = new Move(Type.Psychic,"gravity","Gravity","For 5 turns, the evasion of all active Pokemon is 0.6x. At the time of use, Bounce, Fly, Magnet Rise, Sky Drop, and Telekinesis end immediately for all active Pokemon. During the effect, Bounce, Fly, High Jump Kick, Jump Kick, Magnet Rise, Sky Drop, Splash, and Telekinesis are prevented from being used by all active Pokemon. Ground-type attacks, Spikes, Toxic Spikes, and the Ability Arena Trap can affect Flying-types or Pokemon with the Ability Levitate. Fails if this move is already in effect.","For 5 turns, negates all Ground immunities.",Range.All,150,0,5,0,false,false,false,false,new int[]{1});
	public static final Move growl = new Move(Type.Normal,"growl","Growl","Lowers all adjacent foes' Attack by 1 stage. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves. Pokemon with the Ability Soundproof are immune.","Lowers the foe(s) Attack by 1.",Range.Opponent2,100,0,40,0,false,false,false,false,new int[]{1});
	public static final Move growth = new Move(Type.Normal,"growth","Growth","Raises the user's Attack and Special Attack by 1 stage. If the weather is Sunny Day, raises the user's Attack and Special Attack by 2 stages.","Boosts the user's Attack and Sp. Atk by 1.",Range.Self,150,0,20,0,false,false,false,false,new int[]{1});
	public static final Move grudge = new Move(Type.Ghost,"grudge","Grudge","Until the user's next turn, if a foe's attack knocks the user out, that foe loses all remaining PP for that attack. Ignores a target's Substitute.","If the user faints, the attack used loses all its PP.",Range.Self,150,0,5,0,false,false,false,false,new int[]{1});
	public static final Move guardsplit = new Move(Type.Psychic,"guardsplit","Guard Split","The user and one adjacent target have their Defense and Special Defense stats set to be equal to the average of the user and the target's Defense and Special Defense stats, respectively, rounded down. Stat stage changes are unaffected.","Averages Defense and Sp. Def stats with target.",Range.Any1,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move guardswap = new Move(Type.Psychic,"guardswap","Guard Swap","The user swaps its Defense and Special Defense stat stage changes with one adjacent target. Ignores a target's Substitute.","Swaps Defense and Sp. Def changes with target.",Range.Any1,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move guillotine = new Move(Type.Normal,"guillotine","Guillotine","Deals damage to one adjacent target equal to the target's maximum HP. Ignores accuracy and evasion modifiers. This attack's accuracy is equal to (user's level - target's level + 30)%, and fails if the target is at a higher level. Pokemon with the Ability Sturdy are immune. Makes contact.","OHKOs the target. Fails if user is a lower level.",Range.Any1,30,0,5,0,false,false,false,false,new int[]{1});
	public static final Move gunkshot = new Move(Type.Poison,"gunkshot","Gunk Shot","Deals damage to one adjacent target with a 30% chance to poison it.","30% chance to poison the target.",Range.Any1,80,120,5,0,false,false,false,true,new int[]{1});
	public static final Move gust = new Move(Type.Flying,"gust","Gust","Deals damage to one adjacent or non-adjacent target. Power doubles against Pokemon using Bounce, Fly, or Sky Drop.","Power doubles during Fly, Bounce, and Sky Drop.",Range.Any1,100,40,35,0,false,false,false,false,new int[]{1});
	public static final Move gyroball = new Move(Type.Steel,"gyroball","Gyro Ball","Deals damage to one adjacent target. Power is equal to (25 * target's current Speed / user's current Speed), rounded down, + 1, but not more than 150. Makes contact.","More power the slower the user than the target.",Range.Any1,100,0,5,0,false,false,false,false,new int[]{1});
	public static final Move hail = new Move(Type.Ice,"hail","Hail","For 5 turns, the weather becomes Hail. At the end of each turn except the last, all active Pokemon lose 1/16 of their maximum HP, rounded down, unless they are an Ice-type, or have the Abilities Ice Body, Magic Guard, Overcoat, or Snow Cloak. Lasts for 8 turns if the user is holding Icy Rock. Fails if the current weather is Hail.","For 5 turns, hail crashes down.",Range.All,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move hammerarm = new Move(Type.Fighting,"hammerarm","Hammer Arm","Deals damage to one adjacent target and lowers the user's Speed by 1 stage. Makes contact. Damage is boosted to 1.2x by the Ability Iron Fist.","Lowers the user's Speed by 1.",Range.Any1,90,100,10,0,false,false,false,false,new int[]{1});
	public static final Move happyhour = new Move(Type.Normal,"happyhour","Happy Hour","No competitive effect. (Doubles the prize money received after battle.)","No effect.",Range.Self,150,0,30,0,false,false,false,false,new int[]{1});
	public static final Move harden = new Move(Type.Normal,"harden","Harden","Raises the user's Defense by 1 stage.","Boosts the user's Defense by 1.",Range.Self,150,0,30,0,false,false,false,false,new int[]{1});
	public static final Move haze = new Move(Type.Ice,"haze","Haze","Eliminates any stat stage changes from all active Pokemon.","Eliminates all stat changes.",Range.All,150,0,30,0,false,false,false,false,new int[]{1});
	public static final Move headcharge = new Move(Type.Normal,"headcharge","Head Charge","Deals damage to one adjacent target. If the target lost HP, the user takes recoil damage equal to 1/4 that HP, rounded half up, but not less than 1HP. Makes contact.","Has 1/4 recoil.",Range.Any1,100,120,15,0,false,false,false,false,new int[]{1});
	public static final Move headsmash = new Move(Type.Rock,"headsmash","Head Smash","Deals damage to one adjacent target. If the target lost HP, the user takes recoil damage equal to 1/2 that HP, rounded half up, but not less than 1HP. Makes contact.","Has 1/2 recoil.",Range.Any1,80,150,5,0,false,false,false,false,new int[]{1});
	public static final Move headbutt = new Move(Type.Normal,"headbutt","Headbutt","Deals damage to one adjacent target with a 30% chance to flinch it. Makes contact.","30% chance to flinch the target.",Range.Any1,100,70,15,0,false,false,false,true,new int[]{1});
	public static final Move healbell = new Move(Type.Normal,"healbell","Heal Bell","Every Pokemon in the user's party is cured of its major status problem. Although this move is sound-based, Pokemon with the Ability Soundproof are also cured.","Cures the user's party of all status conditions.",Range.Allies,150,0,5,0,false,false,false,true,new int[]{1});
	public static final Move healblock = new Move(Type.Psychic,"healblock","Heal Block","For 5 turns, all adjacent foes are prevented from restoring any HP as long as they remain active. During the effect, direct healing moves are unusable, draining moves will not heal the user, and Abilities and items that grant healing will not heal the user. If an affected Pokemon uses Baton Pass, the replacement will remain unable to restore its HP. Pain Split and the Ability Regenerator are unaffected. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","For 5 turns, the foe(s) is prevented from healing.",Range.Opponent2,100,0,15,0,false,false,false,false,new int[]{1});
	public static final Move healorder = new Move(Type.Bug,"healorder","Heal Order","The user restores 1/2 of its maximum HP, rounded half up.","Heals the user by 50% of its max HP.",Range.Self,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move healpulse = new Move(Type.Psychic,"healpulse","Heal Pulse","Causes one adjacent or non-adjacent target to gain 1/2 of its maximum HP, rounded half up. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","Heals the target by 50% of its max HP.",Range.Any1,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move healingwish = new Move(Type.Psychic,"healingwish","Healing Wish","The user faints and the Pokemon brought out to replace it has its HP fully restored along with having any major status condition cured. Fails if the user is the last unfainted Pokemon in its party.","User faints. Replacement is fully healed.",Range.Self,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move heartstamp = new Move(Type.Psychic,"heartstamp","Heart Stamp","Deals damage to one adjacent target with a 30% chance to flinch it. Makes contact.","30% chance to flinch the target.",Range.Any1,100,60,25,0,false,false,false,true,new int[]{1});
	public static final Move heartswap = new Move(Type.Psychic,"heartswap","Heart Swap","The user swaps all its stat stage changes with one adjacent target. Ignores a target's Substitute.","Swaps all stat changes with target.",Range.Any1,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move heatcrash = new Move(Type.Fire,"heatcrash","Heat Crash","Deals damage to one adjacent target. The power of this move depends on (user's weight / target's weight), rounded down. Power is equal to 120 if the result is 5 or more, 100 if 4, 80 if 3, 60 if 2, and 40 if 1 or less. Makes contact.","More power the heavier the user than the target.",Range.Any1,100,0,10,0,false,false,false,false,new int[]{1});
	public static final Move heatwave = new Move(Type.Fire,"heatwave","Heat Wave","Deals damage to all adjacent foes with a 10% chance to burn each.","10% chance to burn the foe(s).",Range.Opponent2,90,95,10,0,false,false,false,true,new int[]{1});
	public static final Move heavyslam = new Move(Type.Steel,"heavyslam","Heavy Slam","Deals damage to one adjacent target. The power of this move depends on (user's weight / target's weight), rounded down. Power is equal to 120 if the result is 5 or more, 100 if 4, 80 if 3, 60 if 2, and 40 if 1 or less. Makes contact.","More power the heavier the user than the target.",Range.Any1,100,0,10,0,false,false,false,false,new int[]{1});
	public static final Move helpinghand = new Move(Type.Normal,"helpinghand","Helping Hand","Causes one adjacent ally to have the power of its attack this turn boosted to 1.5x (this effect is stackable). Fails if there is no adjacent ally, but does not fail if the ally is using a two-turn move. This move ignores Protect and Detect. Ignores a target's Substitute. Priority +5.","One adjacent ally's move power is 1.5x this turn.",Range.Any1,150,0,20,5,false,false,false,false,new int[]{1});
	public static final Move hex = new Move(Type.Ghost,"hex","Hex","Deals damage to one adjacent target. Power doubles if the target has a major status problem.","Power doubles if the target has a status ailment.",Range.Any1,100,65,10,0,false,false,false,false,new int[]{1});
	public static final Move hiddenpower = new Move(Type.Normal,"hiddenpower","Hidden Power","Deals damage to one adjacent target. This move's type depends on the user's individual values (IVs). Type can be any but Normal or Fairy.","Varies in type based on the user's IVs.",Range.Any1,100,60,15,0,false,false,false,false,new int[]{1});
	public static final Move hiddenpowerbug = new Move(Type.Bug,"hiddenpower","Hidden Power Bug","","",Range.Any1,100,60,15,0,false,false,false,false,new int[]{1});
	public static final Move hiddenpowerdark = new Move(Type.Dark,"hiddenpower","Hidden Power Dark","","",Range.Any1,100,60,15,0,false,false,false,false,new int[]{1});
	public static final Move hiddenpowerdragon = new Move(Type.Dragon,"hiddenpower","Hidden Power Dragon","","",Range.Any1,100,60,15,0,false,false,false,false,new int[]{1});
	public static final Move hiddenpowerelectric = new Move(Type.Electric,"hiddenpower","Hidden Power Electric","","",Range.Any1,100,60,15,0,false,false,false,false,new int[]{1});
	public static final Move hiddenpowerfighting = new Move(Type.Fighting,"hiddenpower","Hidden Power Fighting","","",Range.Any1,100,60,15,0,false,false,false,false,new int[]{1});
	public static final Move hiddenpowerfire = new Move(Type.Fire,"hiddenpower","Hidden Power Fire","","",Range.Any1,100,60,15,0,false,false,false,false,new int[]{1});
	public static final Move hiddenpowerflying = new Move(Type.Flying,"hiddenpower","Hidden Power Flying","","",Range.Any1,100,60,15,0,false,false,false,false,new int[]{1});
	public static final Move hiddenpowerghost = new Move(Type.Ghost,"hiddenpower","Hidden Power Ghost","","",Range.Any1,100,60,15,0,false,false,false,false,new int[]{1});
	public static final Move hiddenpowergrass = new Move(Type.Grass,"hiddenpower","Hidden Power Grass","","",Range.Any1,100,60,15,0,false,false,false,false,new int[]{1});
	public static final Move hiddenpowerground = new Move(Type.Ground,"hiddenpower","Hidden Power Ground","","",Range.Any1,100,60,15,0,false,false,false,false,new int[]{1});
	public static final Move hiddenpowerice = new Move(Type.Ice,"hiddenpower","Hidden Power Ice","","",Range.Any1,100,60,15,0,false,false,false,false,new int[]{1});
	public static final Move hiddenpowerpoison = new Move(Type.Poison,"hiddenpower","Hidden Power Poison","","",Range.Any1,100,60,15,0,false,false,false,false,new int[]{1});
	public static final Move hiddenpowerpsychic = new Move(Type.Psychic,"hiddenpower","Hidden Power Psychic","","",Range.Any1,100,60,15,0,false,false,false,false,new int[]{1});
	public static final Move hiddenpowerrock = new Move(Type.Rock,"hiddenpower","Hidden Power Rock","","",Range.Any1,100,60,15,0,false,false,false,false,new int[]{1});
	public static final Move hiddenpowersteel = new Move(Type.Steel,"hiddenpower","Hidden Power Steel","","",Range.Any1,100,60,15,0,false,false,false,false,new int[]{1});
	public static final Move hiddenpowerwater = new Move(Type.Water,"hiddenpower","Hidden Power Water","","",Range.Any1,100,60,15,0,false,false,false,false,new int[]{1});
	public static final Move highjumpkick = new Move(Type.Fighting,"highjumpkick","High Jump Kick","Deals damage to one adjacent target. If this attack is not successful, the user loses half of its maximum HP, rounded down, as crash damage. Pokemon with the Ability Magic Guard are unaffected by crash damage. This move cannot be used while Gravity is in effect. Makes contact.","User is hurt by 50% of its max HP if it misses.",Range.Any1,90,130,10,0,false,false,false,false,new int[]{1});
	public static final Move holdback = new Move(Type.Normal,"holdback","Hold Back","Deals damage to one adjacent target but leaves it with at least 1HP. Makes contact.","Always leaves the target with at least 1 HP.",Range.Any1,100,40,40,0,false,false,false,false,new int[]{1});
	public static final Move honeclaws = new Move(Type.Dark,"honeclaws","Hone Claws","Raises the user's Attack and accuracy by 1 stage.","Boosts the user's Attack and accuracy by 1.",Range.Self,-1,0,15,0,false,false,false,false,new int[]{1});
	public static final Move hornattack = new Move(Type.Normal,"hornattack","Horn Attack","Deals damage to one adjacent target. Makes contact.","No additional effect.",Range.Any1,100,65,25,0,false,false,false,false,new int[]{1});
	public static final Move horndrill = new Move(Type.Normal,"horndrill","Horn Drill","Deals damage to one adjacent target equal to the target's maximum HP. Ignores accuracy and evasion modifiers. This attack's accuracy is equal to (user's level - target's level + 30)%, and fails if the target is at a higher level. Pokemon with the Ability Sturdy are immune. Makes contact.","OHKOs the target. Fails if user is a lower level.",Range.Any1,30,0,5,0,false,false,false,false,new int[]{1});
	public static final Move hornleech = new Move(Type.Grass,"hornleech","Horn Leech","Deals damage to one adjacent target. The user recovers half of the HP lost by the target, rounded up. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down. Makes contact.","User recovers 50% of the damage dealt.",Range.Any1,100,75,10,0,false,false,false,false,new int[]{1});
	public static final Move howl = new Move(Type.Normal,"howl","Howl","Raises the user's Attack by 1 stage.","Boosts the user's Attack by 1.",Range.Self,150,0,40,0,false,false,false,false,new int[]{1});
	public static final Move hurricane = new Move(Type.Flying,"hurricane","Hurricane","Deals damage to one adjacent or non-adjacent target with a 30% chance to confuse it. This move can hit a target using Bounce, Fly, or Sky Drop. If the weather is Rain Dance, this move cannot miss. If the weather is Sunny Day, this move's accuracy is 50%.","30% chance to confuse target. Can't miss in rain.",Range.Self,70,110,10,0,false,false,false,true,new int[]{1});
	public static final Move hydrocannon = new Move(Type.Water,"hydrocannon","Hydro Cannon","Deals damage to one adjacent target. If this move is successful, the user must recharge on the following turn and cannot make a move.","User cannot move next turn.",Range.Any1,90,150,5,0,false,false,false,false,new int[]{1});
	public static final Move hydropump = new Move(Type.Water,"hydropump","Hydro Pump","Deals damage to one adjacent target.","No additional effect.",Range.Any1,80,110,5,0,false,false,false,false,new int[]{1});
	public static final Move hyperbeam = new Move(Type.Normal,"hyperbeam","Hyper Beam","Deals damage to one adjacent target. If this move is successful, the user must recharge on the following turn and cannot make a move.","User cannot move next turn.",Range.Any1,90,150,5,0,false,false,false,false,new int[]{1});
	public static final Move hyperfang = new Move(Type.Normal,"hyperfang","Hyper Fang","Deals damage to one adjacent target with a 10% chance to flinch it. Makes contact.","10% chance to flinch the target.",Range.Any1,90,80,15,0,false,false,false,true,new int[]{1});
	public static final Move hyperspacehole = new Move(Type.Psychic,"hyperspacehole","Hyperspace Hole","Deals damage to one adjacent target and breaks through Protect and Detect for this turn, allowing other Pokemon to attack the target normally. Makes contact.","Breaks protection for this turn.",Range.Any1,150,80,5,0,false,false,false,false,new int[]{1});
	public static final Move hypervoice = new Move(Type.Normal,"hypervoice","Hyper Voice","Deals damage to all adjacent foes. Pokemon with the Ability Soundproof are immune.","No additional effect. Hits adjacent foes.",Range.Opponent2,100,90,10,0,false,false,false,false,new int[]{1});
	public static final Move hypnosis = new Move(Type.Psychic,"hypnosis","Hypnosis","Puts one adjacent target to sleep. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","Puts the target to sleep.",Range.Any1,60,0,20,0,false,false,false,false,new int[]{1});
	public static final Move iceball = new Move(Type.Ice,"iceball","Ice Ball","Deals damage to one adjacent target. The user is locked into this move and cannot make another move until it misses, 5 turns have passed, or the attack cannot be used. Power doubles with each successful hit of this move and doubles again if Defense Curl was used previously by the user. If this move is called by Sleep Talk, the move is used for one turn. Makes contact.","Power doubles with each hit. Repeats for 5 turns.",Range.Any1,90,30,20,0,false,false,false,false,new int[]{1});
	public static final Move icebeam = new Move(Type.Ice,"icebeam","Ice Beam","Deals damage to one adjacent target with a 10% chance to freeze it.","10% chance to freeze the target.",Range.Any1,100,90,10,0,false,false,false,true,new int[]{1});
	public static final Move iceburn = new Move(Type.Ice,"iceburn","Ice Burn","Deals damage to one adjacent target with a 30% chance to burn it. This attack charges on the first turn and strikes on the second. The user cannot make a move between turns. If the user is holding a Power Herb, the move completes in one turn.","Charges turn 1. Hits turn 2. 30% burn.",Range.Any1,90,140,5,0,false,false,false,true,new int[]{1});
	public static final Move icefang = new Move(Type.Ice,"icefang","Ice Fang","Deals damage to one adjacent target with a 10% chance to freeze it and a 10% chance to flinch it. Makes contact.","10% chance to freeze. 10% chance to flinch.",Range.Any1,95,65,15,0,false,false,false,true,new int[]{1});
	public static final Move icepunch = new Move(Type.Ice,"icepunch","Ice Punch","Deals damage to one adjacent target with a 10% chance to freeze it. Makes contact. Damage is boosted to 1.2x by the Ability Iron Fist.","10% chance to freeze the target.",Range.Any1,100,75,15,0,false,false,false,true,new int[]{1});
	public static final Move iceshard = new Move(Type.Ice,"iceshard","Ice Shard","Deals damage to one adjacent target. Priority +1.","Usually goes first.",Range.Any1,100,40,30,1,false,false,false,false,new int[]{1});
	public static final Move iciclecrash = new Move(Type.Ice,"iciclecrash","Icicle Crash","Deals damage to one adjacent target with a 30% chance to flinch it.","30% chance to flinch the target.",Range.Any1,90,85,10,0,false,false,false,true,new int[]{1});
	public static final Move iciclespear = new Move(Type.Ice,"iciclespear","Icicle Spear","Deals damage to one adjacent target and hits two to five times. Has a 1/3 chance to hit two or three times, and a 1/6 chance to hit four or five times. If one of the hits breaks the target's Substitute, it will take damage for the remaining hits. If the user has the Ability Skill Link, this move will always hit five times.","Hits 2-5 times in one turn.",Range.Any1,100,25,30,0,false,false,false,false,new int[]{2,5});
	public static final Move icywind = new Move(Type.Ice,"icywind","Icy Wind","Deals damage to all adjacent foes with a 100% chance to lower their Speed by 1 stage each.","100% chance to lower the foe(s) Speed by 1.",Range.Opponent2,95,55,15,0,false,false,false,true,new int[]{1});
	public static final Move imprison = new Move(Type.Psychic,"imprison","Imprison","The user prevents all of its foes from using any moves that the user also knows as long as the user remains active. Ignores a target's Substitute.","No foe can use any move known by the user.",Range.Self,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move incinerate = new Move(Type.Fire,"incinerate","Incinerate","Deals damage to all adjacent foes and destroys any Berry or Gem they may be holding.","Destroys the foe(s) Berry/Gem.",Range.Opponent2,100,60,15,0,false,false,false,false,new int[]{1});
	public static final Move inferno = new Move(Type.Fire,"inferno","Inferno","Deals damage to one adjacent target with a 100% chance to burn it.","100% chance to burn the target.",Range.Any1,50,100,5,0,false,false,false,true,new int[]{1});
	public static final Move infestation = new Move(Type.Bug,"infestation","Infestation","Deals damage to one adjacent target and prevents it from switching for four or five turns; seven turns if the user is holding Grip Claw. Causes damage to the target equal to 1/8 of its maximum HP (1/6 if the user is holding Binding Band), rounded down, at the end of each turn during effect. The target can still switch out if it is holding Shed Shell or uses Baton Pass, U-turn, or Volt Switch. The effect ends if either the user or the target leaves the field, or if the target uses Rapid Spin. This effect is not stackable or reset by using this or another partial-trapping move.","Traps and damages the target for 4-5 turns.",Range.Any1,100,20,20,0,false,false,false,false,new int[]{1});
	public static final Move ingrain = new Move(Type.Grass,"ingrain","Ingrain","The user has 1/16 of its maximum HP restored at the end of each turn, but it is prevented from switching out and other Pokemon cannot force the user to switch out. The user can still switch out if it uses Baton Pass, U-turn, or Volt Switch. If the user leaves the field using Baton Pass, the replacement will remain trapped and still receive the healing effect. During the effect, the user can be hit normally by Ground-type attacks and be affected by Spikes and Toxic Spikes, even if the user is a Flying-type or has the Ability Levitate.","User recovers 1/16 max HP per turn. Traps user.",Range.Self,150,0,20,0,false,false,false,false,new int[]{1});
	public static final Move iondeluge = new Move(Type.Electric,"iondeluge","Ion Deluge","Changes Normal-type moves to Electric-type moves. Priority +1.","Changes Normal moves to Electric type. Priority +1.",Range.All,150,0,25,1,false,false,false,false,new int[]{1});
	public static final Move irondefense = new Move(Type.Steel,"irondefense","Iron Defense","Raises the user's Defense by 2 stages.","Boosts the user's Defense by 2.",Range.Self,150,0,15,0,false,false,false,false,new int[]{1});
	public static final Move ironhead = new Move(Type.Steel,"ironhead","Iron Head","Deals damage to one adjacent target with a 30% chance to flinch it. Makes contact.","30% chance to flinch the target.",Range.Any1,100,80,15,0,false,false,false,true,new int[]{1});
	public static final Move irontail = new Move(Type.Steel,"irontail","Iron Tail","Deals damage to one adjacent target with a 30% chance to lower its Defense by 1 stage. Makes contact.","30% chance to lower the target's Defense by 1.",Range.Any1,75,100,15,0,false,false,false,true,new int[]{1});
	public static final Move judgment = new Move(Type.Normal,"judgment","Judgment","Deals damage to one adjacent target. This move's type depends on the user's held Plate.","Type varies based on the held Plate.",Range.Any1,100,100,10,0,false,false,false,false,new int[]{1});
	public static final Move jumpkick = new Move(Type.Fighting,"jumpkick","Jump Kick","Deals damage to one adjacent target. If this attack is not successful, the user loses half of its maximum HP, rounded down, as crash damage. Pokemon with the Ability Magic Guard are unaffected by crash damage. This move cannot be used while Gravity is in effect. Makes contact.","User is hurt by 50% of its max HP if it misses.",Range.Any1,95,100,10,0,false,false,false,false,new int[]{1});
	public static final Move karatechop = new Move(Type.Fighting,"karatechop","Karate Chop","Deals damage to one adjacent target with a higher chance for a critical hit. Makes contact.","High critical hit ratio.",Range.Any1,100,50,25,0,false,false,false,false,new int[]{1});
	public static final Move kinesis = new Move(Type.Psychic,"kinesis","Kinesis","Lowers one adjacent target's accuracy by 1 stage. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","Lowers the target's accuracy by 1.",Range.Any1,80,0,15,0,false,false,false,false,new int[]{1});
	public static final Move kingsshield = new Move(Type.Steel,"kingsshield","King's Shield","Protects the user from attacks. Contactors get their Attack lowered by 2 stages. Priority +4","Protects user from attacks. Contactors get -Atk.",Range.Self,150,0,10,4,false,false,false,false,new int[]{1});
	public static final Move knockoff = new Move(Type.Dark,"knockoff","Knock Off","Deals damage to one adjacent target and causes it to drop its held item. Does 50% more damage if the target is holding an item. This move cannot force Pokemon with the Ability Sticky Hold to lose their held item, or force a Giratina, an Arceus, a Genesect, or a pokémon able to Mega-evolve to lose their Griseous Orb, Plate, Drive, or Mega Stone respectively. Items lost to this move cannot be regained with Recycle. Makes contact.","1.5x damage if foe holds an item. Removes item.",Range.Any1,100,65,25,0,false,false,false,false,new int[]{1});
	public static final Move landswrath = new Move(Type.Ground,"landswrath","Land's Wrath","Deals damage to all adjacent foes.","No additional effect.",Range.Opponent2,100,90,10,0,false,false,false,false,new int[]{1});
	public static final Move lastresort = new Move(Type.Normal,"lastresort","Last Resort","Deals damage to one adjacent target. Fails unless the user knows this move and at least one other move, and has used all the other moves it knows at least once each since it became active or Transformed. Makes contact.","Fails unless each known move has been used.",Range.Any1,100,140,5,0,false,false,false,false,new int[]{1});
	public static final Move lavaplume = new Move(Type.Fire,"lavaplume","Lava Plume","Deals damage to all adjacent Pokemon with a 30% chance to burn each.","30% chance to burn adjacent Pokemon.",Range.AllAdjacent,100,80,15,0,false,false,false,true,new int[]{1});
	public static final Move leafblade = new Move(Type.Grass,"leafblade","Leaf Blade","Deals damage to one adjacent target with a higher chance for a critical hit. Makes contact.","High critical hit ratio.",Range.Any1,100,90,15,0,false,false,false,false,new int[]{1});
	public static final Move leafstorm = new Move(Type.Grass,"leafstorm","Leaf Storm","Deals damage to one adjacent target and lowers the user's Special Attack by 2 stages.","Lowers the user's Sp. Atk by 2.",Range.Any1,90,130,5,0,false,false,false,false,new int[]{1});
	public static final Move leaftornado = new Move(Type.Grass,"leaftornado","Leaf Tornado","Deals damage to one adjacent target with a 50% chance to lower its accuracy by 1 stage.","50% chance to lower the target's accuracy by 1.",Range.Any1,90,65,10,0,false,false,false,true,new int[]{1});
	public static final Move leechlife = new Move(Type.Bug,"leechlife","Leech Life","Deals damage to one adjacent target. The user recovers half of the HP lost by the target, rounded up. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down. Makes contact.","User recovers 50% of the damage dealt.",Range.Any1,100,20,15,0,false,false,false,false,new int[]{1});
	public static final Move leechseed = new Move(Type.Grass,"leechseed","Leech Seed","The Pokemon at the user's position steals 1/8 of one adjacent target's max HP, rounded down, at the end of each turn. If Big Root is held by the recipient, the HP recovered is 1.3x normal, rounded half down. If the target uses Baton Pass, the replacement will continue being leeched. If the target switches out or uses Rapid Spin, the effect ends. Grass-types are unaffected. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","1/8 of target's HP is restored to user every turn.",Range.Any1,90,0,10,0,false,false,false,false,new int[]{1});
	public static final Move leer = new Move(Type.Normal,"leer","Leer","Lowers all adjacent foes' Defense by 1 stage. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","Lowers the foe(s) Defense by 1.",Range.Opponent2,100,0,30,0,false,false,false,false,new int[]{1});
	public static final Move lick = new Move(Type.Ghost,"lick","Lick","Deals damage to one adjacent target with a 30% chance to paralyze it. Makes contact.","30% chance to paralyze the target.",Range.Any1,100,30,30,0,false,false,false,true,new int[]{1});
	public static final Move lightofruin = new Move(Type.Fairy,"lightofruin","Light of Ruin","Deals damage to one adjacent target. If the target lost HP, the user takes recoil damage equal to 1/2 that HP, rounded half up, but not less than 1 HP.","Has 1/2 recoil.",Range.Any1,90,140,5,0,false,false,false,false,new int[]{1});
	public static final Move lightscreen = new Move(Type.Psychic,"lightscreen","Light Screen","For 5 turns, the user and its party members take 0.5x damage from special attacks, or 0.66x damage if in a double or triple battle. Critical hits ignore this protection. It is removed from the user's side if the user or an ally is successfully hit by Brick Break or Defog. Lasts for 8 turns if the user is holding Light Clay.","For 5 turns, special damage to allies is halved.",Range.AllySide,150,0,30,0,false,false,false,false,new int[]{1});
	public static final Move lockon = new Move(Type.Normal,"lockon","Lock-On","On the following turn, one adjacent target cannot avoid the user's moves, even if the target is in the middle of a two-turn move. Fails if the user tries to use this move again during effect.","User's next move will not miss the target.",Range.Any1,150,0,5,0,false,false,false,false,new int[]{1});
	public static final Move lovelykiss = new Move(Type.Normal,"lovelykiss","Lovely Kiss","Puts one adjacent target to sleep. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","Puts the target to sleep.",Range.Any1,75,0,10,0,false,false,false,false,new int[]{1});
	public static final Move lowkick = new Move(Type.Fighting,"lowkick","Low Kick","Deals damage to one adjacent target based on that target's weight. Power is 20 if less than 10kg, 40 if less than 25kg, 60 if less than 50kg, 80 if less than 100kg, 100 if less than 200kg, and 120 if greater than or equal to 200kg. Makes contact.","More power the heavier the target.",Range.Any1,100,0,20,0,false,false,false,false,new int[]{1});
	public static final Move lowsweep = new Move(Type.Fighting,"lowsweep","Low Sweep","Deals damage to one adjacent target with a 100% chance to lower its Speed by 1 stage. Makes contact.","100% chance to lower the target's Speed by 1.",Range.Any1,100,65,20,0,false,false,false,true,new int[]{1});
	public static final Move luckychant = new Move(Type.Normal,"luckychant","Lucky Chant","For 5 turns, the user and its party members cannot be struck by a critical hit. Fails if this move is already in effect for the user's side.","For 5 turns, shields user's party from critical hits.",Range.AllySide,150,0,30,0,false,false,false,false,new int[]{1});
	public static final Move lunardance = new Move(Type.Psychic,"lunardance","Lunar Dance","The user faints and the Pokemon brought out to replace it has its HP and PP fully restored along with having any major status condition cured. Fails if the user is the last unfainted Pokemon in its party.","User faints. Replacement is fully healed, with PP.",Range.Self,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move lusterpurge = new Move(Type.Psychic,"lusterpurge","Luster Purge","Deals damage to one adjacent target with a 50% chance to lower its Special Defense by 1 stage.","50% chance to lower the target's Sp. Def by 1.",Range.Any1,100,70,5,0,false,false,false,true,new int[]{1});
	public static final Move machpunch = new Move(Type.Fighting,"machpunch","Mach Punch","Deals damage to one adjacent target. Makes contact. Damage is boosted to 1.2x by the Ability Iron Fist. Priority +1.","Usually goes first.",Range.Any1,100,40,30,1,false,false,false,false,new int[]{1});
	public static final Move magiccoat = new Move(Type.Psychic,"magiccoat","Magic Coat","Until the end of the turn, the user is unaffected by certain non-damaging moves directed at it and will instead use such moves against the original user. Moves reflected in this way are unable to be reflected again by this or the Ability Magic Bounce's effect. Spikes, Stealth Rock, and Toxic Spikes can only be reflected once per side, by the leftmost Pokemon under this or the Ability Magic Bounce's effect. If the user has the Ability Soundproof, this move's effect happens before a sound-based move can be nullified. The Abilities Lightningrod and Storm Drain redirect their respective moves before this move takes effect. Priority +4.","Bounces back certain non-damaging moves.",Range.Self,150,0,15,4,false,false,false,false,new int[]{1});
	public static final Move magicroom = new Move(Type.Psychic,"magicroom","Magic Room","For 5 turns, the held items of all active Pokemon have no effect. During the effect, Fling and Natural Gift are prevented from being used by all active Pokemon. If this move is used during the effect, the effect ends.","For 5 turns, all held items have no effect.",Range.All,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move magicalleaf = new Move(Type.Grass,"magicalleaf","Magical Leaf","Deals damage to one adjacent target and does not check accuracy.","This move does not check accuracy.",Range.Any1,150,60,20,0,false,false,false,false,new int[]{1});
	public static final Move magmastorm = new Move(Type.Fire,"magmastorm","Magma Storm","Deals damage to one adjacent target and prevents it from switching for four or five turns; seven turns if the user is holding Grip Claw. Causes damage to the target equal to 1/8 of its maximum HP (1/6 if the user is holding Binding Band), rounded down, at the end of each turn during effect. The target can still switch out if it is holding Shed Shell or uses Baton Pass, U-turn, or Volt Switch. The effect ends if either the user or the target leaves the field, or if the target uses Rapid Spin. This effect is not stackable or reset by using this or another partial-trapping move.","Traps and damages the target for 4-5 turns.",Range.Any1,75,100,5,0,false,false,false,false,new int[]{1});
	public static final Move magnetbomb = new Move(Type.Steel,"magnetbomb","Magnet Bomb","Deals damage to one adjacent target and does not check accuracy.","This move does not check accuracy.",Range.Any1,150,60,20,0,false,false,false,false,new int[]{1});
	public static final Move magneticflux = new Move(Type.Electric,"magneticflux","Magnetic Flux","Raises the Defense and Sp. Def stats of ally PokÃ©mon with the Plus or Minus Ability.","Raises defenses of ally Pokemon with Plus/Minus.",Range.AllySide,150,0,20,0,false,false,false,false,new int[]{1});
	public static final Move magnetrise = new Move(Type.Electric,"magnetrise","Magnet Rise","For 5 turns, the user is immune to Ground-type attacks and the effects of Spikes, Toxic Spikes, and the Ability Arena Trap as long as it remains active. If the user uses Baton Pass, the replacement will gain the effect. Ingrain, Smack Down, and Iron Ball override this move if the user is under any of their effects. Fails if the user is already under this effect or the effects of Ingrain or Smack Down. This move cannot be used while Gravity is in effect.","For 5 turns, the user is immune to Ground moves.",Range.Self,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move magnitude = new Move(Type.Ground,"magnitude","Magnitude","Deals damage to all adjacent Pokemon. The power of this move varies; 5% chances for 10 and 150 power, 10% chances for 30 and 110 power, 20% chances for 50 and 90 power, and 30% chance for 70 power. Power doubles against Pokemon using Dig.","Hits adjacent Pokemon. Power varies; 2x on Dig.",Range.AllAdjacent,100,0,30,0,false,false,false,false,new int[]{1});
	public static final Move matblock = new Move(Type.Fighting,"matblock","Mat Block","The user protects itself and its allies from damaging moves. Only works first turn out.","Protects from damaging moves. First turn out only.",Range.AllySide,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move mefirst = new Move(Type.Normal,"mefirst","Me First","The user selects one adjacent foe and uses the move it chose for use this turn against it, if possible, with 1.5x the power. The move must be a damaging move other than Chatter, Counter, Covet, Focus Punch, Me First, Metal Burst, Mirror Coat, Thief, or Struggle. Fails if the foe moves before the user. Ignores the foe's Substitute for the purpose of copying the move.","Copies a foe at 1.5x power. User must be faster.",Range.Adjacent1,150,0,20,0,false,false,false,false,new int[]{1});
	public static final Move meanlook = new Move(Type.Normal,"meanlook","Mean Look","Prevents one adjacent target from switching out. The target can still switch out if it is holding Shed Shell or uses Baton Pass, U-turn, or Volt Switch. If the target leaves the field using Baton Pass, the replacement will remain trapped. The effect ends if the user leaves the field. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","The target cannot switch out.",Range.Any1,150,0,5,0,false,false,false,false,new int[]{1});
	public static final Move meditate = new Move(Type.Psychic,"meditate","Meditate","Raises the user's Attack by 1 stage.","Boosts the user's Attack by 1.",Range.Self,150,0,40,0,false,false,false,false,new int[]{1});
	public static final Move megadrain = new Move(Type.Grass,"megadrain","Mega Drain","Deals damage to one adjacent target. The user recovers half of the HP lost by the target, rounded up. If Big Root is held by the user, the HP recovered is 1.3x, rounded half down.","User recovers 50% of the damage dealt.",Range.Any1,100,40,15,0,false,false,false,false,new int[]{1});
	public static final Move megakick = new Move(Type.Normal,"megakick","Mega Kick","Deals damage to one adjacent target. Makes contact.","No additional effect.",Range.Any1,75,120,5,0,false,false,false,false,new int[]{1});
	public static final Move megapunch = new Move(Type.Normal,"megapunch","Mega Punch","Deals damage to one adjacent target. Makes contact. Damage is boosted to 1.2x by the Ability Iron Fist.","No additional effect.",Range.Any1,85,80,20,0,false,false,false,false,new int[]{1});
	public static final Move megahorn = new Move(Type.Bug,"megahorn","Megahorn","Deals damage to one adjacent target. Makes contact.","No additional effect.",Range.Any1,85,120,10,0,false,false,false,false,new int[]{1});
	public static final Move memento = new Move(Type.Dark,"memento","Memento","Lowers one adjacent target's Attack and Special Attack by 2 stages. The user faints unless this move misses or there is no target. Fails entirely if the target has a Substitute, but does not fail if the target's stats cannot be changed.","Lowers target's Attack, Sp. Atk by 2. User faints.",Range.Any1,100,0,10,0,false,false,false,false,new int[]{1});
	public static final Move metalburst = new Move(Type.Steel,"metalburst","Metal Burst","Deals damage to the last foe to hit the user with an attack this turn. The damage is equal to 1.5x the HP lost by the user from that attack. If that foe's position is no longer in use, damage is done to a random foe in range. Only the last hit of a multi-hit attack is counted. Fails if the user moves first or if the user was not hit by a foe's attack this turn.","If hit by an attack, returns 1.5x damage.",Range.Scripted,100,0,10,0,false,false,false,false,new int[]{1});
	public static final Move metalclaw = new Move(Type.Steel,"metalclaw","Metal Claw","Deals damage to one adjacent target with a 10% chance to raise the user's Attack by 1 stage. Makes contact.","10% chance to boost the user's Attack by 1.",Range.Any1,95,50,35,0,false,false,false,true,new int[]{1});
	public static final Move metalsound = new Move(Type.Steel,"metalsound","Metal Sound","Lowers one adjacent target's Special Defense by 2 stages. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves. Pokemon with the Ability Soundproof are immune.","Lowers the target's Sp. Def by 2.",Range.Any1,85,0,40,0,false,false,false,false,new int[]{1});
	public static final Move meteormash = new Move(Type.Steel,"meteormash","Meteor Mash","Deals damage to one adjacent target with a 20% chance to raise the user's Attack by 1 stage. Makes contact. Damage is boosted to 1.2x by the Ability Iron Fist.","20% chance to boost the user's Attack by 1.",Range.Any1,90,90,10,0,false,false,false,true,new int[]{1});
	public static final Move metronome = new Move(Type.Normal,"metronome","Metronome","A random move is selected for use, other than After You, Assist, Bestow, Chatter, Copycat, Counter, Covet, Destiny Bond, Detect, Endure, Feint, Focus Punch, Follow Me, Freeze Shock, Helping Hand, Ice Burn, Me First, Metronome, Mimic, Mirror Coat, Mirror Move, Nature Power, Protect, Quash, Quick Guard, Rage Powder, Relic Song, Secret Sword, Sketch, Sleep Talk, Snarl, Snatch, Snore, Struggle, Switcheroo, Techno Blast, Thief, Transform, Trick, V-create, or Wide Guard.","Picks a random move.",Range.Self,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move milkdrink = new Move(Type.Normal,"milkdrink","Milk Drink","The user restores 1/2 of its maximum HP, rounded half up. (Field: Can be used to heal an ally by draining 1/5 of the user's maximum HP, rounded down, and restoring that amount to the selected ally. Fails if the user's HP would be reduced to less than 1.)","Heals the user by 50% of its max HP.",Range.Self,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move mimic = new Move(Type.Normal,"mimic","Mimic","This move is replaced by the last move used by one adjacent target. The copied move has the maximum PP for that move. Fails if the target has not made a move, if the user has Transformed, or if the move is Chatter, Mimic, Sketch, Struggle, or Transform. Ignores a target's Substitute.","The last move the target used replaces this one.",Range.Any1,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move mindreader = new Move(Type.Normal,"mindreader","Mind Reader","On the following turn, one adjacent target cannot avoid the user's moves, even if the target is in the middle of a two-turn move. Fails if the user tries to use this move again during effect.","User's next move will not miss the target.",Range.Any1,150,0,5,0,false,false,false,false,new int[]{1});
	public static final Move minimize = new Move(Type.Normal,"minimize","Minimize","Raises the user's evasion by 2 stages. After using this move, Stomp, Steamroller, Body Slam, Flying Press, Dragon Rush and Phantom Force will have their power doubled and won't check accuracy if used against the user while it is active.","Boosts the user's evasion by 2.",Range.Self,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move miracleeye = new Move(Type.Psychic,"miracleeye","Miracle Eye","Causes one adjacent target to have its positive evasion stat stage set to 0 while it is active. Psychic-type attacks can hit the target if it is a Dark-type. The effect ends when the target is no longer active. Fails if the target is already affected. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves. Ignores a target's Substitute.","Blocks evasion mods. Psychic hits Dark.",Range.Any1,150,0,40,0,false,false,false,false,new int[]{1});
	public static final Move mirrorcoat = new Move(Type.Psychic,"mirrorcoat","Mirror Coat","Deals damage to the last foe to hit the user with a special attack this turn. The damage is equal to twice the HP lost by the user from that attack. If that foe's position is no longer in use, damage is done to a random foe in range. Only the last hit of a multi-hit attack is counted. Fails if the user was not hit by a foe's special attack this turn. Priority -5.","If hit by special attack, returns double damage.",Range.Scripted,100,0,20,-5,false,false,false,false,new int[]{1});
	public static final Move mirrormove = new Move(Type.Flying,"mirrormove","Mirror Move","The user uses the last move used by a selected adjacent target. The copied move is used against that target, if possible. Fails if the target has not yet used a move, or the last move used was Acupressure, After You, Aromatherapy, Chatter, Conversion 2, Counter, Curse, Doom Desire, Feint, Final Gambit, Focus Punch, Future Sight, Gravity, Guard Split, Hail, Haze, Heal Bell, Heal Pulse, Helping Hand, Light Screen, Lucky Chant, Me First, Mimic, Mirror Coat, Mist, Mud Sport, Nature Power, Perish Song, Power Split, Psych Up, Quick Guard, Rain Dance, Reflect, Reflect Type, Role Play, Safeguard, Sandstorm, Sketch, Spikes, Spit Up, Stealth Rock, Struggle, Sunny Day, Tailwind, Toxic Spikes, Transform, Water Sport, Wide Guard, or any move that is self-targeting.","User uses the target's last used move against it.",Range.Any1,150,0,20,0,false,false,false,false,new int[]{1});
	public static final Move mirrorshot = new Move(Type.Steel,"mirrorshot","Mirror Shot","Deals damage to one adjacent target with a 30% chance to lower its accuracy by 1 stage.","30% chance to lower the target's accuracy by 1.",Range.Any1,85,65,10,0,false,false,false,true,new int[]{1});
	public static final Move mist = new Move(Type.Ice,"mist","Mist","For 5 turns, the user and its party members are protected from having their stats lowered by other Pokemon.","For 5 turns, protects user's party from stat drops.",Range.AllySide,150,0,30,0,false,false,false,false,new int[]{1});
	public static final Move mistball = new Move(Type.Psychic,"mistball","Mist Ball","Deals damage to one adjacent target with a 50% chance to lower its Special Attack by 1 stage.","50% chance to lower the target's Sp. Atk by 1.",Range.Any1,100,70,5,0,false,false,false,true,new int[]{1});
	public static final Move mistyterrain = new Move(Type.Fairy,"mistyterrain","Misty Terrain","For five turns, Grounded Pokemon cannot have major status problem inflicted on them by other Pokemon. Dragon-type moves used against them are weakened by 50%.","Prevents status and weakens Dragon if grounded.",Range.All,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move moonblast = new Move(Type.Fairy,"moonblast","Moonblast","Deals damage to one adjacent target with a 30% chance to lower its Special Attack by 1 stage.","30% chance to lower the target's Sp. Atk by 1.",Range.Any1,100,95,15,0,false,false,false,true,new int[]{1});
	public static final Move moonlight = new Move(Type.Fairy,"moonlight","Moonlight","The user restores 1/2 of its maximum HP if no weather conditions are in effect, 2/3 of its maximum HP if the weather is Sunny Day, and 1/4 of its maximum HP if the weather is Hail, Rain Dance, or Sandstorm, all rounded half down.","Heals the user by a weather-dependent amount.",Range.Self,150,0,5,0,false,false,false,false,new int[]{1});
	public static final Move morningsun = new Move(Type.Normal,"morningsun","Morning Sun","The user restores 1/2 of its maximum HP if no weather conditions are in effect, 2/3 of its maximum HP if the weather is Sunny Day, and 1/4 of its maximum HP if the weather is Hail, Rain Dance, or Sandstorm, all rounded half down.","Heals the user by a weather-dependent amount.",Range.Self,150,0,5,0,false,false,false,false,new int[]{1});
	public static final Move mudslap = new Move(Type.Ground,"mudslap","Mud-Slap","Deals damage to one adjacent target with a 100% chance to lower its accuracy by 1 stage.","100% chance to lower the target's accuracy by 1.",Range.Any1,100,20,10,0,false,false,false,true,new int[]{1});
	public static final Move mudbomb = new Move(Type.Ground,"mudbomb","Mud Bomb","Deals damage to one adjacent target with a 30% chance to lower its accuracy by 1 stage.","30% chance to lower the target's accuracy by 1.",Range.Any1,85,65,10,0,false,false,false,true,new int[]{1});
	public static final Move mudshot = new Move(Type.Ground,"mudshot","Mud Shot","Deals damage to one adjacent target with a 100% chance to lower its Speed by 1 stage.","100% chance to lower the target's Speed by 1.",Range.Any1,95,55,15,0,false,false,false,true,new int[]{1});
	public static final Move mudsport = new Move(Type.Ground,"mudsport","Mud Sport","For 5 turns, all Electric-type attacks used by any active Pokemon have their power reduced to 0.33x. Fails if this move is already in effect; not stackable.","For 5 turns, Electric-type attacks have 1/3 power.",Range.All,150,0,15,0,false,false,false,false,new int[]{1});
	public static final Move muddywater = new Move(Type.Water,"muddywater","Muddy Water","Deals damage to all adjacent foes with a 30% chance to lower their accuracy by 1 stage each.","30% chance to lower the foe(s) accuracy by 1.",Range.Opponent2,85,90,10,0,false,false,false,true,new int[]{1});
	public static final Move mysticalfire = new Move(Type.Fire,"mysticalfire","Mystical Fire","Deals damage to one adjacent target and lowers its Special Attack by 1 stage.","Lowers the target's Special Attack by 1.",Range.Any1,100,65,10,0,false,false,false,true,new int[]{1});
	public static final Move nastyplot = new Move(Type.Dark,"nastyplot","Nasty Plot","Raises the user's Special Attack by 2 stages.","Boosts the user's Sp. Atk by 2.",Range.Self,150,0,20,0,false,false,false,false,new int[]{1});
	public static final Move naturalgift = new Move(Type.Normal,"naturalgift","Natural Gift","Deals damage to one adjacent target if the user's held item is a Berry. The type and power of this move depend on the kind of Berry held, and the Berry is lost. Fails if the user is not holding a Berry, if the user has the Ability Klutz, or if Embargo or Magic Room is in effect for the user.","Power and type depends on the user's Berry.",Range.Any1,100,0,15,0,false,false,false,false,new int[]{1});
	public static final Move naturepower = new Move(Type.Normal,"naturepower","Nature Power","This move calls another move for use depending on the battle terrain: Thunderbolt in Electric Terrain, Energy Ball in Grassy Terrain, Moonblast in Misty Terrain, and Tri Attack in plain terrain.","Attack depends on terrain (default Tri Attack).",Range.Self,150,0,20,0,false,false,false,false,new int[]{1});
	public static final Move needlearm = new Move(Type.Grass,"needlearm","Needle Arm","Deals damage to one adjacent target with a 30% chance to flinch it. Makes contact.","30% chance to flinch the target.",Range.Any1,100,60,15,0,false,false,false,true,new int[]{1});
	public static final Move nightdaze = new Move(Type.Dark,"nightdaze","Night Daze","Deals damage to one adjacent target with a 40% chance to lower its accuracy by 1 stage.","40% chance to lower the target's accuracy by 1.",Range.Any1,95,85,10,0,false,false,false,true,new int[]{1});
	public static final Move nightshade = new Move(Type.Ghost,"nightshade","Night Shade","Deals damage to one adjacent target equal to the user's level.","Does damage equal to the user's level.",Range.Any1,100,0,15,0,false,false,false,false,new int[]{1});
	public static final Move nightslash = new Move(Type.Dark,"nightslash","Night Slash","Deals damage to one adjacent target with a higher chance for a critical hit. Makes contact.","High critical hit ratio.",Range.Any1,100,70,15,0,false,false,false,false,new int[]{1});
	public static final Move nightmare = new Move(Type.Ghost,"nightmare","Nightmare","Causes one adjacent target to lose 1/4 of its maximum HP, rounded down, at the end of each turn as long as it is asleep. This move does not affect the target unless it is asleep. The effect ends when the target wakes up.","A sleeping target is hurt by 1/4 max HP per turn.",Range.Any1,100,0,15,0,false,false,false,false,new int[]{1});
	public static final Move nobleroar = new Move(Type.Normal,"nobleroar","Noble Roar","Lowers the target's Attack and Special Attack by 1 stage. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","Lowers target's Atk and SpAtk by 1.",Range.Any1,100,0,30,0,false,false,false,false,new int[]{1});
	public static final Move nuzzle = new Move(Type.Electric,"nuzzle","Nuzzle","Deals damage and paralyzes the target.","Deals damage and paralyzes the target.",Range.Any1,100,20,20,0,false,false,false,true,new int[]{1});
	public static final Move oblivionwing = new Move(Type.Flying,"oblivionwing","Oblivion Wing","Deals damage to one adjacent target. The user recovers 75% of the HP lost by the target, rounded up.","User recovers 75% of the damage dealt.",Range.Any1,100,80,10,0,false,false,false,false,new int[]{1});
	public static final Move octazooka = new Move(Type.Water,"octazooka","Octazooka","Deals damage to one adjacent target with a 50% chance to lower its accuracy by 1 stage.","50% chance to lower the target's accuracy by 1.",Range.Any1,85,65,10,0,false,false,false,true,new int[]{1});
	public static final Move odorsleuth = new Move(Type.Normal,"odorsleuth","Odor Sleuth","Causes one adjacent target to have its positive evasion stat stage set to 0 while it is active. Normal and Fighting-type attacks can hit the target if it is a Ghost-type. The effect ends when the target is no longer active. Fails if the target is already affected. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves. Ignores a target's Substitute.","Blocks evasion mods. Fighting, Normal hit Ghost.",Range.Any1,150,0,40,0,false,false,false,false,new int[]{1});
	public static final Move ominouswind = new Move(Type.Ghost,"ominouswind","Ominous Wind","Deals damage to one adjacent target with a 10% chance to raise the user's Attack, Defense, Speed, Special Attack, and Special Defense by 1 stage.","10% chance to boost all stats by 1 (not acc/eva).",Range.Any1,100,60,5,0,false,false,false,true,new int[]{1});
	public static final Move outrage = new Move(Type.Dragon,"outrage","Outrage","Deals damage to one adjacent foe at random. The user spends two or three turns locked into this move and becomes confused after the last turn of the effect if it is not already. If the user is prevented from moving or the attack is not successful against the target on the first turn of the effect or the second turn of a three-turn effect, the effect ends without causing confusion. If this move is called by Sleep Talk, the move is used for one turn and does not confuse the user. Makes contact.","Lasts 2-3 turns. Confuses the user afterwards.",Range.Random,100,120,10,0,false,false,false,false,new int[]{1});
	public static final Move overheat = new Move(Type.Fire,"overheat","Overheat","Deals damage to one adjacent target and lowers the user's Special Attack by 2 stages.","Lowers the user's Sp. Atk by 2.",Range.Any1,90,130,5,0,false,false,false,false,new int[]{1});
	public static final Move painsplit = new Move(Type.Normal,"painsplit","Pain Split","The user and one adjacent target's HP become the average of their current HP, rounded down, but not more than the maximum HP of either one.","Shares HP of user and target equally.",Range.Any1,150,0,20,0,false,false,false,false,new int[]{1});
	public static final Move paraboliccharge = new Move(Type.Electric,"paraboliccharge","Parabolic Charge","Deals damage to all adjacent targets. The user recovers half of the HP lost by the target, rounded up.","User recovers 50% of the damage dealt.",Range.AllAdjacent,100,50,20,0,false,false,false,false,new int[]{1});
	public static final Move partingshot = new Move(Type.Dark,"partingshot","Parting Shot","Lowers all adjacent foes' Attack and Special Attack by 1 stage, then the user switches out.","Foe's Atk/SpA -1, then switch out.",Range.Any1,100,0,20,0,false,false,false,false,new int[]{1});
	public static final Move payday = new Move(Type.Normal,"payday","Pay Day","Deals damage to one adjacent target. (In-game: Each time this move is successfully used in battle, an amount of money equal to five times the user's level is added to the total the player receives upon winning the battle.)","Scatters coins.",Range.Any1,100,40,20,0,false,false,false,false,new int[]{1});
	public static final Move payback = new Move(Type.Dark,"payback","Payback","Deals damage to one adjacent target. Power doubles if the target moves before the user; power is not doubled if the target switches out. Makes contact.","Power doubles if the user moves after the target.",Range.Any1,100,50,10,0,false,false,false,false,new int[]{1});
	public static final Move peck = new Move(Type.Flying,"peck","Peck","Deals damage to one adjacent or non-adjacent target. Makes contact.","No additional effect.",Range.Any1,100,35,35,0,false,false,false,false,new int[]{1});
	public static final Move perishsong = new Move(Type.Normal,"perishsong","Perish Song","Causes the user and all adjacent and non-adjacent Pokemon to receive a perish count of 4 if it doesn't already have a perish count. At the end of each turn including the turn used, the perish count of all active Pokemon lowers by 1 and Pokemon faint if the number reaches 0. The perish count is removed from Pokemon who switch out. If a Pokemon uses Baton Pass while it has a perish count, the replacement will gain the perish count and continue to count down. Pokemon with the Ability Soundproof are immune. Ignores a target's Substitute.","All active Pokemon will faint in 3 turns.",Range.All,150,0,5,0,false,false,false,false,new int[]{1});
	public static final Move petalblizzard = new Move(Type.Grass,"petalblizzard","Petal Blizzard","Hits all adjacent Pokemon.","Hits all adjacent Pokemon.",Range.AllAdjacent,100,90,15,0,false,false,false,false,new int[]{1});
	public static final Move petaldance = new Move(Type.Grass,"petaldance","Petal Dance","Deals damage to one adjacent foe at random. The user spends two or three turns locked into this move and becomes confused after the last turn of the effect if it is not already. If the user is prevented from moving or the attack is not successful against the target on the first turn of the effect or the second turn of a three-turn effect, the effect ends without causing confusion. If this move is called by Sleep Talk, the move is used for one turn and does not confuse the user. Makes contact.","Lasts 2-3 turns. Confuses the user afterwards.",Range.Random,100,120,10,0,false,false,false,false,new int[]{1});
	public static final Move phantomforce = new Move(Type.Ghost,"phantomforce","Phantom Force","Deals damage to one adjacent target and breaks through Protect and Detect for this turn, allowing other Pokemon to attack the target normally. This attack charges on the first turn and strikes on the second. On the first turn, the user avoids all attacks. The user cannot make a move between turns. If the user is holding a Power Herb, the move completes in one turn. Makes contact.","Disappears turn 1. Hits turn 2. Breaks protection.",Range.Any1,100,90,10,0,false,false,false,false,new int[]{1});
	public static final Move pinmissile = new Move(Type.Bug,"pinmissile","Pin Missile","Deals damage to one adjacent target and hits two to five times. Has a 1/3 chance to hit two or three times, and a 1/6 chance to hit four or five times. If one of the hits breaks the target's Substitute, it will take damage for the remaining hits. If the user has the Ability Skill Link, this move will always hit five times.","Hits 2-5 times in one turn.",Range.Any1,95,25,20,0,false,false,false,false,new int[]{2,5});
	public static final Move playnice = new Move(Type.Normal,"playnice","Play Nice","Lowers the target's Attack by 1 stage. Ignores Protect.","Lowers target's Attack by 1. Ignores Protect.",Range.Any1,150,0,20,0,false,false,false,false,new int[]{1});
	public static final Move playrough = new Move(Type.Fairy,"playrough","Play Rough","May lower the target's Attack stat by 1.","May lower the target's Attack by 1.",Range.Any1,90,90,10,0,false,false,false,true,new int[]{1});
	public static final Move pluck = new Move(Type.Flying,"pluck","Pluck","Deals damage to one adjacent or non-adjacent target. If this move is successful and the user has not fainted, it steals the target's held Berry if it is holding one and uses it immediately. Makes contact.","User steals and eats the target's Berry.",Range.Any1,100,60,20,0,false,false,false,false,new int[]{1});
	public static final Move poisonfang = new Move(Type.Poison,"poisonfang","Poison Fang","Deals damage to one adjacent target with a 30% chance to badly poison it. Makes contact.","30% chance to badly poison the target.",Range.Any1,100,50,15,0,false,false,false,true,new int[]{1});
	public static final Move poisongas = new Move(Type.Poison,"poisongas","Poison Gas","Poisons all adjacent foes. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","Poisons the foe(s).",Range.Opponent2,90,0,40,0,false,false,false,false,new int[]{1});
	public static final Move poisonjab = new Move(Type.Poison,"poisonjab","Poison Jab","Deals damage to one adjacent target with a 30% chance to poison it. Makes contact.","30% chance to poison the target.",Range.Any1,100,80,20,0,false,false,false,true,new int[]{1});
	public static final Move poisonpowder = new Move(Type.Poison,"poisonpowder","Poison Powder","Poisons one adjacent target. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","Poisons the target.",Range.Any1,75,0,35,0,false,false,false,false,new int[]{1});
	public static final Move poisonsting = new Move(Type.Poison,"poisonsting","Poison Sting","Deals damage to one adjacent target with a 30% chance to poison it.","30% chance to poison the target.",Range.Any1,100,15,35,0,false,false,false,true,new int[]{1});
	public static final Move poisontail = new Move(Type.Poison,"poisontail","Poison Tail","Deals damage to one adjacent target with a 10% chance to poison it and a higher chance for a critical hit. Makes contact.","High critical hit ratio. 10% chance to poison.",Range.Any1,100,50,25,0,false,false,false,true,new int[]{1});
	public static final Move pound = new Move(Type.Normal,"pound","Pound","Deals damage to one adjacent target. Makes contact.","No additional effect.",Range.Any1,100,40,35,0,false,false,false,false,new int[]{1});
	public static final Move powder = new Move(Type.Bug,"powder","Powder","Covers the target in powder that explodes if the target uses a Fire-type move. +1 Priority.","Foe takes damage when using Fire moves. +1 Priority.",Range.Any1,100,0,20,1,false,false,false,false,new int[]{1});
	public static final Move powdersnow = new Move(Type.Ice,"powdersnow","Powder Snow","Deals damage to all adjacent foes with a 10% chance to freeze each.","10% chance to freeze the foe(s).",Range.Opponent2,100,40,25,0,false,false,false,true,new int[]{1});
	public static final Move powergem = new Move(Type.Rock,"powergem","Power Gem","Deals damage to one adjacent target.","No additional effect.",Range.Any1,100,80,20,0,false,false,false,false,new int[]{1});
	public static final Move powersplit = new Move(Type.Psychic,"powersplit","Power Split","The user and one adjacent target have their Attack and Special Attack stats set to be equal to the average of the user and the target's Attack and Special Attack stats, respectively, rounded down. Stat stage changes are unaffected.","Averages Attack and Sp. Atk stats with target.",Range.Any1,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move powerswap = new Move(Type.Psychic,"powerswap","Power Swap","The user swaps its Attack and Special Attack stat stage changes with one adjacent target. Ignores a target's Substitute.","Swaps Attack and Sp. Atk stat stages with target.",Range.Any1,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move powertrick = new Move(Type.Psychic,"powertrick","Power Trick","The user swaps its Attack and Defense stats; stat stage changes remain on their respective stats. This move can be used again to swap the stats back. If the user uses Baton Pass, the replacement will have its Attack and Defense stats swapped if the effect is active.","Switches user's Attack and Defense stats.",Range.Self,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move poweruppunch = new Move(Type.Fighting,"poweruppunch","Power-Up Punch","Hitting a target raises the Attack stat.","Hitting a target raises Attack by 1",Range.Any1,100,40,20,0,false,false,false,true,new int[]{1});
	public static final Move powerwhip = new Move(Type.Grass,"powerwhip","Power Whip","Deals damage to one adjacent target. Makes contact.","No additional effect.",Range.Any1,85,120,10,0,false,false,false,false,new int[]{1});
	public static final Move present = new Move(Type.Normal,"present","Present","Deals damage or heals one adjacent target. 40% chance for 40 power, 30% chance for 80 power, 10% chance for 120 power, and 20% chance to heal the target by 1/4 of its maximum HP, rounded down. This move must hit to be effective.","40, 80, 120 power, or heals target by 1/4 max HP.",Range.Any1,90,0,15,0,false,false,false,false,new int[]{1});
	public static final Move protect = new Move(Type.Normal,"protect","Protect","The user is protected from most attacks made by other Pokemon during this turn. This attack has a 1/X chance of being successful, where X starts at 1 and doubles each time this move is successfully used. X resets to 1 if this attack fails or if the user's last used move is not Detect, Endure, Protect, Quick Guard, or Wide Guard. If X is 256 or more, this move has a 1/(2^32) chance of being successful. Fails if the user moves last this turn. Priority +4.","Prevents moves from affecting the user this turn.",Range.Self,150,0,10,4,false,false,false,false,new int[]{1});
	public static final Move psybeam = new Move(Type.Psychic,"psybeam","Psybeam","Deals damage to one adjacent target with a 10% chance to confuse it.","10% chance to confuse the target.",Range.Any1,100,65,20,0,false,false,false,true,new int[]{1});
	public static final Move psychup = new Move(Type.Normal,"psychup","Psych Up","The user copies all of one adjacent target's current stat stage changes. This move ignores Protect and Detect. Ignores a target's Substitute.","Copies the target's current stat stages.",Range.Any1,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move psychic = new Move(Type.Psychic,"psychic","Psychic","Deals damage to one adjacent target with a 10% chance to lower its Special Defense by 1 stage.","10% chance to lower the target's Sp. Def by 1.",Range.Any1,100,90,10,0,false,false,false,true,new int[]{1});
	public static final Move psychoboost = new Move(Type.Psychic,"psychoboost","Psycho Boost","Deals damage to one adjacent target and lowers the user's Special Attack by 2 stages.","Lowers the user's Sp. Atk by 2.",Range.Any1,90,140,5,0,false,false,false,false,new int[]{1});
	public static final Move psychocut = new Move(Type.Psychic,"psychocut","Psycho Cut","Deals damage to one adjacent target with a higher chance for a critical hit.","High critical hit ratio.",Range.Any1,100,70,20,0,false,false,false,false,new int[]{1});
	public static final Move psychoshift = new Move(Type.Psychic,"psychoshift","Psycho Shift","The user's major status problem is transferred to one adjacent target, and the user is cured. Fails if the target already has a major status problem.","Transfers the user's status ailment to the target.",Range.Any1,100,0,10,0,false,false,false,false,new int[]{1});
	public static final Move psyshock = new Move(Type.Psychic,"psyshock","Psyshock","Deals damage to one adjacent target based on its Defense instead of Special Defense.","Damages target based on Defense, not Sp. Def.",Range.Any1,100,80,10,0,false,false,false,false,new int[]{1});
	public static final Move psystrike = new Move(Type.Psychic,"psystrike","Psystrike","Deals damage to one adjacent target based on its Defense instead of Special Defense.","Damages target based on Defense, not Sp. Def.",Range.Any1,100,100,10,0,false,false,false,false,new int[]{1});
	public static final Move psywave = new Move(Type.Psychic,"psywave","Psywave","Deals damage to one adjacent target equal to (user's level) * (X + 50) / 100, where X is a random number from 0 to 100, rounded down, but not less than 1HP.","Random damage equal to 0.5x-1.5x user's level.",Range.Any1,100,0,15,0,false,false,false,false,new int[]{1});
	public static final Move punishment = new Move(Type.Dark,"punishment","Punishment","Deals damage to one adjacent target. Power is equal to 60 + (X * 20), where X is the target's total stat stage changes that are greater than 0, but not more than 200 power. Makes contact.","60 power + 20 for each of the target's stat boosts.",Range.Any1,100,0,5,0,false,false,false,false,new int[]{1});
	public static final Move pursuit = new Move(Type.Dark,"pursuit","Pursuit","Deals damage to one adjacent target. If an adjacent foe switches out this turn, this move hits that Pokemon before it leaves the field. If the user moves after a foe using U-turn or Volt Switch, but not Baton Pass, it will hit that foe before it leaves the field. Power doubles and no accuracy check is done if the user hits a foe switching out, and the user's turn is over; if a foe faints from this, the replacement Pokemon does not become active until the end of the turn. Makes contact.","Power doubles if a foe is switching out.",Range.Any1,100,40,20,0,false,false,false,false,new int[]{1});
	public static final Move quash = new Move(Type.Dark,"quash","Quash","Causes one adjacent target to take its turn after all other Pokemon this turn, no matter the priority of its selected move. Fails if the target already moved this turn.","Forces the target to move last this turn.",Range.Any1,100,0,15,0,false,false,false,false,new int[]{1});
	public static final Move quickattack = new Move(Type.Normal,"quickattack","Quick Attack","Deals damage to one adjacent target. Makes contact. Priority +1.","Usually goes first.",Range.Any1,100,40,30,1,false,false,false,false,new int[]{1});
	public static final Move quickguard = new Move(Type.Fighting,"quickguard","Quick Guard","The user and its party members are protected from attacks with priority greater than 0 made by other Pokemon, including allies, during this turn. Fails if this move is already in effect for the user's side. Priority +3.","Protects allies from priority attacks this turn.",Range.AllySide,150,0,15,3,false,false,false,false,new int[]{1});
	public static final Move quiverdance = new Move(Type.Bug,"quiverdance","Quiver Dance","Raises the user's Special Attack, Special Defense, and Speed by 1 stage.","Boosts the user's Sp. Atk, Sp. Def, Speed by 1.",Range.Self,150,0,20,0,false,false,false,false,new int[]{1});
	public static final Move rage = new Move(Type.Normal,"rage","Rage","Deals damage to one adjacent target. Once this move is used, the user's Attack is raised by 1 stage every time it is hit by another Pokemon's attack as long as this move is chosen for use. Makes contact.","Boosts the user's Attack by 1 if hit during use.",Range.Any1,100,20,20,0,false,false,false,false,new int[]{1});
	public static final Move ragepowder = new Move(Type.Bug,"ragepowder","Rage Powder","Until the end of the turn, all single-target attacks from the foe's team are redirected to the user if they are in range. Such attacks are redirected to the user before they can be reflected by Magic Coat or the Ability Magic Bounce, or drawn in by the Abilities Lightningrod or Storm Drain. Fails if it is not a double or triple battle. Priority +3.","The foes' moves target the user on the turn used.",Range.Self,150,0,20,2,false,false,false,false,new int[]{1});
	public static final Move raindance = new Move(Type.Water,"raindance","Rain Dance","For 5 turns, the weather becomes Rain Dance. The power of Water-type attacks is 1.5x and the power of Fire-type attacks is 0.5x during the effect. Lasts for 8 turns if the user is holding Damp Rock. Fails if the current weather is Rain Dance.","For 5 turns, heavy rain powers Water moves.",Range.All,150,0,5,0,false,false,false,false,new int[]{1});
	public static final Move rapidspin = new Move(Type.Normal,"rapidspin","Rapid Spin","Deals damage to one adjacent target. If this move is successful and the user has not fainted, the effects of Leech Seed and partial-trapping moves end for the user, and all hazards are removed from the user's side of the field.","Frees user from hazards/partial trap/Leech Seed.",Range.Any1,100,20,40,0,false,false,false,false,new int[]{1});
	public static final Move razorleaf = new Move(Type.Grass,"razorleaf","Razor Leaf","Deals damage to all adjacent foes with a higher chance for a critical hit.","High critical hit ratio. Hits adjacent foes.",Range.Opponent2,95,55,25,0,false,false,false,false,new int[]{1});
	public static final Move razorshell = new Move(Type.Water,"razorshell","Razor Shell","Deals damage to one adjacent target with a 50% chance to lower its Defense by 1 stage. Makes contact.","50% chance to lower the target's Defense by 1.",Range.Any1,95,75,10,0,false,false,false,true,new int[]{1});
	public static final Move razorwind = new Move(Type.Normal,"razorwind","Razor Wind","Deals damage to all adjacent foes with a higher chance for a critical hit. This attack charges on the first turn and strikes on the second. The user cannot make a move between turns. If the user is holding a Power Herb, the move completes in one turn.","Charges, then hits foe(s) turn 2. High crit ratio.",Range.Opponent2,100,80,10,0,false,false,false,false,new int[]{1});
	public static final Move recover = new Move(Type.Normal,"recover","Recover","The user restores 1/2 of its maximum HP, rounded half up.","Heals the user by 50% of its max HP.",Range.Self,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move recycle = new Move(Type.Normal,"recycle","Recycle","The user regains the item it last used, if it is not holding an item. Fails if the user was not holding an item, if the item was a popped Air Balloon, or if the item was lost to Bug Bite, Covet, Incinerate, Knock Off, Pluck, or Thief. Items thrown with Fling can be regained.","Restores the item the user last used.",Range.Self,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move reflect = new Move(Type.Psychic,"reflect","Reflect","For 5 turns, the user and its party members take 0.5x damage from physical attacks, or 0.66x damage if in a double or triple battle. Critical hits ignore this protection. It is removed from the user's side if the user or an ally is successfully hit by Brick Break or Defog. Brick Break removes the effect before damage is calculated. Lasts for 8 turns if the user is holding Light Clay.","For 5 turns, physical damage to allies is halved.",Range.AllySide,150,0,20,0,false,false,false,false,new int[]{1});
	public static final Move reflecttype = new Move(Type.Normal,"reflecttype","Reflect Type","Causes the user's types to become those of one adjacent target. Fails if the user is an Arceus. Ignores a target's Substitute.","User becomes the same type as the target.",Range.Any1,150,0,15,0,false,false,false,false,new int[]{1});
	public static final Move refresh = new Move(Type.Normal,"refresh","Refresh","The user cures its burn, poison, or paralysis.","Removes status from the user.",Range.Self,150,0,20,0,false,false,false,false,new int[]{1});
	public static final Move relicsong = new Move(Type.Normal,"relicsong","Relic Song","Deals damage to all adjacent foes with a 10% chance to put each to sleep. If this move is successful on at least one foe and the user is a Meloetta, it changes to the Pirouette Forme if it is currently in Aria Forme, or changes to Aria Forme if it is currently in Pirouette Forme. The Pirouette Forme reverts to Aria Forme when Meloetta is not active. Pokemon with the Ability Soundproof are immune.","10% chance to sleep foe(s). Meloetta transforms.",Range.Opponent2,100,75,10,0,false,false,false,true,new int[]{1});
	public static final Move rest = new Move(Type.Psychic,"rest","Rest","The user falls asleep for the next two turns and restores all of its HP, curing itself of any major status problem in the process. Fails if the user has full HP, is already asleep, or if another effect is preventing sleep.","User sleeps 2 turns and restores HP and status.",Range.Self,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move retaliate = new Move(Type.Normal,"retaliate","Retaliate","Deals damage to one adjacent target. Power doubles if one of the user's party members fainted last turn. Makes contact.","Power doubles if an ally fainted last turn.",Range.Any1,100,70,5,0,false,false,false,false,new int[]{1});
	public static final Move Return = new Move(Type.Normal,"return","Return","Deals damage to one adjacent target. Power is equal to the greater of (user's Happiness * 2/5), rounded down, or 1. Makes contact.","Max 102 power at maximum Happiness.",Range.Any1,100,0,20,0,false,false,false,false,new int[]{1});
	public static final Move revenge = new Move(Type.Fighting,"revenge","Revenge","Deals damage to one adjacent target. Power doubles if the user was hit by that target this turn. Makes contact. Priority -4.","Power doubles if user is damaged by the target.",Range.Any1,100,60,10,-4,false,false,false,false,new int[]{1});
	public static final Move reversal = new Move(Type.Fighting,"reversal","Reversal","Deals damage to one adjacent target based on the amount of HP the user has left. X is equal to (user's current HP * 48 / user's maximum HP), rounded down; the base power of this attack is 20 if X is 33 to 48, 40 if X is 17 to 32, 80 if X is 10 to 16, 100 if X is 5 to 9, 150 if X is 2 to 4, and 200 if X is 0 or 1. Makes contact.","More power the less HP the user has left.",Range.Any1,100,0,15,0,false,false,false,false,new int[]{1});
	public static final Move roar = new Move(Type.Normal,"roar","Roar","Causes one adjacent target to be forced to switch out and be replaced with a random unfainted ally. Fails if the target used Ingrain previously or has the Ability Suction Cups. Pokemon with the Ability Soundproof are immune. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves. Ignores a target's Substitute. Priority -6. (Wild battles: The battle ends as long as it is not a double battle and the user's level is not less than the opponent's level.)","Forces the target to switch to a random ally.",Range.Any1,150,0,20,-6,false,false,false,false,new int[]{1});
	public static final Move roaroftime = new Move(Type.Dragon,"roaroftime","Roar of Time","Deals damage to one adjacent target. If this move is successful, the user must recharge on the following turn and cannot make a move.","User cannot move next turn.",Range.Any1,90,150,5,0,false,false,false,false,new int[]{1});
	public static final Move rockblast = new Move(Type.Rock,"rockblast","Rock Blast","Deals damage to one adjacent target and hits two to five times. Has a 1/3 chance to hit two or three times, and a 1/6 chance to hit four or five times. If one of the hits breaks the target's Substitute, it will take damage for the remaining hits. If the user has the Ability Skill Link, this move will always hit five times.","Hits 2-5 times in one turn.",Range.Any1,90,25,10,0,false,false,false,false,new int[]{2,5});
	public static final Move rockclimb = new Move(Type.Normal,"rockclimb","Rock Climb","Deals damage to one adjacent target with a 20% chance to confuse it. Makes contact.","20% chance to confuse the target.",Range.Any1,85,90,20,0,false,false,false,true,new int[]{1});
	public static final Move rockpolish = new Move(Type.Rock,"rockpolish","Rock Polish","Raises the user's Speed by 2 stages.","Boosts the user's Speed by 2.",Range.Self,150,0,20,0,false,false,false,false,new int[]{1});
	public static final Move rockslide = new Move(Type.Rock,"rockslide","Rock Slide","Deals damage to all adjacent foes with a 30% chance to flinch each.","30% chance to flinch the foe(s).",Range.Opponent2,90,75,10,0,false,false,false,true,new int[]{1});
	public static final Move rocksmash = new Move(Type.Fighting,"rocksmash","Rock Smash","Deals damage to one adjacent target with a 50% chance to lower its Defense by 1 stage. Makes contact.","50% chance to lower the target's Defense by 1.",Range.Any1,100,40,15,0,false,false,false,true,new int[]{1});
	public static final Move rockthrow = new Move(Type.Rock,"rockthrow","Rock Throw","Deals damage to one adjacent target.","No additional effect.",Range.Any1,90,50,15,0,false,false,false,false,new int[]{1});
	public static final Move rocktomb = new Move(Type.Rock,"rocktomb","Rock Tomb","Deals damage to one adjacent target with a 100% chance to lower its Speed by 1 stage.","100% chance to lower the target's Speed by 1.",Range.Any1,95,60,15,0,false,false,false,true,new int[]{1});
	public static final Move rockwrecker = new Move(Type.Rock,"rockwrecker","Rock Wrecker","Deals damage to one adjacent target. If this move is successful, the user must recharge on the following turn and cannot make a move.","User cannot move next turn.",Range.Any1,90,150,5,0,false,false,false,false,new int[]{1});
	public static final Move roleplay = new Move(Type.Psychic,"roleplay","Role Play","The user's Ability changes to match one adjacent target's Ability. Fails if the user's Ability is Multitype or already matches the target, or if the target's Ability is Flower Gift, Forecast, Illusion, Imposter, Multitype, Trace, Wonder Guard, or Zen Mode. This move ignores Protect and Detect. Ignores a target's Substitute.","User replaces its Ability with the target's.",Range.Any1,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move rollingkick = new Move(Type.Fighting,"rollingkick","Rolling Kick","Deals damage to one adjacent target with a 30% chance to flinch it. Makes contact.","30% chance to flinch the target.",Range.Any1,85,60,15,0,false,false,false,true,new int[]{1});
	public static final Move rollout = new Move(Type.Rock,"rollout","Rollout","Deals damage to one adjacent target. The user is locked into this move and cannot make another move until it misses, 5 turns have passed, or the attack cannot be used. Power doubles with each successful hit of this move and doubles again if Defense Curl was used previously by the user. If this move is called by Sleep Talk, the move is used for one turn. Makes contact.","Power doubles with each hit. Repeats for 5 turns.",Range.Any1,90,30,20,0,false,false,false,false,new int[]{1});
	public static final Move roost = new Move(Type.Flying,"roost","Roost","The user restores 1/2 of its maximum HP, rounded half up. Until the end of the turn, Flying-type users lose their Flying-type and pure Flying-type users become Normal-type. Does nothing if the user's HP is full.","Heals 50% HP. Flying-type removed 'til turn ends.",Range.Self,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move rototiller = new Move(Type.Ground,"rototiller","Rototiller","Raises the Attack and Sp. Atk stats of Grass-type Pokemon.","Raises Attack and Sp. Atk of Grass Pokemon.",Range.All,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move round = new Move(Type.Normal,"round","Round","Deals damage to one adjacent target. If there are other active Pokemon that chose this move for use this turn, those Pokemon take their turn immediately after the user, in Speed order, and this move's power is 120 for each other user. Pokemon with the Ability Soundproof are immune.","Power doubles if others used Round this turn.",Range.Any1,100,60,15,0,false,false,false,false,new int[]{1});
	public static final Move sacredfire = new Move(Type.Fire,"sacredfire","Sacred Fire","Deals damage to one adjacent target with a 50% chance to burn it. If the user is frozen, it will defrost before using this move.","50% chance to burn the target. Thaws user.",Range.Any1,95,100,5,0,false,false,false,true,new int[]{1});
	public static final Move sacredsword = new Move(Type.Fighting,"sacredsword","Sacred Sword","Deals damage to one adjacent target and ignores the target's stat stage changes, including evasion. Makes contact.","Ignores the target's stat stage changes.",Range.Any1,100,90,15,0,false,false,false,false,new int[]{1});
	public static final Move safeguard = new Move(Type.Normal,"safeguard","Safeguard","For 5 turns, the user and its party members cannot have major status problems or confusion inflicted on them by other Pokemon. It is removed from the user's side if the user or an ally is successfully hit by Defog.","For 5 turns, protects user's party from status.",Range.AllySide,150,0,25,0,false,false,false,false,new int[]{1});
	public static final Move sandattack = new Move(Type.Ground,"sandattack","Sand Attack","Lowers one adjacent target's accuracy by 1 stage. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","Lowers the target's accuracy by 1.",Range.Any1,100,0,15,0,false,false,false,false,new int[]{1});
	public static final Move sandtomb = new Move(Type.Ground,"sandtomb","Sand Tomb","Deals damage to one adjacent target and prevents it from switching for four or five turns; seven turns if the user is holding Grip Claw. Causes damage to the target equal to 1/8 of its maximum HP (1/6 if the user is holding Binding Band), rounded down, at the end of each turn during effect. The target can still switch out if it is holding Shed Shell or uses Baton Pass, U-turn, or Volt Switch. The effect ends if either the user or the target leaves the field, or if the target uses Rapid Spin. This effect is not stackable or reset by using this or another partial-trapping move.","Traps and damages the target for 4-5 turns.",Range.Any1,85,35,15,0,false,false,false,false,new int[]{1});
	public static final Move sandstorm = new Move(Type.Rock,"sandstorm","Sandstorm","For 5 turns, the weather becomes Sandstorm. At the end of each turn except the last, all active Pokemon lose 1/16 of their maximum HP, rounded down, unless they are a Ground, Rock, or Steel-type, or have the Abilities Magic Guard, Overcoat, Sand Force, Sand Rush, or Sand Veil. The Special Defense of Rock-types is 1.5x during the effect. Lasts for 8 turns if the user is holding Smooth Rock. Fails if the current weather is Sandstorm.","For 5 turns, a sandstorm rages.",Range.All,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move scald = new Move(Type.Water,"scald","Scald","Deals damage to one adjacent target with a 30% chance to burn it. If the user is frozen, it thaws out just before attacking.","30% chance to burn the target. Thaws user.",Range.Any1,100,80,15,0,false,false,false,true,new int[]{1});
	public static final Move scaryface = new Move(Type.Normal,"scaryface","Scary Face","Lowers one adjacent target's Speed by 2 stages. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","Lowers the target's Speed by 2.",Range.Any1,100,0,10,0,false,false,false,false,new int[]{1});
	public static final Move scratch = new Move(Type.Normal,"scratch","Scratch","Deals damage to one adjacent target. Makes contact.","No additional effect.",Range.Any1,100,40,35,0,false,false,false,false,new int[]{1});
	public static final Move screech = new Move(Type.Normal,"screech","Screech","Lowers one adjacent target's Defense by 2 stages. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves. Pokemon with the Ability Soundproof are immune.","Lowers the target's Defense by 2.",Range.Any1,85,0,40,0,false,false,false,false,new int[]{1});
	public static final Move searingshot = new Move(Type.Fire,"searingshot","Searing Shot","Deals damage to all adjacent Pokemon with a 30% chance to burn each.","30% chance to burn adjacent Pokemon.",Range.AllAdjacent,100,100,5,0,false,false,false,true,new int[]{1});
	public static final Move secretpower = new Move(Type.Normal,"secretpower","Secret Power","Deals damage to one adjacent target with a 30% chance to cause a secondary effect on the target based on the battle terrain. Lowers accuracy by 1 stage in Wi-Fi battles. (In-game: Causes sleeping in grass, lowers Speed by 1 stage in puddles, lowers Attack by 1 stage on water, flinching in caves, lowers accuracy by 1 stage on rocky ground and sand, freezing on snow and ice, and causes paralysis everywhere else.) The secondary effect chance is not affected by the Ability Serene Grace.","Effect varies with terrain. (30% accuracy lower 1)",Range.Any1,100,70,20,0,false,false,false,true,new int[]{1});
	public static final Move secretsword = new Move(Type.Fighting,"secretsword","Secret Sword","Deals damage to one adjacent target based on its Defense instead of Special Defense.","Damages target based on Defense, not Sp. Def.",Range.Any1,100,85,10,0,false,false,false,false,new int[]{1});
	public static final Move seedbomb = new Move(Type.Grass,"seedbomb","Seed Bomb","Deals damage to one adjacent target.","No additional effect.",Range.Any1,100,80,15,0,false,false,false,false,new int[]{1});
	public static final Move seedflare = new Move(Type.Grass,"seedflare","Seed Flare","Deals damage to one adjacent target with a 40% chance to lower its Special Defense by 2 stages.","40% chance to lower the target's Sp. Def by 2.",Range.Any1,85,120,5,0,false,false,false,true,new int[]{1});
	public static final Move seismictoss = new Move(Type.Fighting,"seismictoss","Seismic Toss","Deals damage to one adjacent target equal to the user's level. Makes contact.","Does damage equal to the user's level.",Range.Any1,100,0,20,0,false,false,false,false,new int[]{1});
	public static final Move selfdestruct = new Move(Type.Normal,"selfdestruct","Self-Destruct","The user faints and then damage is dealt to all adjacent Pokemon.","Hits adjacent Pokemon. The user faints.",Range.AllAdjacent,100,200,5,0,false,false,false,false,new int[]{1});
	public static final Move shadowball = new Move(Type.Ghost,"shadowball","Shadow Ball","Deals damage to one adjacent target with a 20% chance to lower its Special Defense by 1 stage.","20% chance to lower the target's Sp. Def by 1.",Range.Any1,100,80,15,0,false,false,false,true,new int[]{1});
	public static final Move shadowclaw = new Move(Type.Ghost,"shadowclaw","Shadow Claw","Deals damage to one adjacent target with a higher chance for a critical hit. Makes contact.","High critical hit ratio.",Range.Any1,100,70,15,0,false,false,false,false,new int[]{1});
	public static final Move shadowforce = new Move(Type.Ghost,"shadowforce","Shadow Force","Deals damage to one adjacent target and breaks through Protect and Detect for this turn, allowing other Pokemon to attack the target normally. This attack charges on the first turn and strikes on the second. On the first turn, the user avoids all attacks. The user cannot make a move between turns. If the user is holding a Power Herb, the move completes in one turn. Makes contact.","Disappears turn 1. Hits turn 2. Breaks protection.",Range.Any1,100,120,5,0,false,false,false,false,new int[]{1});
	public static final Move shadowpunch = new Move(Type.Ghost,"shadowpunch","Shadow Punch","Deals damage to one adjacent target and does not check accuracy. Makes contact. Damage is boosted to 1.2x by the Ability Iron Fist.","This move does not check accuracy.",Range.Any1,150,60,20,0,false,false,false,false,new int[]{1});
	public static final Move shadowsneak = new Move(Type.Ghost,"shadowsneak","Shadow Sneak","Deals damage to one adjacent target. Makes contact. Priority +1.","Usually goes first.",Range.Any1,100,40,30,1,false,false,false,false,new int[]{1});
	public static final Move sharpen = new Move(Type.Normal,"sharpen","Sharpen","Raises the user's Attack by 1 stage.","Boosts the user's Attack by 1.",Range.Self,150,0,30,0,false,false,false,false,new int[]{1});
	public static final Move sheercold = new Move(Type.Ice,"sheercold","Sheer Cold","Deals damage to one adjacent target equal to the target's max HP. Ignores accuracy and evasion modifiers. This attack's accuracy is equal to (user's level - target's level + 30)%, and fails if the target is at a higher level. Pokemon with the Ability Sturdy are immune.","OHKOs the target. Fails if user is a lower level.",Range.Any1,30,0,5,0,false,false,false,false,new int[]{1});
	public static final Move shellsmash = new Move(Type.Normal,"shellsmash","Shell Smash","Raises the user's Attack, Special Attack, and Speed by 2 stages. Lowers the user's Defense and Special Defense by 1 stage.","Boosts Atk, SpA, Spe by 2. Lowers Def, SpD by 1.",Range.Self,150,0,15,0,false,false,false,false,new int[]{1});
	public static final Move shiftgear = new Move(Type.Steel,"shiftgear","Shift Gear","Raises the user's Attack by 1 stage and its Speed by 2 stages.","Boosts the user's Speed by 2 and Attack by 1.",Range.Self,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move shockwave = new Move(Type.Electric,"shockwave","Shock Wave","Deals damage to one adjacent target and does not check accuracy.","This move does not check accuracy.",Range.Any1,150,60,20,0,false,false,false,false,new int[]{1});
	public static final Move signalbeam = new Move(Type.Bug,"signalbeam","Signal Beam","Deals damage to one adjacent target with a 10% chance to confuse it.","10% chance to confuse the target.",Range.Any1,100,75,15,0,false,false,false,true,new int[]{1});
	public static final Move silverwind = new Move(Type.Bug,"silverwind","Silver Wind","Deals damage to one adjacent target with a 10% chance to raise the user's Attack, Defense, Speed, Special Attack, and Special Defense by 1 stage.","10% chance to boost all stats by 1 (not acc/eva).",Range.Any1,100,60,5,0,false,false,false,true,new int[]{1});
	public static final Move simplebeam = new Move(Type.Normal,"simplebeam","Simple Beam","Causes one adjacent target's Ability to become Simple. Fails if the target's Ability is Multitype, Simple, Stance Change, or Truant. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","The target's Ability becomes Simple.",Range.Any1,100,0,15,0,false,false,false,false,new int[]{1});
	public static final Move sing = new Move(Type.Normal,"sing","Sing","Puts one adjacent target to sleep. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves. Pokemon with the Ability Soundproof are immune.","Puts the target to sleep.",Range.Any1,55,0,15,0,false,false,false,false,new int[]{1});
	public static final Move sketch = new Move(Type.Normal,"sketch","Sketch","This move is permanently replaced by the last move used by one adjacent target. The copied move has the maximum PP for that move. Fails if the target has not made a move, if the user has Transformed, or if the move is Chatter, Sketch, Struggle, or any move the user knows. This move ignores Protect and Detect. Ignores a target's Substitute.","Permanently copies the last move target used.",Range.Any1,150,0,1,0,false,false,false,false,new int[]{1});
	public static final Move skillswap = new Move(Type.Psychic,"skillswap","Skill Swap","The user trades its Ability with one adjacent target. Fails if either the user or the target's Ability is Illusion, Multitype, Stance Change, or Wonder Guard, or if both have the same Ability. Ignores a target's Substitute.","The user and the target trade Abilities.",Range.Any1,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move skullbash = new Move(Type.Normal,"skullbash","Skull Bash","Deals damage to one adjacent target. This attack charges on the first turn and strikes on the second. The user cannot make a move between turns. Raises the user's Defense by 1 stage on the first turn. If the user is holding a Power Herb, the move completes in one turn. Makes contact.","Boosts user's Defense by 1 on turn 1. Hits turn 2.",Range.Any1,100,130,10,0,false,false,false,false,new int[]{1});
	public static final Move skyattack = new Move(Type.Flying,"skyattack","Sky Attack","Deals damage to one adjacent or non-adjacent target with a 30% chance to flinch it and a higher chance for a critical hit. This attack charges on the first turn and strikes on the second. The user cannot make a move between turns. If the user is holding a Power Herb, the move completes in one turn.","Charges, then hits turn 2. 30% flinch. High crit.",Range.Any1,90,140,5,0,false,false,false,true,new int[]{1});
	public static final Move skydrop = new Move(Type.Flying,"skydrop","Sky Drop","Deals damage to one adjacent or non-adjacent target. This attack takes the target into the air with the user on the first turn and strikes on the second. On the first turn, the user and the target avoid all attacks other than Gust, Hurricane, Sky Uppercut, Smack Down, Thunder, and Twister. The user and the target cannot make a move between turns. This move has no effect on Flying-types. Fails on the first turn if the target is an ally or if the target has a Substitute. This move cannot be used while Gravity is in effect. Makes contact.","User and foe fly up turn 1. Damages on turn 2.",Range.Any1,100,60,10,0,false,false,false,false,new int[]{1});
	public static final Move skyuppercut = new Move(Type.Fighting,"skyuppercut","Sky Uppercut","Deals damage to one adjacent target. This move can hit a target using Bounce, Fly, or Sky Drop. Makes contact. Damage is boosted to 1.2x by the Ability Iron Fist.","Can hit Pokemon using Bounce, Fly, or Sky Drop.",Range.Any1,90,85,15,0,false,false,false,false,new int[]{1});
	public static final Move slackoff = new Move(Type.Normal,"slackoff","Slack Off","The user restores 1/2 of its maximum HP, rounded half up.","Heals the user by 50% of its max HP.",Range.Self,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move slam = new Move(Type.Normal,"slam","Slam","Deals damage to one adjacent target. Makes contact.","No additional effect.",Range.Any1,75,80,20,0,false,false,false,false,new int[]{1});
	public static final Move slash = new Move(Type.Normal,"slash","Slash","Deals damage to one adjacent target with a higher chance for a critical hit. Makes contact.","High critical hit ratio.",Range.Any1,100,70,20,0,false,false,false,false,new int[]{1});
	public static final Move sleeppowder = new Move(Type.Grass,"sleeppowder","Sleep Powder","Puts one adjacent target to sleep. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","Puts the target to sleep.",Range.Any1,75,0,15,0,false,false,false,false,new int[]{1});
	public static final Move sleeptalk = new Move(Type.Normal,"sleeptalk","Sleep Talk","One of the user's known moves is selected for use at random. Fails if the user is not asleep. The selected move does not have PP deducted from it, and can currently have 0PP. This move cannot select Assist, Bide, Chatter, Copycat, Focus Punch, Me First, Metronome, Mimic, Mirror Move, Nature Power, Sketch, Sleep Talk, Struggle, Uproar, or any two-turn move.","User must be asleep. Uses another known move.",Range.Self,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move sludge = new Move(Type.Poison,"sludge","Sludge","Deals damage to one adjacent target with a 30% chance to poison it.","30% chance to poison the target.",Range.Any1,100,65,20,0,false,false,false,true,new int[]{1});
	public static final Move sludgebomb = new Move(Type.Poison,"sludgebomb","Sludge Bomb","Deals damage to one adjacent target with a 30% chance to poison it.","30% chance to poison the target.",Range.Any1,100,90,10,0,false,false,false,true,new int[]{1});
	public static final Move sludgewave = new Move(Type.Poison,"sludgewave","Sludge Wave","Deals damage to all adjacent Pokemon with a 10% chance to poison each.","10% chance to poison adjacent Pokemon.",Range.AllAdjacent,100,95,10,0,false,false,false,true,new int[]{1});
	public static final Move smackdown = new Move(Type.Rock,"smackdown","Smack Down","Deals damage to one adjacent target. This move can hit a target using Bounce, Fly, or Sky Drop. If this move hits a target under the effect of Bounce, Fly, Magnet Rise, or Telekinesis, the effect ends. If the target is a Flying-type that has not used Roost this turn or a Pokemon with the Ability Levitate, it loses its immunity to Ground-type attacks and the Ability Arena Trap as long as it remains active. During the effect, Magnet Rise fails for the target and Telekinesis fails against the target.","Removes the target's Ground immunity.",Range.Any1,100,50,15,0,false,false,false,false,new int[]{1});
	public static final Move smellingsalts = new Move(Type.Normal,"smellingsalts","Smelling Salts","Deals damage to one adjacent target. Power doubles if the target is paralyzed, and the target is cured of paralysis. Makes contact.","Power doubles if target is paralyzed, and cures it.",Range.Any1,100,70,10,0,false,false,false,false,new int[]{1});
	public static final Move smog = new Move(Type.Poison,"smog","Smog","Deals damage to one adjacent target with a 40% chance to poison it.","40% chance to poison the target.",Range.Any1,70,30,20,0,false,false,false,true,new int[]{1});
	public static final Move smokescreen = new Move(Type.Normal,"smokescreen","Smokescreen","Lowers one adjacent target's accuracy by 1 stage. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","Lowers the target's accuracy by 1.",Range.Any1,100,0,20,0,false,false,false,false,new int[]{1});
	public static final Move snarl = new Move(Type.Dark,"snarl","Snarl","Deals damage to all adjacent foes with a 100% chance to lower their Special Attack by 1 stage each. Pokemon with the Ability Soundproof are immune.","100% chance to lower the foe(s) Sp. Atk by 1.",Range.Opponent2,95,55,15,0,false,false,false,true,new int[]{1});
	public static final Move snatch = new Move(Type.Dark,"snatch","Snatch","If another Pokemon uses one of the following moves this turn, the user steals that move to use itself. If multiple Pokemon use this move in the same turn, the applicable moves will be stolen in turn order; a move cannot be stolen multiple times. Aqua Ring, Aromatherapy, Autotomize, Belly Drum, Camouflage, Charge, Conversion, Cosmic Power, Cotton Guard, Heal Bell, Healing Wish, Imprison, Ingrain, Light Screen, Lucky Chant, Lunar Dance, Magnet Rise, Mist, Power Trick, Quick Guard, Recycle, Reflect, Refresh, Safeguard, Stockpile, Substitute, Swallow, Tailwind, Wide Guard, Wish, and any move that has a primary effect of raising the user's stats or healing the user. Ignores a target's Substitute. Priority +4.","User steals certain support moves to use itself.",Range.Self,150,0,10,4,false,false,false,false,new int[]{1});
	public static final Move snore = new Move(Type.Normal,"snore","Snore","Deals damage to one adjacent target with a 30% chance to flinch it. Fails if the user is not asleep. Pokemon with the Ability Soundproof are immune.","User must be asleep. 30% chance to flinch target.",Range.Any1,100,50,15,0,false,false,false,true,new int[]{1});
	public static final Move spikyshield = new Move(Type.Grass,"spikyshield","Spiky Shield","In addition to protecting the user from attacks, this move also damages any attacker who makes direct contact by 1/8 of their maximum HP.","Protects user. Damages contactors.",Range.Self,150,0,10,4,false,false,false,false,new int[]{1});
	public static final Move soak = new Move(Type.Water,"soak","Soak","Causes one adjacent target to become a Water-type. Fails if the target is an Arceus. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","Changes the target's type to Water.",Range.Any1,100,0,20,0,false,false,false,false,new int[]{1});
	public static final Move softboiled = new Move(Type.Normal,"softboiled","Soft-Boiled","The user restores 1/2 of its maximum HP, rounded half up. (Field: Can be used to heal an ally by draining 1/5 of the user's maximum HP, rounded down, and restoring that amount to the selected ally. Fails if the user's HP would be reduced to less than 1.)","Heals the user by 50% of its max HP.",Range.Self,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move solarbeam = new Move(Type.Grass,"solarbeam","Solar Beam","Deals damage to one adjacent target. This attack charges on the first turn and strikes on the second. The user cannot make a move between turns. Power is halved if the weather is Hail, Rain Dance, or Sandstorm. If the user is holding a Power Herb or the weather is Sunny Day, the move completes in one turn.","Charges turn 1. Hits turn 2. No charge in sunlight.",Range.Any1,100,120,10,0,false,false,false,false,new int[]{1});
	public static final Move sonicboom = new Move(Type.Normal,"sonicboom","Sonic Boom","Deals damage to one adjacent target equal to 20HP.","Always does 20 HP of damage.",Range.Any1,90,0,20,0,false,false,false,false,new int[]{1});
	public static final Move spacialrend = new Move(Type.Dragon,"spacialrend","Spacial Rend","Deals damage to one adjacent target with a higher chance for a critical hit.","High critical hit ratio.",Range.Any1,95,100,5,0,false,false,false,false,new int[]{1});
	public static final Move spark = new Move(Type.Electric,"spark","Spark","Deals damage to one adjacent target with a 30% chance to paralyze it. Makes contact.","30% chance to paralyze the target.",Range.Any1,100,65,20,0,false,false,false,true,new int[]{1});
	public static final Move spiderweb = new Move(Type.Bug,"spiderweb","Spider Web","Prevents one adjacent target from switching out. The target can still switch out if it is holding Shed Shell or uses Baton Pass, U-turn, or Volt Switch. If the target leaves the field using Baton Pass, the replacement will remain trapped. The effect ends if the user leaves the field. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","The target cannot switch out.",Range.Any1,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move spikecannon = new Move(Type.Normal,"spikecannon","Spike Cannon","Deals damage to one adjacent target and hits two to five times. Has a 1/3 chance to hit two or three times, and a 1/6 chance to hit four or five times. If one of the hits breaks the target's Substitute, it will take damage for the remaining hits. If the user has the Ability Skill Link, this move will always hit five times.","Hits 2-5 times in one turn.",Range.Any1,100,20,15,0,false,false,false,false,new int[]{2,5});
	public static final Move spikes = new Move(Type.Ground,"spikes","Spikes","Sets up a hazard on the foe's side of the field, damaging each foe that switches in, unless it is a Flying-type or has the Ability Levitate. Can be used up to three times before failing. Foes lose 1/8 of their maximum HP with one layer, 1/6 of their maximum HP with two layers, and 1/4 of their maximum HP with three layers, all rounded down. Can be removed from the foe's side if any foe uses Rapid Spin or is hit by Defog. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","Hurts grounded foes on switch-in. Max 3 layers.",Range.FoeSide,150,0,20,0,false,false,false,false,new int[]{1});
	public static final Move spitup = new Move(Type.Normal,"spitup","Spit Up","Deals damage to one adjacent target. Power is equal to 100 times the user's Stockpile count. Fails if the user's Stockpile count is 0. Whether or not this move is successful, the user's Defense and Special Defense decrease by as many stages as Stockpile had increased them, and the user's Stockpile count resets to 0.","More power with more uses of Stockpile.",Range.Any1,100,0,10,0,false,false,false,false,new int[]{1});
	public static final Move spite = new Move(Type.Ghost,"spite","Spite","Causes one adjacent target's last used move to decrease by 4PP. Fails if the target has not made a move, if the move has 0PP, or if it no longer knows the move. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves. Ignores a target's Substitute.","Lowers the PP of the target's last move by 4.",Range.Any1,100,0,10,0,false,false,false,false,new int[]{1});
	public static final Move splash = new Move(Type.Normal,"splash","Splash","Nothing happens... This move cannot be used while Gravity is in effect.","Does nothing (but we still love it).",Range.Self,150,0,40,0,false,false,false,false,new int[]{1});
	public static final Move spore = new Move(Type.Grass,"spore","Spore","Puts one adjacent target to sleep. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","Puts the target to sleep.",Range.Any1,100,0,15,0,false,false,false,false,new int[]{1});
	public static final Move stealthrock = new Move(Type.Rock,"stealthrock","Stealth Rock","Sets up a hazard on the foe's side of the field, damaging each foe that switches in. Can be used only once before failing. Foes lose 1/32, 1/16, 1/8, 1/4, or 1/2 of their maximum HP, rounded down, based on their weakness to the Rock-type; 0.25x, 0.5x, neutral, 2x, or 4x, respectively. Can be removed from the foe's side if any foe uses Rapid Spin or is hit by Defog. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves. (CAP: Pokemon with the Ability Mountaineer are immune.)","Hurts foes on switch-in. Factors Rock weakness.",Range.FoeSide,150,0,20,0,false,false,false,false,new int[]{1});
	public static final Move steameruption = new Move(Type.Water,"steameruption","Steam Eruption","Deals damage to one adjacent target with a 30% chance to burn it.","30% chance to burn the target.",Range.Any1,95,110,5,0,false,false,false,true,new int[]{1});
	public static final Move steelwing = new Move(Type.Steel,"steelwing","Steel Wing","Deals damage to one adjacent target with a 10% chance to raise the user's Defense by 1 stage. Makes contact.","10% chance to boost the user's Defense by 1.",Range.Any1,90,70,25,0,false,false,false,true,new int[]{1});
	public static final Move stickyweb = new Move(Type.Bug,"stickyweb","Sticky Web","Lowers the Speed stat of the opposing team's Pokemon upon switching into battle.","Lowers Speed of opposing Pokemon switched in.",Range.FoeSide,150,0,20,0,false,false,false,false,new int[]{1});
	public static final Move stockpile = new Move(Type.Normal,"stockpile","Stockpile","Raises the user's Defense and Special Defense by 1 stage. The user's Stockpile count increases by 1. Fails if the user's Stockpile count is 3.","Boosts user's Defense, Sp. Def by 1. Max 3 uses.",Range.Self,150,0,20,0,false,false,false,false,new int[]{1});
	public static final Move stomp = new Move(Type.Normal,"stomp","Stomp","Deals damage to one adjacent target with a 30% chance to flinch it. Damage doubles if Minimize was used previously by the target. Makes contact.","30% chance to flinch the target.",Range.Any1,100,65,20,0,false,false,false,true,new int[]{1});
	public static final Move stoneedge = new Move(Type.Rock,"stoneedge","Stone Edge","Deals damage to one adjacent target with a higher chance for a critical hit.","High critical hit ratio.",Range.Any1,80,100,5,0,false,false,false,false,new int[]{1});
	public static final Move storedpower = new Move(Type.Psychic,"storedpower","Stored Power","Deals damage to one adjacent target. Power is equal to 20 + (X * 20), where X is the user's total stat stage changes that are greater than 0."," + 20 power for each of the user's stat boosts.",Range.Any1,100,20,10,0,false,false,false,false,new int[]{1});
	public static final Move stormthrow = new Move(Type.Fighting,"stormthrow","Storm Throw","Deals damage to one adjacent target. This move is always a critical hit unless the target is under the effect of Lucky Chant or has the Abilities Battle Armor or Shell Armor. Makes contact.","Always results in a critical hit.",Range.Any1,100,60,10,0,false,false,false,false,new int[]{1});
	public static final Move steamroller = new Move(Type.Bug,"steamroller","Steamroller","Deals damage to one adjacent target with a 30% chance to flinch it. Damage doubles if Minimize was used previously by the target. Makes contact.","30% chance to flinch the target.",Range.Any1,100,65,20,0,false,false,false,true,new int[]{1});
	public static final Move strength = new Move(Type.Normal,"strength","Strength","Deals damage to one adjacent target. Makes contact. (Field: Can be used to move boulders.)","No additional effect.",Range.Any1,100,80,15,0,false,false,false,false,new int[]{1});
	public static final Move stringshot = new Move(Type.Bug,"stringshot","String Shot","Lowers all adjacent foes' Speed by 2 stages. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","Lowers the foe(s) Speed by 2.",Range.Opponent2,95,0,40,0,false,false,false,false,new int[]{1});
	public static final Move struggle = new Move(Type.Normal,"struggle","Struggle","Deals typeless damage to one adjacent foe at random. If this move was successful, the user loses 1/4 of its maximum HP, rounded half up; the Ability Rock Head does not prevent this. This move can only be used if none of the user's known moves can be selected. Makes contact.","User loses 25% of its max HP as recoil.",Range.Any1,150,50,1,0,false,false,false,false,new int[]{1});
	public static final Move strugglebug = new Move(Type.Bug,"strugglebug","Struggle Bug","Deals damage to all adjacent foes with a 100% chance to lower their Special Attack by 1 stage each.","100% chance to lower the foe(s) Sp. Atk by 1.",Range.Opponent2,100,50,20,0,false,false,false,true,new int[]{1});
	public static final Move stunspore = new Move(Type.Grass,"stunspore","Stun Spore","Paralyzes one adjacent target. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","Paralyzes the target.",Range.Any1,75,0,30,0,false,false,false,false,new int[]{1});
	public static final Move submission = new Move(Type.Fighting,"submission","Submission","Deals damage to one adjacent target. If the target lost HP, the user takes recoil damage equal to 1/4 that HP, rounded half up, but not less than 1HP. Makes contact.","Has 1/4 recoil.",Range.Any1,80,80,25,0,false,false,false,false,new int[]{1});
	public static final Move substitute = new Move(Type.Normal,"substitute","Substitute","The user takes 1/4 of its maximum HP, rounded down, and puts it into a substitute to take its place in battle. The substitute is removed once enough damage is inflicted on it, or if the user switches out or faints. Baton Pass can be used to transfer the substitute to an ally, and the substitute will keep its remaining HP. Until the substitute is broken, it receives damage from all attacks made by other Pokemon and shields the user from status effects and stat stage changes caused by other Pokemon. The user still takes normal damage from weather and status effects while behind its substitute. If the substitute breaks during a multi-hit attack, the user will take damage from any remaining hits. This move fails if the user does not have enough HP remaining to create a substitute, or if it already has a substitute.","User takes 1/4 its max HP to put in a Substitute.",Range.Self,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move suckerpunch = new Move(Type.Dark,"suckerpunch","Sucker Punch","Deals damage to one adjacent target. Fails if the target did not select a damaging move for use this turn, or if the target moves before the user. Makes contact. Priority +1.","Usually goes first. Fails if target is not attacking.",Range.Any1,100,80,5,1,false,false,false,false,new int[]{1});
	public static final Move sunnyday = new Move(Type.Fire,"sunnyday","Sunny Day","For 5 turns, the weather becomes Sunny Day. The power of Fire-type attacks is 1.5x and the power of Water-type attacks is 0.5x during the effect. Lasts for 8 turns if the user is holding Heat Rock. Fails if the current weather is Sunny Day.","For 5 turns, intense sunlight powers Fire moves.",Range.All,150,0,5,0,false,false,false,false,new int[]{1});
	public static final Move superfang = new Move(Type.Normal,"superfang","Super Fang","Deals damage to one adjacent target equal to half of its current HP, rounded down, but not less than 1HP. Makes contact.","Does damage equal to 1/2 target's current HP.",Range.Any1,90,0,10,0,false,false,false,false,new int[]{1});
	public static final Move superpower = new Move(Type.Fighting,"superpower","Superpower","Deals damage to one adjacent target and lowers the user's Attack and Defense by 1 stage. Makes contact.","Lowers the user's Attack and Defense by 1.",Range.Any1,100,120,5,0,false,false,false,false,new int[]{1});
	public static final Move supersonic = new Move(Type.Normal,"supersonic","Supersonic","Causes one adjacent target to become confused. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves. Pokemon with the Ability Soundproof are immune.","Confuses the target.",Range.Any1,55,0,20,0,false,false,false,false,new int[]{1});
	public static final Move surf = new Move(Type.Water,"surf","Surf","Deals damage to all adjacent Pokemon. Power doubles against Pokemon using Dive. (Field: Can be used to surf on water.)","Hits adjacent Pokemon. Power doubles on Dive.",Range.AllAdjacent,100,90,15,0,false,false,false,false,new int[]{1});
	public static final Move swagger = new Move(Type.Normal,"swagger","Swagger","Raises one adjacent target's Attack by 2 stages and confuses it. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","Boosts the target's Attack by 2 and confuses it.",Range.Any1,90,0,15,0,false,false,false,false,new int[]{1});
	public static final Move swallow = new Move(Type.Normal,"swallow","Swallow","The user restores its HP based on its Stockpile count. Restores 1/4 of its maximum HP if it's 1, 1/2 of its maximum HP if it's 2, both rounded half down, and all of its HP if it's 3. Fails if the user's Stockpile count is 0. The user's Defense and Special Defense decrease by as many stages as Stockpile had increased them, and the user's Stockpile count resets to 0.","Heals the user based on uses of Stockpile.",Range.Self,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move sweetkiss = new Move(Type.Fairy,"sweetkiss","Sweet Kiss","Causes one adjacent target to become confused. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","Confuses the target.",Range.Any1,75,0,10,0,false,false,false,false,new int[]{1});
	public static final Move sweetscent = new Move(Type.Normal,"sweetscent","Sweet Scent","Lowers all adjacent foes' evasion by 2 stages. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","Lowers the foe(s) evasion by 2.",Range.Opponent2,100,0,20,0,false,false,false,false,new int[]{1});
	public static final Move swift = new Move(Type.Normal,"swift","Swift","Deals damage to all adjacent foes and does not check accuracy.","This move does not check accuracy. Hits foes.",Range.Opponent2,150,60,20,0,false,false,false,false,new int[]{1});
	public static final Move switcheroo = new Move(Type.Dark,"switcheroo","Switcheroo","The user trades its held item with one adjacent target. Fails if either the user or the target is holding a Mail, if neither is holding an item, or if the user is trying to give or take a Griseous Orb, a Plate, a Drive, or a Mega Stone to or from a Giratina, an Arceus, a Genesect, or a pokémon able to Mega-evolve respectively. Pokemon with the Ability Sticky Hold are immune.","User switches its held item with the target's.",Range.Any1,100,0,10,0,false,false,false,false,new int[]{1});
	public static final Move swordsdance = new Move(Type.Normal,"swordsdance","Swords Dance","Raises the user's Attack by 2 stages.","Boosts the user's Attack by 2.",Range.Self,150,0,20,0,false,false,false,false,new int[]{1});
	public static final Move synchronoise = new Move(Type.Psychic,"synchronoise","Synchronoise","Deals damage to all adjacent Pokemon. This move has no effect on targets that do not share a type with the user.","Hits adjacent Pokemon sharing the user's type.",Range.AllAdjacent,100,120,15,0,false,false,false,false,new int[]{1});
	public static final Move synthesis = new Move(Type.Grass,"synthesis","Synthesis","The user restores 1/2 of its maximum HP if no weather conditions are in effect, 2/3 of its maximum HP if the weather is Sunny Day, and 1/4 of its maximum HP if the weather is Hail, Rain Dance, or Sandstorm, all rounded half down.","Heals the user by a weather-dependent amount.",Range.Self,150,0,5,0,false,false,false,false,new int[]{1});
	public static final Move tackle = new Move(Type.Normal,"tackle","Tackle","Deals damage to one adjacent target. Makes contact.","No additional effect.",Range.Any1,100,50,35,0,false,false,false,false,new int[]{1});
	public static final Move tailglow = new Move(Type.Bug,"tailglow","Tail Glow","Raises the user's Special Attack by 3 stages.","Boosts the user's Sp. Atk by 3.",Range.Self,150,0,20,0,false,false,false,false,new int[]{1});
	public static final Move tailslap = new Move(Type.Normal,"tailslap","Tail Slap","Deals damage to one adjacent target and hits two to five times. Has a 1/3 chance to hit two or three times, and a 1/6 chance to hit four or five times. If one of the hits breaks the target's Substitute, it will take damage for the remaining hits. If the user has the Ability Skill Link, this move will always hit five times. Makes contact.","Hits 2-5 times in one turn.",Range.Any1,85,25,10,0,false,false,false,false,new int[]{2,5});
	public static final Move tailwhip = new Move(Type.Normal,"tailwhip","Tail Whip","Lowers all adjacent foes' Defense by 1 stage. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","Lowers the foe(s) Defense by 1.",Range.Opponent2,100,0,30,0,false,false,false,false,new int[]{1});
	public static final Move tailwind = new Move(Type.Flying,"tailwind","Tailwind","For 4 turns, the user and its party members have their Speed doubled. Fails if this move is already in effect for the user's side.","For 4 turns, allies' Speed is doubled.",Range.AllySide,150,0,15,0,false,false,false,false,new int[]{1});
	public static final Move takedown = new Move(Type.Normal,"takedown","Take Down","Deals damage to one adjacent target. If the target lost HP, the user takes recoil damage equal to 1/4 that HP, rounded half up, but not less than 1HP. Makes contact.","Has 1/4 recoil.",Range.Any1,85,90,20,0,false,false,false,false,new int[]{1});
	public static final Move taunt = new Move(Type.Dark,"taunt","Taunt","Prevents one adjacent target from using non-damaging moves for its next three turns. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves. Ignores a target's Substitute.","For 3 turns, the target can't use status moves.",Range.Any1,100,0,20,0,false,false,false,false,new int[]{1});
	public static final Move technoblast = new Move(Type.Normal,"technoblast","Techno Blast","Deals damage to one adjacent target. This move's type depends on the user's held Drive.","Type varies based on the held Drive.",Range.Any1,100,120,5,0,false,false,false,false,new int[]{1});
	public static final Move teeterdance = new Move(Type.Normal,"teeterdance","Teeter Dance","Causes all adjacent Pokemon to become confused.","Confuses adjacent Pokemon.",Range.AllAdjacent,100,0,20,0,false,false,false,false,new int[]{1});
	public static final Move telekinesis = new Move(Type.Psychic,"telekinesis","Telekinesis","For 3 turns, one adjacent target cannot avoid any attacks made against it, other than OHKO moves, as long as it remains active. During the effect, the target is immune to Ground-type attacks and the effects of Spikes, Toxic Spikes, and the Ability Arena Trap as long as it remains active. If the target uses Baton Pass, the replacement will gain the effect. Ingrain, Smack Down, and Iron Ball override this move if the target is under any of their effects. Fails if the target is already under this effect or the effects of Ingrain or Smack Down. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves. This move cannot be used while Gravity is in effect.","For 3 turns, target floats but moves can't miss it.",Range.Any1,150,0,15,0,false,false,false,false,new int[]{1});
	public static final Move teleport = new Move(Type.Psychic,"teleport","Teleport","Fails when used. (Wild battles: The user flees the battle, unless it is a double battle. Field: Can be used to teleport to the last Pokemon Center visited.)","Flee from wild Pokemon battles.",Range.Self,150,0,20,0,false,false,false,false,new int[]{1});
	public static final Move thief = new Move(Type.Dark,"thief","Thief","Deals damage to one adjacent target. If the attack was successful and the user has not fainted, it steals the target's held item if the user is not holding one. Makes contact.","If the user has no item, it steals the target's.",Range.Any1,100,60,25,0,false,false,false,false,new int[]{1});
	public static final Move thousandarrows = new Move(Type.Ground,"thousandarrows","Thousand Arrows","Deals damage to one adjacent target. This move can hit a target using Bounce, Fly, or Sky Drop. If this move hits a target under the effect of Bounce, Fly, Magnet Rise, or Telekinesis, the effect ends. If the target is a Flying-type that has not used Roost this turn or a Pokemon with the Ability Levitate, it loses its immunity to Ground-type attacks and the Ability Arena Trap as long as it remains active. During the effect, Magnet Rise fails for the target and Telekinesis fails against the target.","Removes the target's Ground immunity.",Range.Any1,100,90,10,0,false,false,false,false,new int[]{1});
	public static final Move thousandwaves = new Move(Type.Ground,"thousandwaves","Thousand Waves","Deals damage to one adjacent target. Prevents the target from switching out.","Prevents the target from switching out.",Range.Any1,100,90,10,0,false,false,false,false,new int[]{1});
	public static final Move thrash = new Move(Type.Normal,"thrash","Thrash","Deals damage to one adjacent foe at random. The user spends two or three turns locked into this move and becomes confused after the last turn of the effect if it is not already. If the user is prevented from moving or the attack is not successful against the target on the first turn of the effect or the second turn of a three-turn effect, the effect ends without causing confusion. If this move is called by Sleep Talk, the move is used for one turn and does not confuse the user. Makes contact.","Lasts 2-3 turns. Confuses the user afterwards.",Range.Random,100,120,10,0,false,false,false,false,new int[]{1});
	public static final Move thunder = new Move(Type.Electric,"thunder","Thunder","Deals damage to one adjacent target with a 30% chance to paralyze it. This move can hit a target using Bounce, Fly, or Sky Drop. If the weather is Rain Dance, this move cannot miss. If the weather is Sunny Day, this move's accuracy is 50%.","30% chance to paralyze target. Can't miss in rain.",Range.Any1,70,110,10,0,false,false,false,true,new int[]{1});
	public static final Move thunderfang = new Move(Type.Electric,"thunderfang","Thunder Fang","Deals damage to one adjacent target with a 10% chance to paralyze it and a 10% chance to flinch it. Makes contact.","10% chance to paralyze. 10% chance to flinch.",Range.Any1,95,65,15,0,false,false,false,true,new int[]{1});
	public static final Move thunderpunch = new Move(Type.Electric,"thunderpunch","Thunder Punch","Deals damage to one adjacent target with a 10% chance to paralyze it. Makes contact. Damage is boosted to 1.2x by the Ability Iron Fist.","10% chance to paralyze the target.",Range.Any1,100,75,15,0,false,false,false,true,new int[]{1});
	public static final Move thundershock = new Move(Type.Electric,"thundershock","Thunder Shock","Deals damage to one adjacent target with a 10% chance to paralyze it.","10% chance to paralyze the target.",Range.Any1,100,40,30,0,false,false,false,true,new int[]{1});
	public static final Move thunderwave = new Move(Type.Electric,"thunderwave","Thunder Wave","Paralyzes one adjacent target. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","Paralyzes the target.",Range.Any1,100,0,20,0,false,false,false,false,new int[]{1});
	public static final Move thunderbolt = new Move(Type.Electric,"thunderbolt","Thunderbolt","Deals damage to one adjacent target with a 10% chance to paralyze it.","10% chance to paralyze the target.",Range.Any1,100,90,15,0,false,false,false,true,new int[]{1});
	public static final Move tickle = new Move(Type.Normal,"tickle","Tickle","Lowers one adjacent target's Attack and Defense by 1 stage. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","Lowers the target's Attack and Defense by 1.",Range.Any1,100,0,20,0,false,false,false,false,new int[]{1});
	public static final Move topsyturvy = new Move(Type.Dark,"topsyturvy","Topsy-Turvy","Inverts target's stat stages.","Inverts target's stat stages.",Range.Any1,150,0,20,0,false,false,false,false,new int[]{1});
	public static final Move torment = new Move(Type.Dark,"torment","Torment","Prevents one adjacent target from using the same move two turns in a row, starting next turn. This effect lasts until the target leaves the field. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves. Ignores a target's Substitute.","Target can't select the same move twice in a row.",Range.Any1,100,0,15,0,false,false,false,false,new int[]{1});
	public static final Move toxic = new Move(Type.Poison,"toxic","Toxic","Badly poisons one adjacent target. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","Badly poisons the target.",Range.Any1,90,0,10,0,false,false,false,false,new int[]{1});
	public static final Move toxicspikes = new Move(Type.Poison,"toxicspikes","Toxic Spikes","Sets up a hazard on the foe's side of the field, poisoning each foe that switches in, unless it is a Flying-type or has the Ability Levitate. Can be used up to two times before failing. Foes become poisoned with one layer and badly poisoned with two layers. Can be removed from the foe's side if any foe uses Rapid Spin, is hit by Defog, or a grounded Poison-type switches in. Safeguard prevents the foe's party from being poisoned on switch-in, but Substitute does not. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","Poisons grounded foes on switch-in. Max 2 layers.",Range.FoeSide,150,0,20,0,false,false,false,false,new int[]{1});
	public static final Move transform = new Move(Type.Normal,"transform","Transform","The user transforms into one adjacent target. The target's current stats, stat stages, types, moves, Ability, weight, gender, and sprite are copied. The user's level and HP remain the same and each copied move receives only 5PP, with a maximum of 5PP each. The user can no longer change formes if it would have the ability to do so. This move fails if the target has a Substitute, if either the user or the target has transformed previously, or if either is behind an Illusion. This move ignores Protect and Detect.","Copies target's stats, moves, types, and Ability.",Range.Any1,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move triattack = new Move(Type.Normal,"triattack","Tri Attack","Deals damage to one adjacent target with a 20% chance to either burn, freeze, or paralyze it.","20% chance to paralyze or burn or freeze target.",Range.Any1,100,80,10,0,false,false,false,true,new int[]{1});
	public static final Move trick = new Move(Type.Psychic,"trick","Trick","The user trades its held item with one adjacent target. Fails if either the user or the target is holding a Mail, if neither is holding an item, or if the user is trying to give or take a Griseous Orb, a Plate, a Drive, or a Mega Stone to or from a Giratina, an Arceus, a Genesect, or a pokémon able to Mega-evolve respectively. Pokemon with the Ability Sticky Hold are immune.","User switches its held item with the target's.",Range.Any1,100,0,10,0,false,false,false,false,new int[]{1});
	public static final Move trickortreat = new Move(Type.Ghost,"trickortreat","Trick-or-Treat","Adds Ghost to the target's type(s). If the target was affected by Forest's Curse, its Grass type is replaced.","Adds Ghost to the target's type(s).",Range.Any1,100,0,20,0,false,false,false,false,new int[]{1});
	public static final Move trickroom = new Move(Type.Psychic,"trickroom","Trick Room","For 5 turns, all active Pokemon with lower Speed will move before those with higher Speed, within their priority brackets. If this move is used during the effect, the effect ends. Priority -7.","For 5 turns, slower Pokemon move first.",Range.All,150,0,5,-7,false,false,false,false,new int[]{1});
	public static final Move triplekick = new Move(Type.Fighting,"triplekick","Triple Kick","Deals damage to one adjacent target and hits three times. The base power increases to 20 for the second hit and 30 for the third. If any of the hits misses the target, the attack ends. If one of the hits breaks the target's Substitute, it will take damage for the remaining hits. Makes contact.","Hits 3 times. Each hit can miss, but power rises.",Range.Any1,90,10,10,0,false,false,false,false,new int[]{3,3});
	public static final Move trumpcard = new Move(Type.Normal,"trumpcard","Trump Card","Deals damage to one adjacent target and does not check accuracy. The power of this move is based on the amount of PP remaining after normal PP reduction and the Ability Pressure resolve. 200 power for 0PP, 80 power for 1PP, 60 power for 2PP, 50 power for 3PP, and 40 power for 4 or more PP. Makes contact.","More power the fewer PP this move has left.",Range.Any1,150,0,5,0,false,false,false,false,new int[]{1});
	public static final Move twineedle = new Move(Type.Bug,"twineedle","Twineedle","Deals damage to one adjacent target and hits twice, with each hit having a 20% chance to poison it. If the first hit breaks the target's Substitute, it will take damage for the second hit.","Hits 2 times. Each hit has 20% chance to poison.",Range.Any1,100,25,20,0,false,false,false,true,new int[]{2,2});
	public static final Move twister = new Move(Type.Dragon,"twister","Twister","Deals damage to all adjacent foes with a 20% chance to flinch each. Power doubles against Pokemon using Bounce, Fly, or Sky Drop.","20% chance to flinch the foe(s).",Range.Opponent2,100,40,20,0,false,false,false,true,new int[]{1});
	public static final Move uturn = new Move(Type.Bug,"uturn","U-turn","Deals damage to one adjacent target. If this move is successful and the user has not fainted, the user switches out even if it is trapped and is replaced immediately by another party member. The user does not switch out if there are no unfainted party members, or if the target switched out using an Eject Button. Makes contact.","User switches out after damaging the target.",Range.Any1,100,70,20,0,false,false,false,false,new int[]{1});
	public static final Move uproar = new Move(Type.Normal,"uproar","Uproar","Deals damage to one adjacent foe at random. The user spends three turns locked into this move. On the first of the three turns, all sleeping active Pokemon wake up. During the three turns, no active Pokemon can fall asleep by any means; Pokemon switched in during the effect do not wake up. If the user is prevented from moving or the attack is not successful against the target during one of the turns, the effect ends. Pokemon with the Ability Soundproof are immune.","Lasts 3 turns. Active Pokemon cannot fall asleep.",Range.Random,100,90,10,0,false,false,false,false,new int[]{1});
	public static final Move vcreate = new Move(Type.Fire,"vcreate","V-create","Deals damage to one adjacent target and lowers the user's Defense, Special Defense, and Speed by 1 stage. Makes contact.","Lowers the user's Defense, Sp. Def, Speed by 1.",Range.Any1,95,180,5,0,false,false,false,false,new int[]{1});
	public static final Move vacuumwave = new Move(Type.Fighting,"vacuumwave","Vacuum Wave","Deals damage to one adjacent target. Priority +1.","Usually goes first.",Range.Any1,100,40,30,1,false,false,false,false,new int[]{1});
	public static final Move venomdrench = new Move(Type.Poison,"venomdrench","Venom Drench","Lowers the Attack, Special Attack, and Speed stats of a poisoned target.","Lowers Attack, Sp. Atk, Speed of poisoned target.",Range.Any1,100,0,20,0,false,false,false,false,new int[]{1});
	public static final Move venoshock = new Move(Type.Poison,"venoshock","Venoshock","Deals damage to one adjacent target. Power doubles if the target is poisoned.","Power doubles if the target is poisoned.",Range.Any1,100,65,10,0,false,false,false,false,new int[]{1});
	public static final Move vicegrip = new Move(Type.Normal,"vicegrip","Vice Grip","Deals damage to one adjacent target. Makes contact.","No additional effect.",Range.Any1,100,55,30,0,false,false,false,false,new int[]{1});
	public static final Move vinewhip = new Move(Type.Grass,"vinewhip","Vine Whip","Deals damage to one adjacent target. Makes contact.","No additional effect.",Range.Any1,100,45,25,0,false,false,false,false,new int[]{1});
	public static final Move vitalthrow = new Move(Type.Fighting,"vitalthrow","Vital Throw","Deals damage to one adjacent target and does not check accuracy. Makes contact. Priority -1.","This move does not check accuracy. Goes last.",Range.Any1,150,70,10,-1,false,false,false,false,new int[]{1});
	public static final Move voltswitch = new Move(Type.Electric,"voltswitch","Volt Switch","Deals damage to one adjacent target. If this move is successful and the user has not fainted, the user switches out even if it is trapped and is replaced immediately by another party member. The user does not switch out if there are no unfainted party members, or if the target switched out using an Eject Button.","User switches out after damaging the target.",Range.Any1,100,70,20,0,false,false,false,false,new int[]{1});
	public static final Move volttackle = new Move(Type.Electric,"volttackle","Volt Tackle","Deals damage to one adjacent target with a 10% chance to paralyze it. If the target lost HP, the user takes recoil damage equal to 33% that HP, rounded half up, but not less than 1HP. Makes contact.","Has 33% recoil. 10% chance to paralyze target.",Range.Any1,100,120,15,0,false,false,false,true,new int[]{1});
	public static final Move wakeupslap = new Move(Type.Fighting,"wakeupslap","Wake-Up Slap","Deals damage to one adjacent target. Power doubles if the target is asleep, and the target wakes up. Makes contact.","Power doubles if target is asleep, and wakes it.",Range.Any1,100,70,10,0,false,false,false,false,new int[]{1});
	public static final Move watergun = new Move(Type.Water,"watergun","Water Gun","Deals damage to one adjacent target.","No additional effect.",Range.Any1,100,40,25,0,false,false,false,false,new int[]{1});
	public static final Move waterpledge = new Move(Type.Water,"waterpledge","Water Pledge","Deals damage to one adjacent target. If one of the user's allies chose to use Fire Pledge or Grass Pledge this turn and has not moved yet, they take their turn immediately after the user and the user's move does nothing. Power goes up to 150 if this move is used by an ally that way, and a rainbow appears on the user's side if the other move was Fire Pledge, or a swamp appears on the target's side if the other move was Grass Pledge.","Use with Grass or Fire Pledge for added effect.",Range.Any1,100,80,10,0,false,false,false,false,new int[]{1});
	public static final Move waterpulse = new Move(Type.Water,"waterpulse","Water Pulse","Deals damage to one adjacent or non-adjacent target with a 10% chance to confuse it.","20% chance to confuse the target.",Range.Any1,100,60,20,0,false,false,false,true,new int[]{1});
	public static final Move watersport = new Move(Type.Water,"watersport","Water Sport","For 5 turns, all Fire-type attacks used by any active Pokemon have their power reduced to 0.33x. Fails if this move is already in effect; not stackable.","For 5 turns, Fire-type attacks have 1/3 power.",Range.All,150,0,15,0,false,false,false,false,new int[]{1});
	public static final Move waterspout = new Move(Type.Water,"waterspout","Water Spout","Deals damage to all adjacent foes. Power is equal to (user's current HP * 150 / user's maximum HP), rounded down, but not less than 1.","Less power as user's HP decreases. Hits foe(s).",Range.Opponent2,100,150,5,0,false,false,false,false,new int[]{1});
	public static final Move waterfall = new Move(Type.Water,"waterfall","Waterfall","Deals damage to one adjacent target with a 20% chance to flinch it. Makes contact. (Field: Can be used to climb a waterfall.)","20% chance to flinch the target.",Range.Any1,100,80,15,0,false,false,false,true,new int[]{1});
	public static final Move watershuriken = new Move(Type.Water,"watershuriken","Water Shuriken","Deals damage to one adjacent target and hits two to five times. Has a 1/3 chance to hit two or three times, and a 1/6 chance to hit four or five times. If one of the hits breaks the target's Substitute, it will take damage for the remaining hits. If the user has the Ability Skill Link, this move will always hit five times. Almost always goes first.","Hits 2-5 times in one turn. Priority +1.",Range.Any1,100,15,20,1,false,false,false,false,new int[]{2,5});
	public static final Move weatherball = new Move(Type.Normal,"weatherball","Weather Ball","Deals damage to one adjacent target. Power doubles during weather effects and this move's type changes to match; Ice-type during Hail, Water-type during Rain Dance, Rock-type during Sandstorm, and Fire-type during Sunny Day.","Power doubles and type varies in each weather.",Range.Any1,100,50,10,0,false,false,false,false,new int[]{1});
	public static final Move whirlpool = new Move(Type.Water,"whirlpool","Whirlpool","Deals damage to one adjacent target and prevents it from switching for four or five turns; seven turns if the user is holding Grip Claw. Power doubles if the target is using Dive. Causes damage to the target equal to 1/8 of its maximum HP (1/6 if the user is holding Binding Band), rounded down, at the end of each turn during effect. The target can still switch out if it is holding Shed Shell or uses Baton Pass, U-turn, or Volt Switch. The effect ends if either the user or the target leaves the field, or if the target uses Rapid Spin. This effect is not stackable or reset by using this or another partial-trapping move.","Traps and damages the target for 4-5 turns.",Range.Any1,85,35,15,0,false,false,false,false,new int[]{1});
	public static final Move whirlwind = new Move(Type.Normal,"whirlwind","Whirlwind","Causes one adjacent target to be forced to switch out and be replaced with a random unfainted ally. Fails if the target used Ingrain previously or has the Ability Suction Cups. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves. Ignores a target's Substitute. Priority -6. (Wild battles: The battle ends as long as it is not a double battle and the user's level is not less than the opponent's level.)","Forces the target to switch to a random ally.",Range.Any1,150,0,20,-6,false,false,false,false,new int[]{1});
	public static final Move wideguard = new Move(Type.Rock,"wideguard","Wide Guard","The user and its party members are protected from damaging attacks made by other Pokemon, including allies, during this turn that target all adjacent foes or all adjacent Pokemon. Fails if this move is already in effect for the user's side. Priority +3.","Protects allies from multi-target hits this turn.",Range.AllySide,150,0,10,3,false,false,false,false,new int[]{1});
	public static final Move wildcharge = new Move(Type.Electric,"wildcharge","Wild Charge","Deals damage to one adjacent target. If the target lost HP, the user takes recoil damage equal to 1/4 that HP, rounded half up, but not less than 1HP. Makes contact.","Has 1/4 recoil.",Range.Any1,100,90,15,0,false,false,false,false,new int[]{1});
	public static final Move willowisp = new Move(Type.Fire,"willowisp","Will-O-Wisp","Burns one adjacent target. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","Burns the target.",Range.Any1,85,0,15,0,false,false,false,false,new int[]{1});
	public static final Move wingattack = new Move(Type.Flying,"wingattack","Wing Attack","Deals damage to one adjacent or non-adjacent target. Makes contact.","No additional effect.",Range.Any1,100,60,35,0,false,false,false,false,new int[]{1});
	public static final Move wish = new Move(Type.Normal,"wish","Wish","At the end of the next turn, the Pokemon at the user's position has 1/2 of the user's maximum HP restored to it, rounded half up. Fails if this move is already in effect for the user's position.","Next turn, 50% of the user's max HP is restored.",Range.Self,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move withdraw = new Move(Type.Water,"withdraw","Withdraw","Raises the user's Defense by 1 stage.","Boosts the user's Defense by 1.",Range.Self,150,0,40,0,false,false,false,false,new int[]{1});
	public static final Move wonderroom = new Move(Type.Psychic,"wonderroom","Wonder Room","For 5 turns, all active Pokemon have their Defense and Special Defense stats swapped. Stat stage changes are unaffected. If this move is used during the effect, the effect ends.","For 5 turns, all Defense and Sp. Def stats switch.",Range.All,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move woodhammer = new Move(Type.Grass,"woodhammer","Wood Hammer","Deals damage to one adjacent target. If the target lost HP, the user takes recoil damage equal to 33% that HP, rounded half up, but not less than 1HP. Makes contact.","Has 33% recoil.",Range.Any1,100,120,15,0,false,false,false,false,new int[]{1});
	public static final Move workup = new Move(Type.Normal,"workup","Work Up","Raises the user's Attack and Special Attack by 1 stage.","Boosts the user's Attack and Sp. Atk by 1.",Range.Self,150,0,30,0,false,false,false,false,new int[]{1});
	public static final Move worryseed = new Move(Type.Grass,"worryseed","Worry Seed","Causes one adjacent target's Ability to become Insomnia. Fails if the target's Ability is Insomnia, Multitype, Stance Change or Truant. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","The target's Ability becomes Insomnia.",Range.Any1,100,0,10,0,false,false,false,false,new int[]{1});
	public static final Move wrap = new Move(Type.Normal,"wrap","Wrap","Deals damage to one adjacent target and prevents it from switching for four or five turns; seven turns if the user is holding Grip Claw. Causes damage to the target equal to 1/8 of its maximum HP (1/6 if the user is holding Binding Band), rounded down, at the end of each turn during effect. The target can still switch out if it is holding Shed Shell or uses Baton Pass, U-turn, or Volt Switch. The effect ends if either the user or the target leaves the field, or if the target uses Rapid Spin. This effect is not stackable or reset by using this or another partial-trapping move. Makes contact.","Traps and damages the target for 4-5 turns.",Range.Any1,90,15,20,0,false,false,false,false,new int[]{1});
	public static final Move wringout = new Move(Type.Normal,"wringout","Wring Out","Deals damage to one adjacent target. Power is equal to 120 * (target's current HP / target's maximum HP), rounded half down, but not less than 1. Makes contact.","More power the more HP the target has left.",Range.Any1,100,0,5,0,false,false,false,false,new int[]{1});
	public static final Move xscissor = new Move(Type.Bug,"xscissor","X-Scissor","Deals damage to one adjacent target. Makes contact.","No additional effect.",Range.Any1,100,80,15,0,false,false,false,false,new int[]{1});
	public static final Move yawn = new Move(Type.Normal,"yawn","Yawn","Causes one adjacent target to fall asleep at the end of the next turn. If the target is still on the field and does not have a major status problem at that time, it falls asleep, and this effect cannot be prevented by Safeguard or Substitute. Fails if the target cannot fall asleep or if it already has a major status problem. Pokemon protected by Magic Coat or the Ability Magic Bounce are unaffected and instead use this move themselves.","Puts the target to sleep after 1 turn.",Range.Any1,150,0,10,0,false,false,false,false,new int[]{1});
	public static final Move zapcannon = new Move(Type.Electric,"zapcannon","Zap Cannon","Deals damage to one adjacent target with a 100% chance to paralyze it.","100% chance to paralyze the target.",Range.Any1,50,120,5,0,false,false,false,true,new int[]{1});
	public static final Move zenheadbutt = new Move(Type.Psychic,"zenheadbutt","Zen Headbutt","Deals damage to one adjacent target with a 20% chance to flinch it. Makes contact.","20% chance to flinch the target.",Range.Any1,90,80,15,0,false,false,false,true,new int[]{1});
	public static final Move paleowave = new Move(Type.Rock,"paleowave","Paleo Wave","Deals damage to one adjacent target with a 20% chance to lower its Attack by 1 stage.","20% chance to lower the target's Attack by 1.",Range.Any1,100,85,15,0,false,false,false,true,new int[]{1});
	public static final Move shadowstrike = new Move(Type.Ghost,"shadowstrike","Shadow Strike","Deals damage to one adjacent target with a 50% chance to lower its Defense by 1 stage. Makes contact.","50% chance to lower the target's Defense by 1.",Range.Any1,95,80,10,0,false,false,false,true,new int[]{1});
	public static final Move magikarpsrevenge = new Move(Type.Water,"magikarpsrevenge","Magikarp's Revenge","Deals damage to one adjacent target with a 100% chance to confuse it and lower its Defense and Special Attack by 1 stage. The user recovers half of the HP lost by the target, rounded up. If Big Root is held by the user, the HP recovered is 1.3x normal, rounded half down. If this move is successful, the weather changes to Rain Dance for 5 turns unless Rain Dance is already in effect, the user gains the effects of Aqua Ring and Magic Coat, and the user must recharge on the following turn and cannot make a move. Makes contact.","Does many things turn 1. Can't move turn 2.",Range.Any1,150,120,10,0,false,false,false,true,new int[]{1});
}
